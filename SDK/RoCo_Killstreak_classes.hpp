#pragma once

// Rogue Company (0.60) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "RoCo_Killstreak_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class Killstreak.AkPoolComponent
// 0x0078 (0x0148 - 0x00D0)
class UAkPoolComponent : public UBasePoolComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	class UClass*                                      PooledAkComponentClass;                                   // 0x00D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UAkComponent*>                        UnusedComponentsArray;                                    // 0x00E0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x00F0(0x0050) UNKNOWN PROPERTY: UsedComponentsSet
	class UAkComponent*                                PeekedAkComponent;                                        // 0x0140(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AkPoolComponent");
		return ptr;
	}

};


// Class Killstreak.AnimNotifyState_DirectionSwap
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_DirectionSwap : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AnimNotifyState_DirectionSwap");
		return ptr;
	}

};


// Class Killstreak.AnimNotifyState_LeftHandIKOff
// 0x0000 (0x0030 - 0x0030)
class UAnimNotifyState_LeftHandIKOff : public UAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AnimNotifyState_LeftHandIKOff");
		return ptr;
	}

};


// Class Killstreak.ItemCollection
// 0x0068 (0x0098 - 0x0030)
class UItemCollection : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0030(0x000C) (CPF_Edit, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FGameplayTagQuery                           CollectionQuery;                                          // 0x0040(0x0048) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PrimaryAssetType;                                         // 0x0088(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0090(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ItemCollection");
		return ptr;
	}

};


// Class Killstreak.ApparelCollection
// 0x0040 (0x00D8 - 0x0098)
class UApparelCollection : public UItemCollection
{
public:
	struct FText                                       ApparelCollectionName;                                    // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       ApparelCollectionDescription;                             // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ApparelCollection");
		return ptr;
	}

};


// Class Killstreak.AttachmentCollection
// 0x00B0 (0x0148 - 0x0098)
class UAttachmentCollection : public UItemCollection
{
public:
	struct FText                                       AttachmentCollectionName;                                 // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       AttachmentCollectionDescription;                          // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x80];                                      // 0x00C8(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AttachmentCollection");
		return ptr;
	}


	void GetCompatibleAttachmentsForWeaponType(const struct FGameplayTag& WeaponType, TArray<TSoftObjectPtr<class UKSWeaponAttachment>>* OutCompatibleAttachments);
};


// Class Killstreak.BakedOcclusionLUT
// 0x0088 (0x00B0 - 0x0028)
class UBakedOcclusionLUT : public UObject
{
public:
	TMap<uint32_t, unsigned char>                      LUT;                                                      // 0x0028(0x0050) (CPF_NativeAccessSpecifierPublic)
	TArray<uint16_t>                                   OctreeSampleMap;                                          // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FIntVector>                          OctreeLocations;                                          // 0x0088(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceOutputMin;                                        // 0x0098(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceOutputMax;                                        // 0x009C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceMin;                                              // 0x00A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DistanceMax;                                              // 0x00A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              fOcclusionMultiplier;                                     // 0x00A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              fOcclusionDistanceMultiplier;                             // 0x00AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.BakedOcclusionLUT");
		return ptr;
	}

};


// Class Killstreak.AudioOcclusionComponent
// 0x0008 (0x00B8 - 0x00B0)
class UAudioOcclusionComponent : public UActorComponent
{
public:
	class UBakedOcclusionLUT*                          LUT;                                                      // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AudioOcclusionComponent");
		return ptr;
	}


	float GetPathedOcclusion(const struct FVector& Other);
};


// Class Killstreak.EchoBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UEchoBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.EchoBlueprintLibrary");
		return ptr;
	}


	static void RequestEchoFromActor(class UObject* WorldContextObject, class UAkAudioEvent* EchoEvent, class AActor* OriginActor, float ZOffset, float SpeedOfSound, int NumberOfEchosToTrace, float EchoTraceRange, bool bAllowPostAtMaxDistance);
	static void RequestEcho(class UObject* WorldContextObject, class UAkAudioEvent* EchoEvent, const struct FVector& EchoOrigin, const struct FRotator& EchoOrientation, float SpeedOfSound, int NumberOfEchosToTrace, float EchoTraceRange, bool bAllowPostAtMaxDistance);
};


// Class Killstreak.EnvironmentActorInterface
// 0x0000 (0x0028 - 0x0028)
class UEnvironmentActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.EnvironmentActorInterface");
		return ptr;
	}


	void TrackerLeave(class UEnvironmentTrackerComponent* Tracker);
	void TrackerEnter(class UEnvironmentTrackerComponent* Tracker);
	struct FName GetEnvironmentTag();
};


// Class Killstreak.EnvironmentListenerComponent
// 0x0018 (0x00C8 - 0x00B0)
class UEnvironmentListenerComponent : public UActorComponent
{
public:
	struct FName                                       CurrentEnvironmentTag;                                    // 0x00B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       StartingEnvironment;                                      // 0x00B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UEnvironmentTrackerComponent> LastTrackerComponent;                                     // 0x00C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.EnvironmentListenerComponent");
		return ptr;
	}


	void ViewTargetEnvironmentChanged(const struct FName& OldEnvironmentTag, const struct FName& NewEnvironmentTag);
	void OnEnvironmentChanged(const struct FName& OldEnvironmentTag);
	struct FName GetCurrentEnvironment();
};


// Class Killstreak.EnvironmentTrackerComponent
// 0x0088 (0x0138 - 0x00B0)
class UEnvironmentTrackerComponent : public UActorComponent
{
public:
	TArray<class UObject*>                             EnvironmentVolumes;                                       // 0x00B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, int>                            CachedEnvironmentCounts;                                  // 0x00C0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CachedCurrentEnvironment;                                 // 0x0110(0x0008) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LastEnvironment;                                          // 0x0118(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       DefaultEnvironment;                                       // 0x0120(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEnvironmentChanged;                                     // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.EnvironmentTrackerComponent");
		return ptr;
	}


	struct FName ReevalulateEnvironment();
	void OnRep_CurrentEnvironment();
	struct FName GetCurrentEnvironment();
	void EndTouchingOwnerUpdatedComponent(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BlueprintEnvironmentChanged(const struct FName& OldEnvironment);
	void BeginTouchingOwnerUpdatedComponent(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Killstreak.EnvironmentVolume
// 0x0010 (0x0268 - 0x0258)
class AEnvironmentVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET
	struct FName                                       EnvironmentTag;                                           // 0x0260(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.EnvironmentVolume");
		return ptr;
	}

};


// Class Killstreak.PreviewActorLoadoutComponent
// 0x0008 (0x00B8 - 0x00B0)
class UPreviewActorLoadoutComponent : public UActorComponent
{
public:
	class AKSJobSelectPreviewActor*                    PreviewActorOwner;                                        // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.PreviewActorLoadoutComponent");
		return ptr;
	}

};


// Class Killstreak.RogueScreenLoadoutComponent
// 0x0068 (0x0120 - 0x00B8)
class URogueScreenLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                               // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSkinBundle*                               OverrideSkin;                                             // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x00C8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bBoundToLoadoutFactory;                                   // 0x0118(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	int                                                LastLoadoutId;                                            // 0x011C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.RogueScreenLoadoutComponent");
		return ptr;
	}


	void LoadoutDeleted(int InLoadoutId);
	void LoadoutChanged(class UPUMG_Loadout* InLoadout);
};


// Class Killstreak.FavoritePreviewLoadoutComponent
// 0x0028 (0x0148 - 0x0120)
class UFavoritePreviewLoadoutComponent : public URogueScreenLoadoutComponent
{
public:
	TSoftObjectPtr<class UKSJobItem>                   FailSafeFavoriteJob;                                      // 0x0120(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.FavoritePreviewLoadoutComponent");
		return ptr;
	}


	void CheckForPreferredJobChange(class UPUMG_Loadout* InLoadout);
};


// Class Killstreak.IconInfo
// 0x0000 (0x0028 - 0x0028)
class UIconInfo : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.IconInfo");
		return ptr;
	}

};


// Class Killstreak.ImageIconInfo
// 0x0048 (0x0070 - 0x0028)
class UImageIconInfo : public UIconInfo
{
public:
	struct FSoftObjectPath                             IconImage;                                                // 0x0028(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   LegacyIconTexture;                                        // 0x0040(0x0028) (CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0068(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ImageIconInfo");
		return ptr;
	}

};


// Class Killstreak.JobCollection
// 0x0040 (0x00D8 - 0x0098)
class UJobCollection : public UItemCollection
{
public:
	struct FText                                       CollectionName;                                           // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       CollectionDescription;                                    // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.JobCollection");
		return ptr;
	}

};


// Class Killstreak.KSJobRole
// 0x0048 (0x0078 - 0x0030)
class UKSJobRole : public UDataAsset
{
public:
	struct FText                                       JobRoleDisplayName;                                       // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FName                                       JobRoleName;                                              // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       JobRoleDescription;                                       // 0x0050(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	int                                                JobRoleSortOrder;                                         // 0x0068(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UTexture2D*                                  JobRoleIcon;                                              // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobRole");
		return ptr;
	}


	class UTexture2D* GetRoleIcon();
};


// Class Killstreak.KickbackModule
// 0x0000 (0x0028 - 0x0028)
class UKickbackModule : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KickbackModule");
		return ptr;
	}


	struct FInterpCurveVector2D MakeKickbackInstance(int ShotIndex, float AbsoluteMaxDuration);
	float GetMaximumVerticalKick();
	float GetMaximumHorizontalKick();
};


// Class Killstreak.KickbackModuleRandom
// 0x0018 (0x0040 - 0x0028)
class UKickbackModuleRandom : public UKickbackModule
{
public:
	float                                              MinAmplitude;                                             // 0x0028(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxAmplitude;                                             // 0x002C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinDuration;                                              // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDuration;                                              // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxOffsetFromVertical;                                    // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KickbackModuleRandom");
		return ptr;
	}

};


// Class Killstreak.Killstreak_ShippingConsole
// 0x0000 (0x0138 - 0x0138)
class UKillstreak_ShippingConsole : public UPGame_ShippingConsole
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.Killstreak_ShippingConsole");
		return ptr;
	}

};


// Class Killstreak.KillstreakGameSingleton
// 0x0060 (0x0088 - 0x0028)
class UKillstreakGameSingleton : public UPlatformGameSingleton
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KillstreakGameSingleton");
		return ptr;
	}

};


// Class Killstreak.KSAccoladeTracker
// 0x0070 (0x0098 - 0x0028)
class UKSAccoladeTracker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	struct FAccoladeDisplayInfo                        AccoladeDisplayInfo;                                      // 0x0038(0x0060) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAccoladeTracker");
		return ptr;
	}


	void StartTracking();
	void ResetTracker();
	void NativeHandleElimEvent(const struct FCombatEventInfo& ElimEvent);
	void NativeHandleDownEvent(const struct FCombatEventInfo& DownEvent);
	void HandleElimEvent(const struct FCombatEventInfo& ElimEvent);
	void HandleDownEvent(const struct FCombatEventInfo& DownEvent);
	struct FAccoladeDisplayInfo GetPrimaryAccoladeDisplayInfo();
	bool GetOwningGameMode(class AKSGameMode** OutGameMode);
	void DispatchGameStateAccoladeDisplay(class AKSPlayerState* RelevantPlayer, const struct FAccoladeDisplayInfo& AccoladeToDisplay, bool IgnoreRelevantPlayerId);
};


// Class Killstreak.AcquisitionItemData
// 0x0010 (0x0038 - 0x0028)
class UAcquisitionItemData : public UObject
{
public:
	class UPUMG_StoreItem*                             StoreItem;                                                // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                Quantity;                                                 // 0x0030(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.AcquisitionItemData");
		return ptr;
	}

};


// Class Killstreak.KSEquipOnAcquisitionData
// 0x0020 (0x0048 - 0x0028)
class UKSEquipOnAcquisitionData : public UObject
{
public:
	int                                                LoadoutTypeId;                                            // 0x0028(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LoadoutSlotTypeId;                                        // 0x002C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LoadoutSlotPosition;                                      // 0x0030(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UKSJobItem*                                  JobToEquipTo;                                             // 0x0038(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSItem*                                     ItemToEquip;                                              // 0x0040(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipOnAcquisitionData");
		return ptr;
	}

};


// Class Killstreak.KSAcquisition
// 0x0038 (0x0060 - 0x0028)
class UKSAcquisition : public UObject
{
public:
	EKSAcquisitionType                                 AcquisitionType;                                          // 0x0028(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<class UAcquisitionItemData*>                AcquisitionItems;                                         // 0x0030(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSJobItem*                                  DisplayedJob;                                             // 0x0040(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0048(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAcquisition");
		return ptr;
	}


	void SortAcquisitionItemsBySortOrder();
	void SortAcquisitionItemsByBattlePassDisplayOrder();
	bool IsPurchase();
	bool IsBundleAcquisition();
};


// Class Killstreak.KSAcquisitionManager
// 0x0040 (0x0090 - 0x0050)
class UKSAcquisitionManager : public UPUMG_AcquisitionManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAcquisitionReady;                                       // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<class UKSAcquisition*>                      QueuedAcquisitions;                                       // 0x0068(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAcquisition*                              PendingAcquisition;                                       // 0x0078(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSEquipOnAcquisitionData*>           PendingEquipables;                                        // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAcquisitionManager");
		return ptr;
	}


	void SetupEventGrandPrizeTestAcquisition();
	void SetupBattlePassTestAcquisition(int StartTier, int EndTier);
	class UKSAcquisition* GetNextAcquistion();
	void CreateAcquisitionForItem(class UPUMG_StoreItem* StoreItem);
};


// Class Killstreak.KSActivity
// 0x01E8 (0x03A0 - 0x01B8)
class UKSActivity : public UPlatformInventoryItem
{
public:
	int64_t                                            ProgressLootId;                                           // 0x01B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            RemoveProgressLootId;                                     // 0x01C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            SetProgressLootId;                                        // 0x01C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            ResetProgressLootId;                                      // 0x01D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            SpecialLootId;                                            // 0x01D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            RewardVendorId;                                           // 0x01E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            RewardXpTableId;                                          // 0x01E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            SortOrder;                                                // 0x01F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<int64_t>                                    EntitlementItemIds;                                       // 0x01F8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSActivity>>          ChildActivities;                                          // 0x0208(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       TrackerClass;                                             // 0x0218(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        TrackerConfig;                                            // 0x0240(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, struct FString>               TrackerStringConfig;                                      // 0x0290(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsClientAuthority;                                       // 0x02E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCreateTrackerIfFinished;                                 // 0x02E1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCreateInstanceIfInvalid;                                 // 0x02E2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysPackageActivityIfCreated;                          // 0x02E3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	struct FActivityAchievementInfo                    AchievementInfo;                                          // 0x02E8(0x0058) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	EKSActivityProgressDisplayType                     ProgressDisplayPreference;                                // 0x0340(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSActivityClientNotifyFrequency                   ClientNotifyFrequency;                                    // 0x0341(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0342(0x0006) MISSED OFFSET
	TArray<struct FActivityTierStructure>              ActivityTierData;                                         // 0x0348(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowInPostMatchLobby;                                    // 0x0358(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableAfterJobChange;                                   // 0x0359(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsOwnableItem;                                           // 0x035A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldDisplay;                                           // 0x035B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<class UKSActivityComponent*>                ActivityComponents;                                       // 0x0360(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UKSActivityRequirement*>              ActivityRequirements;                                     // 0x0370(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UKSActivityRewardCondition*>          ActivityRewardConditions;                                 // 0x0380(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                        ActivityTypes;                                            // 0x0390(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivity");
		return ptr;
	}


	bool MatchesTags(TArray<struct FGameplayTag> ActivityTags);
	bool MatchesTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value);
	bool MatchesTagAndInt(const struct FGameplayTag& ActivityTag, int Value);
	bool MatchesTag(const struct FGameplayTag& ActivityTag);
	bool IsUnlocked(class AKSPlayerController* PlayerController);
	bool IsTriggerConditionMet(int64_t PlayerId, class UWorld* World);
	bool IsCombatConditionMet(const struct FCombatEventInfo& DamageInfo);
	bool GetTierDataForProgress(int Progress, struct FActivityTierStructure* TierData);
	class UKSActivityComponent_MercMastery* GetMercMasteryComponent();
	class UKSActivityComponent_LoginReward* GetLoginRewardComponent();
	class UKSActivityComponent_Job* GetJobComponent();
	class UKSActivityInstance* GetInstanceForPlayer(class UObject* WorldContextObject, class AKSPlayerController* Player);
	class UKSActivityComponent_Challenge* GetChallengeComponent();
	class UKSActivityComponent_BattlePass* GetBattlePassComponent();
	class UKSActivityComponent_Achievement* GetAchievementComponent();
	bool CanSubtractProgress(int64_t PlayerId, class UWorld* World);
	bool CanAddProgress(int64_t PlayerId, class UWorld* World);
};


// Class Killstreak.KSActivityComponent
// 0x0000 (0x0030 - 0x0030)
class UKSActivityComponent : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent");
		return ptr;
	}

};


// Class Killstreak.KSActivityComponent_Achievement
// 0x0000 (0x0030 - 0x0030)
class UKSActivityComponent_Achievement : public UKSActivityComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_Achievement");
		return ptr;
	}

};


// Class Killstreak.KSActivityComponent_BattlePass
// 0x0080 (0x00B0 - 0x0030)
class UKSActivityComponent_BattlePass : public UKSActivityComponent
{
public:
	EKSBattlePassProgressionActivityType               ReferenceType;                                            // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FGameplayTag                                SeasonTag;                                                // 0x0034(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	int64_t                                            PremiumPassItemId;                                        // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            PremiumRewardVendorId;                                    // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            LevelPurchaseLootId;                                      // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int64_t                                            InstantUnlockRewardVendorId;                              // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   FreeIcon;                                                 // 0x0060(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   PremiumIcon;                                              // 0x0088(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_BattlePass");
		return ptr;
	}

};


// Class Killstreak.KSActivityComponent_Challenge
// 0x0008 (0x0038 - 0x0030)
class UKSActivityComponent_Challenge : public UKSActivityComponent
{
public:
	bool                                               DailyChallenge;                                           // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_Challenge");
		return ptr;
	}


	bool IsDailyChallenge();
	int GetRerollLootId(class UKSActivity* OwningActivity);
};


// Class Killstreak.KSActivityComponent_Job
// 0x0028 (0x0058 - 0x0030)
class UKSActivityComponent_Job : public UKSActivityComponent
{
public:
	TSoftObjectPtr<class UKSJobItem>                   JobItem;                                                  // 0x0030(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_Job");
		return ptr;
	}


	void LoadJobItem();
	class UKSJobItem* GetJobItem();
};


// Class Killstreak.KSActivityComponent_LoginReward
// 0x0000 (0x0030 - 0x0030)
class UKSActivityComponent_LoginReward : public UKSActivityComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_LoginReward");
		return ptr;
	}


	bool CanGrabNewLoginReward();
	void AttemptClaimLoginReward();
};


// Class Killstreak.KSActivityComponent_MercMastery
// 0x0048 (0x0078 - 0x0030)
class UKSActivityComponent_MercMastery : public UKSActivityComponent
{
public:
	struct FGameplayTag                                MercMasteryStatTag;                                       // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   Icon;                                                     // 0x0038(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       DisplayName;                                              // 0x0060(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityComponent_MercMastery");
		return ptr;
	}

};


// Class Killstreak.KSActivityInstance
// 0x0250 (0x0278 - 0x0028)
class UKSActivityInstance : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnProgressIncremented;                                    // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressTierReached;                                    // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressCompleted;                                      // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnProgressInitialized;                                    // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UKSEventTracker*                             TrackerInstance;                                          // 0x0068(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ProgressCount;                                            // 0x0070(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasProgressBeenInitialized;                               // 0x0074(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	TArray<struct FActivityTier>                       ActivityTiers;                                            // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0088(0x0020) MISSED OFFSET
	TWeakObjectPtr<class AKSPlayerController>          PlayerController;                                         // 0x00A8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSActivity*                                 Activity;                                                 // 0x00B0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSActivityInstance*>                 ChildActivityInstances;                                   // 0x00B8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSActivityManagerBase>       ActivityManager;                                          // 0x00C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInitialized;                                           // 0x00D0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x00D1(0x0001) MISSED OFFSET
	bool                                               bIsChildActivity;                                         // 0x00D2(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x1];                                       // 0x00D3(0x0001) MISSED OFFSET
	int                                                InitialProgress;                                          // 0x00D4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ProgressEarned;                                           // 0x00D8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldSetProgress;                                        // 0x00DC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	TMap<struct FString, double>                       PlatformProgressPerAchievement;                           // 0x00E0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<ERewardSource, float>                         ProgressEarnedBySource;                                   // 0x0130(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        ProgressEarnedByEvent;                                    // 0x0180(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        ProgressEarnedByBooster;                                  // 0x01D0(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, float>                        ExtraData;                                                // 0x0220(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityInstance");
		return ptr;
	}


	void UpdateActivityTiers();
	bool SetProgress(int Count);
	bool ResetProgress();
	void RerollActivity();
	void PromptRerollActivity(class APUMG_HUD* HUD);
	void OnEventTrackerTriggered(int Count);
	bool IsUnlocked();
	bool IsFinished();
	bool IsActive();
	bool IncrementProgress(int Count);
	bool HasAuthority();
	int GetTotalProgressForCurrentTier();
	void GetTiersForXpRange(int StartingCount, int EndingCount, TArray<struct FActivityTier>* Tiers);
	void GetTiers(TArray<struct FActivityTier>* Tiers);
	bool GetTierDataForProgress(int Progress, struct FActivityTierStructure* TierData);
	bool GetTierCompletionTime(class UObject* WorldContextObject, const struct FActivityTier& Tier, struct FDateTime* TimeCompleted);
	struct FActivityTier GetProgressTierForSpecifiedProgressCount(int SpecifiedCount);
	struct FActivityTier GetProgressTier();
	bool GetProgressPercentageToNextTier(float* ProgressPercentage);
	bool GetProgressPercentageToMaxTier(float* ProgressPercentage);
	float GetProgressFromSource(ERewardSource Source);
	float GetProgressFromEvent(const struct FString& EventName);
	float GetProgressFromBooster(const struct FString& BoosterName);
	int GetProgressEarned();
	struct FText GetProgressDisplayText(EKSActivityProgressDisplayType DisplayType);
	int GetProgressCount();
	int64_t GetPlayerId();
	struct FActivityTier GetNextTier();
	bool GetMaxTier(struct FActivityTier* MaxTier);
	struct FDateTime GetLastProgressTime();
	int GetInventoryProgressCount();
	struct FInventoryId GetInventoryId();
	int GetInitialProgress();
	float GetExtraDataEntry(const struct FString& ExtraDataKey);
	int GetDisplayProgess();
	int GetDisplayCompletionProgress();
	void CreateTracker();
	bool CanRerollActivity();
};


// Class Killstreak.KSActivityInstanceManager
// 0x00A0 (0x00C8 - 0x0028)
class UKSActivityInstanceManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0028(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityInstanceManager");
		return ptr;
	}

};


// Class Killstreak.KSActivityManagerBase
// 0x01E8 (0x0210 - 0x0028)
class UKSActivityManagerBase : public UObject
{
public:
	TWeakObjectPtr<class UKSGameInstance>              GameInstance;                                             // 0x0028(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSGameMode>                  GameMode;                                                 // 0x0030(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0038(0x00A0) MISSED OFFSET
	TMap<int64_t, class UKSPlayerActivityInstanceContainer*> ActivityInstancesPerPlayer;                               // 0x00D8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0128(0x0050) MISSED OFFSET
	int                                                VendorsLoadGroupId;                                       // 0x0178(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSActivity>>          Activities;                                               // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AKSPlayerController>>  PlayerControllers;                                        // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x50];                                      // 0x01A0(0x0050) MISSED OFFSET
	EKSActivityManagerSetupPhase                       SetupPhase;                                               // 0x01F0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x1F];                                      // 0x01F1(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityManagerBase");
		return ptr;
	}


	void RequestActivitiesLoad();
	bool QueryActivityInstancesByTime(TArray<class UKSActivityInstance*> ActivityInstances, const struct FTimespan& TimeWindow, EKSActivityTimeQueryType QueryType, TArray<class UKSActivityInstance*>* Results);
	bool QueryActivityInstances(TArray<class UKSActivityInstance*> ActivityInstances, EKSActivityInstanceQueryType QueryType, TArray<class UKSActivityInstance*>* Results);
	void OnStoreVendorsLoaded(int GroupId, TArray<int> VendorIds);
	void OnSetupPhaseStarted(EKSActivityManagerSetupPhase Phase);
	void OnSetupPhaseFinished(EKSActivityManagerSetupPhase Phase);
	void OnServerPlayerPostLogin(class AGameModeBase* InGameMode, class APlayerController* NewPlayer);
	void OnServerPlayerLogout(class AGameModeBase* InGameMode, class AController* Player);
	void OnGameModePhaseChanged(const struct FName& PreviousPhaseName, const struct FName& NewPhaseName);
	void OnGameModeInitialized(class AGameModeBase* InGameMode);
	void OnClientLoggedIn();
	void OnAllActivitiesLoaded();
	bool IsSetupFinished();
	void GoToNextSetupPhase();
	bool GetActivityInstancesByTags(TArray<struct FGameplayTag> ActivityTags, class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	bool GetActivityInstancesByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	bool GetActivityInstancesByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	bool GetActivityInstancesByTag(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	class UKSActivityInstance* GetActivityInstanceByTags(TArray<struct FGameplayTag> ActivityTags, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByTag(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetActivityInstanceByItemId(int64_t ItemId, class AKSPlayerController* Player, int64_t InPlayerNetId);
	class UKSActivityInstance* GetActivityInstanceByInventoryId(const struct FInventoryId& InventoryId);
	class UKSActivity* GetActivityByTags(TArray<struct FGameplayTag> ActivityTags);
	class UKSActivity* GetActivityByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value);
	class UKSActivity* GetActivityByTagAndInt(const struct FGameplayTag& ActivityTag, int Value);
	class UKSActivity* GetActivityByTag(const struct FGameplayTag& ActivityTag);
	bool GetActivitiesByTags(TArray<struct FGameplayTag> ActivityTags, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTagAndString(const struct FGameplayTag& ActivityTag, const struct FString& Value, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTagAndInt(const struct FGameplayTag& ActivityTag, int Value, TArray<class UKSActivity*>* OutActivities);
	bool GetActivitiesByTag(const struct FGameplayTag& ActivityTag, TArray<class UKSActivity*>* OutActivities);
	bool GetActiveActivityInstancesByTag(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	bool DoesRequireSetupPhase(EKSActivityManagerSetupPhase Phase);
	void CompleteActivityByTag(const struct FGameplayTag& ActivityTag);
	void AttemptInitialActivityCreation();
};


// Class Killstreak.KSActivityRequirement
// 0x0000 (0x0030 - 0x0030)
class UKSActivityRequirement : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Achievements
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Achievements : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                           // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Achievements");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_ActivitySelected
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_ActivitySelected : public UKSActivityRequirement
{
public:
	TArray<int>                                        SelectedStatusItemIds;                                    // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_ActivitySelected");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_AiPvp
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_AiPvp : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                           // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_AiPvp");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_BattlePass
// 0x0000 (0x0030 - 0x0030)
class UKSActivityRequirement_BattlePass : public UKSActivityRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_BattlePass");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Booster
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Booster : public UKSActivityRequirement
{
public:
	int                                                RequiredActiveBoosterId;                                  // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Booster");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_CustomMatch
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_CustomMatch : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                           // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_CustomMatch");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_DailyChallenge
// 0x0000 (0x0030 - 0x0030)
class UKSActivityRequirement_DailyChallenge : public UKSActivityRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_DailyChallenge");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Event
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_Event : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredEventName;                                        // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Event");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_GameMode
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_GameMode : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredGameMode;                                         // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_GameMode");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_GameModeTag
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_GameModeTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredGameModeTag;                                      // 0x0030(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               TrueIfMatches;                                            // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_GameModeTag");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Item
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Item : public UKSActivityRequirement
{
public:
	int                                                RequiredOwnedItemId;                                      // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                RequiredItemQuantity;                                     // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Item");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Job
// 0x0028 (0x0058 - 0x0030)
class UKSActivityRequirement_Job : public UKSActivityRequirement
{
public:
	TSoftObjectPtr<class UKSItem>                      RequiredJob;                                              // 0x0030(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Job");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_JobTag
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_JobTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredJobTag;                                           // 0x0030(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_JobTag");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Map
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_Map : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredMap;                                              // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Map");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_MapTag
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_MapTag : public UKSActivityRequirement
{
public:
	struct FGameplayTag                                RequiredMapTag;                                           // 0x0030(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_MapTag");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_MiniBattlePass
// 0x0000 (0x0030 - 0x0030)
class UKSActivityRequirement_MiniBattlePass : public UKSActivityRequirement
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_MiniBattlePass");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_MultiItem
// 0x0018 (0x0048 - 0x0030)
class UKSActivityRequirement_MultiItem : public UKSActivityRequirement
{
public:
	int                                                RequiredEntries;                                          // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        RequiredOwnedItemIds;                                     // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_MultiItem");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Queue
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Queue : public UKSActivityRequirement
{
public:
	int                                                RequiredActiveQueueId;                                    // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Queue");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Ranked
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Ranked : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                           // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Ranked");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_RankedSeason
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRequirement_RankedSeason : public UKSActivityRequirement
{
public:
	struct FString                                     RequiredRankedSeason;                                     // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_RankedSeason");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Rewards
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Rewards : public UKSActivityRequirement
{
public:
	bool                                               RequireEnabled;                                           // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Rewards");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Sequence
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRequirement_Sequence : public UKSActivityRequirement
{
public:
	struct FName                                       ActivitySequenceName;                                     // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Sequence");
		return ptr;
	}

};


// Class Killstreak.KSActivityRequirement_Weapon
// 0x0038 (0x0068 - 0x0030)
class UKSActivityRequirement_Weapon : public UKSActivityRequirement
{
public:
	TSoftObjectPtr<class UKSItem>                      RequiredWeapon;                                           // 0x0030(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class UKSItem>>              SecondaryRequiredWeapons;                                 // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRequirement_Weapon");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition
// 0x0000 (0x0030 - 0x0030)
class UKSActivityRewardCondition : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Affiliation
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Affiliation : public UKSActivityRewardCondition
{
public:
	struct FKSAffiliationFilter                        AffiliationFilter;                                        // 0x0030(0x0004) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Affiliation");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_AimModeUsed
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_AimModeUsed : public UKSActivityRewardCondition
{
public:
	EKSCharacterAimMode                                MatchingAimMode;                                          // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_AimModeUsed");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_DamageType
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRewardCondition_DamageType : public UKSActivityRewardCondition
{
public:
	TArray<class UClass*>                              MatchingDamageTypes;                                      // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_DamageType");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Deserter
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Deserter : public UKSActivityRewardCondition
{
public:
	bool                                               bAllowProgressionIfDeserter;                              // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAllowRegressionIfDeserter;                               // 0x0031(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Deserter");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Distance
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Distance : public UKSActivityRewardCondition
{
public:
	float                                              MaxDistance;                                              // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              MinDistance;                                              // 0x0034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Distance");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Down
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Down : public UKSActivityRewardCondition
{
public:
	bool                                               IsDown;                                                   // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Down");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Elimination
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Elimination : public UKSActivityRewardCondition
{
public:
	bool                                               IsElimination;                                            // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Elimination");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Headshot
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Headshot : public UKSActivityRewardCondition
{
public:
	bool                                               IsHeadshot;                                               // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Headshot");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_Sequence
// 0x0008 (0x0038 - 0x0030)
class UKSActivityRewardCondition_Sequence : public UKSActivityRewardCondition
{
public:
	struct FName                                       ActivitySequenceName;                                     // 0x0030(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_Sequence");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_WeaponTagUsed
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRewardCondition_WeaponTagUsed : public UKSActivityRewardCondition
{
public:
	TArray<struct FGameplayTag>                        MatchingWeaponTags;                                       // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_WeaponTagUsed");
		return ptr;
	}

};


// Class Killstreak.KSActivityRewardCondition_WeaponUsed
// 0x0010 (0x0040 - 0x0030)
class UKSActivityRewardCondition_WeaponUsed : public UKSActivityRewardCondition
{
public:
	TArray<TSoftObjectPtr<class UKSItem>>              MatchingWeapons;                                          // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityRewardCondition_WeaponUsed");
		return ptr;
	}

};


// Class Killstreak.KSActivitySequenceManager
// 0x0008 (0x0218 - 0x0210)
class UKSActivitySequenceManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivitySequenceManager");
		return ptr;
	}


	bool IsActivitySequenceUnlocked(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool IsActivitySequenceComplete(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool IsActivityFirstInSequence(class UKSActivity* Activity, const struct FName& SequenceRowName);
	bool GetPrecedingActivityInSequence(class UKSActivity* Activity, const struct FName& SequenceRowName, class UKSActivity** OutPrecedingActivity);
	bool GetFirstIncompleteInSequence(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController, class UKSActivityInstance** IncompleteActivityInstance);
	int GetCompletedCountInSequence(const struct FActivitySequenceRow& ActivitySequence, class AKSPlayerController* PlayerController);
	bool GetActivitySequence(const struct FName& SequenceRowName, struct FActivitySequenceRow* OutActivitySequenceRow);
};


// Class Killstreak.KSActivityTestManager
// 0x0028 (0x0248 - 0x0220)
class AKSActivityTestManager : public AActor
{
public:
	TArray<class UKSActivity*>                         Activities;                                               // 0x0220(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInitializeOnBeginPlay;                                   // 0x0230(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	TArray<class UKSActivityInstance*>                 ActivityInstances;                                        // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSActivityTestManager");
		return ptr;
	}


	void DirectlySetupActivityTrackingForPlayer(class AKSPlayerController* PlayerController);
};


// Class Killstreak.KSLagCompensatedActor
// 0x0040 (0x0260 - 0x0220)
class AKSLagCompensatedActor : public AActor
{
public:
	class AKSLagCompensatedActor*                      RealActor;                                                // 0x0220(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSLagCompensatedActor*                      FakeActor;                                                // 0x0228(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PredictedSpawnTimeoutTime;                                // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyFakeOnYieldToReal;                                // 0x0234(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0235(0x0003) MISSED OFFSET
	int                                                DefaultTeamNum;                                           // 0x0238(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	struct FSerializedMctsNetId                        InstigatorId;                                             // 0x0240(0x0008) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint64_t                                           LagCompActorID;                                           // 0x0248(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0250(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLagCompensatedActor");
		return ptr;
	}


	void YieldToRealActor();
	void TryToDestroy();
	void SetLagCompActorIDFromWeapon(class AKSWeapon* SpawningWeapon);
	void SetLagCompActorIDFromParentProjectile(class AKSProjectile* ParentProjectile, int Index);
	void SetLagCompActorIDFromParentAgent(class AKSAgentBase* ParentAgent, int Index);
	void SetLagCompActorIDFromModInstance(class UKSPlayerModInstance* SpawningModInst);
	void RealActorTakeOver();
	void RealActorDestroyed(class AActor* Real);
	void OnTakeOverAsRealActor();
	void OnRep_LagCompActorID();
	void OnRealActorSpawn(class AKSLagCompensatedActor* Real);
	void OnPlayerStateChanged(class APlayerState* InPlayerState);
	void OnPlayerSpawned(class AKSCharacterBase* InCharacter);
	bool IsClientPredictedActor();
	bool IsActiveRealActor();
	void InitializeRealActor();
	void InitializeFakeActor();
	void FakeDestroyCleanup();
};


// Class Killstreak.KSAgentBase
// 0x00A8 (0x0308 - 0x0260)
class AKSAgentBase : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAgentRefund;                                            // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               BeginMissionOnPlay;                                       // 0x0278(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0279(0x0007) MISSED OFFSET
	class UInterpToMovementComponent*                  MovementComponent;                                        // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBoxComponent*                               CollisionBox;                                             // 0x0288(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AController>                  OwningPlayer;                                             // 0x0290(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                            // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                               // 0x02A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x02A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                          // 0x02B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                // 0x02C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EAgentRefundMethod                                 RefundMethod;                                             // 0x02CC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02CD(0x0003) MISSED OFFSET
	class UKSWeaponAsset*                              AssociatedWeaponAsset;                                    // 0x02D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentHealth;                                            // 0x02D8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthUpdate;                                           // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAgentMissionBegin;                                      // 0x02F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	int                                                OriginalOwnerId;                                          // 0x0300(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0304(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAgentBase");
		return ptr;
	}


	void RefundAgentAsset();
	void OnRep_CurrentHealth();
	void OnMissionBegin();
	void MovementPlaybackStop(const struct FHitResult& ImpactResult, float Time);
	bool IsOwnerLocal();
	class AKSPlayerState* GetPlayerStateOwner();
	class AKSCharacter* GetCharacterOwner();
	void BroadcastMissionBegin();
};


// Class Killstreak.KSAgent_Aimed
// 0x0168 (0x0470 - 0x0308)
class AKSAgent_Aimed : public AKSAgentBase
{
public:
	struct FScriptMulticastDelegate                    OnAgentStartFire;                                         // 0x0308(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisplayAimTargeter;                                      // 0x0318(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0319(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       AimTargeterWidget;                                        // 0x0320(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FAimData                                    CachedAim;                                                // 0x0348(0x0050) (CPF_Net, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              WeaponAsset;                                              // 0x0398(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset_WithProjectile*               CachedProjectileAsset;                                    // 0x03A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                StateTransitionHandle;                                    // 0x03A8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ExpectedTransitionEndTime;                                // 0x03B0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentAmmo;                                              // 0x03B4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentBurstCount;                                        // 0x03B8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponStateNew                                    FiringState;                                              // 0x03BC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03BD(0x0003) MISSED OFFSET
	struct FAgentStateChangeList                       ReplicatedStateChanges;                                   // 0x03C0(0x0088) (CPF_Net, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                NextShotId;                                               // 0x0448(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     TargeterLocation;                                         // 0x044C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProjectileSimFrequency;                                   // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSimTime;                                               // 0x045C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CollisionProfileName;                                     // 0x0460(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0468(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAgent_Aimed");
		return ptr;
	}


	void StartPreFire();
	void StartPostFire();
	void StartIdle();
	void StartFire();
	void StartCooldown();
	void StartBuildup();
	bool ShouldShowTargeter();
	void SetWeaponAsset(class UKSWeaponAsset* InAsset);
	void SetCachedAim(const struct FAimData& NewAim);
	void RefillAmmo();
	void OnRep_WeaponAsset();
	void OnFiringStateChanged(EWeaponStateNew NewState);
	void OnFiringComplete();
	bool IsFiring();
	struct FVector GetWorldTargetingLocation();
	void EndPostFire();
	void ClearCachedAim();
	bool BlueprintWantsToKeepFiring();
	bool AgentFire(const struct FAimData& AimData);
};


// Class Killstreak.KSAgent_RevealDrone
// 0x00A8 (0x03B0 - 0x0308)
class AKSAgent_RevealDrone : public AKSAgentBase
{
public:
	float                                              MaxFlightSpeed;                                           // 0x0308(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceToFly;                                            // 0x030C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeBetweenPings;                                         // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RevealPeriodDuration;                                     // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FPGame_ReplicatedTimer                      ReplicatedRevealTimer;                                    // 0x0318(0x0038) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              UpdateReplicatedTimerPeriod;                              // 0x0350(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAppliesScrambleEffectToEnemies;                          // 0x0354(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x43];                                      // 0x0355(0x0043) MISSED OFFSET
	TArray<class AKSCharacter*>                        CurrentSweepFoundChars;                                   // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAgent_RevealDrone");
		return ptr;
	}


	void UpdateReplicatedTimer();
	void StartNextReveal();
	void SetPlayerOwner(class AKSCharacter* InOwner);
	void ScrambleEnemies();
	void RevealOpposingTeam(class AKSPlayerController* PlayerController, float Threshold);
	void Ping(int Team, float Threshold, float SweepSpeed, float SweepTimeRemaining);
	void GetRevealPeriodDuration(float* Duration, float* RemainingTime);
	void EndRevealPeriod();
};


// Class Killstreak.KSAgent_RevivalDrone
// 0x00D8 (0x03E0 - 0x0308)
class AKSAgent_RevivalDrone : public AKSAgentBase
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0308(0x0068) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnArrive;                                                 // 0x0370(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFlightSpeed;                                           // 0x0380(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InvisibleMovementTime;                                    // 0x0384(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReviveTime;                                               // 0x0388(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReviveHealth;                                             // 0x038C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDroneVisibility;                                         // 0x0390(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDroneVulnerability;                                      // 0x0391(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOngoingReviveEffectsActive;                              // 0x0392(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0393(0x0001) MISSED OFFSET
	TWeakObjectPtr<class AKSCharacter>                 TargetCharacter;                                          // 0x0394(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EReviveDroneState                                  MovementStage;                                            // 0x039C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EReviveDroneFlightPath                             FlightPath;                                               // 0x039D(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x039E(0x0002) MISSED OFFSET
	float                                              PreferredHoverHeight;                                     // 0x03A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TransitHeight;                                            // 0x03A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HoverCorrectionTime;                                      // 0x03A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DepartureHeight;                                          // 0x03AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseCustomReviveTime;                                     // 0x03B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	float                                              CustomReviveTime;                                         // 0x03B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInheritReviveTimeMods;                                   // 0x03B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               DrawOutline;                                              // 0x03B9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      OutlineStencilColor;                                      // 0x03BA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x5];                                       // 0x03BB(0x0005) MISSED OFFSET
	class UKSPlayerMod*                                ApplyOnReleaseMod;                                        // 0x03C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x03C8(0x0008) MISSED OFFSET
	bool                                               bDrawEnemyDroneOutline;                                   // 0x03D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x7];                                       // 0x03D1(0x0007) MISSED OFFSET
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x03D8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAgent_RevivalDrone");
		return ptr;
	}


	void TargetStartRevive(class AKSCharacter* Reviver, class AKSCharacter* Revivee, float TimeToRevive, bool Remote);
	void StartReviveEffects();
	void SetOutlineVisibility(bool UseOutline);
	void SetFriendlyOutlineVisibility(bool UseOutline);
	void OnTargetKilled(class AKSCharacterBase* Killer, class AKSCharacterBase* Killed);
	void OnReviveEnd(class AKSCharacter* RevivingCharacter, bool SuccessfulRevive);
	void OnRep_OngoingReviveEffectsActive();
	void OnRep_DroneVulnerability();
	void OnRep_DroneVisibility();
	float GetReviveProgress();
	EReviveDroneState GetMovementStage();
	EReviveDroneFlightPath GetFlightPath();
	void EventStartReviveEffects();
	void EventOngoingReviveEffectsStarted();
	void EventEndReviveEffects();
	void BroadcastMovementState(EReviveDroneState State);
	void BroadcastEndReviveEffects();
	void BroadcastDroneVulnerability(bool Vulnerable);
	void BroadcastDroneVisibility(bool Visible);
	void BeginRevive();
	void ApplyDroneVulnerabilityInternal();
	void ApplyDroneVisibilityInternal();
	void ActivateDroneOngoingEffects();
};


// Class Killstreak.KSAIActorCollection
// 0x0030 (0x00E0 - 0x00B0)
class UKSAIActorCollection : public UActorComponent
{
public:
	TArray<class AKSDropLocation*>                     DropLocations;                                            // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  BotNameTable;                                             // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x18];                                      // 0x00C8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIActorCollection");
		return ptr;
	}

};


// Class Killstreak.KSAIActorCollection_Extraction
// 0x0010 (0x00F0 - 0x00E0)
class UKSAIActorCollection_Extraction : public UKSAIActorCollection
{
public:
	TArray<class AKSDefensePoint*>                     DefensePoints;                                            // 0x00E0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIActorCollection_Extraction");
		return ptr;
	}

};


// Class Killstreak.KSAIController
// 0x02A8 (0x05D0 - 0x0328)
class AKSAIController : public AAIController
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0328(0x0050) MISSED OFFSET
	class AKSCharacterBase*                            KSCharacter;                                              // 0x0378(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                CachedKSCharacter;                                        // 0x0380(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoManageWayPointSet;                                   // 0x0388(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0389(0x000F) MISSED OFFSET
	class AKSWayPointSet*                              WayPointSet;                                              // 0x0398(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldReverseWayPointSetDirection;                       // 0x03A0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x17];                                      // 0x03A1(0x0017) MISSED OFFSET
	class AKSPlayerShop*                               Shop;                                                     // 0x03B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x30];                                      // 0x03C0(0x0030) MISSED OFFSET
	class AActor*                                      StartPointToSpawnAt;                                      // 0x03F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      CharacterToSpawn;                                         // 0x03F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBehaviorTree*                               TreeToRun;                                                // 0x0400(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBTDifficulty*                             InitialDifficulty;                                        // 0x0408(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBTDifficulty*                             CachedDifficulty;                                         // 0x0410(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0418(0x0008) MISSED OFFSET
	class UDataTable*                                  DifficultyTable;                                          // 0x0420(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSBTDifficultyConfig                       SpawnDifficultyConfig;                                    // 0x0428(0x0078) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  ObjectivePriorityTable;                                   // 0x04A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  ItemPriorityTable;                                        // 0x04A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  AbilityTable;                                             // 0x04B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSInitialLoadout                           InitialLoadout;                                           // 0x04B8(0x0010) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x28];                                      // 0x04C8(0x0028) MISSED OFFSET
	class UKSAIPerceptionComponent*                    KSAIPerception;                                           // 0x04F0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x28];                                      // 0x04F8(0x0028) MISSED OFFSET
	class AActor*                                      ActorForFocalOffset;                                      // 0x0520(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0528(0x0010) MISSED OFFSET
	float                                              CrowdCollisionQueryRange;                                 // 0x0538(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrowdPathOptimizationRange;                               // 0x053C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrowdAvoidanceRangeMultiplier;                            // 0x0540(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrowdSeparationWeight;                                    // 0x0544(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartWithCrowdFollowing;                                 // 0x0548(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0549(0x0003) MISSED OFFSET
	int                                                TeamNumber;                                               // 0x054C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x30];                                      // 0x0550(0x0030) MISSED OFFSET
	struct FGameplayTagQuery                           AllowedJobQuery;                                          // 0x0580(0x0048) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x8];                                       // 0x05C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIController");
		return ptr;
	}


	void SetNavigationInteractTarget(TSoftObjectPtr<class AActor> InteractTargetIn);
	void OnPawnKilled(class AKSCharacterBase* KillerCharacter, class AKSCharacterBase* KilledCharacter);
	void OnCosmeticLoadoutComplete();
	void HandleTeamSidesFlipped();
	void HandleJobChanged();
	class AKSCharacter* GetOwnedCharacter();
	class AActor* GetNavigationInteractTarget();
	class UKSAIPerceptionComponent* GetKSPerceptionComponent();
	void ClearNavigationInteractTarget();
};


// Class Killstreak.KSAIDifficultyComponent
// 0x0120 (0x01D0 - 0x00B0)
class UKSAIDifficultyComponent : public UActorComponent
{
public:
	class UKSBTDifficulty*                             Difficulty;                                               // 0x00B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDataTable*                                  DifficultyTable;                                          // 0x00B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowDynamicDifficulty;                                   // 0x00C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	struct FKSBTDifficultyConfig                       DifficultySpawnConfig;                                    // 0x00C8(0x0078) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierStandard;                               // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierThrownMelee;                            // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierThrownGrenade;                          // 0x0148(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierWhenBlinded;                            // 0x014C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyMultiplierWhenCrosshairHidden;                    // 0x0150(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NewTargetAccuracyMultiplier;                              // 0x0154(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NewTargetTime;                                            // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AttackDelayClipPercentMin;                                // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AttackDelayClipPercentMax;                                // 0x0160(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AttackDelay;                                              // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageDealtMultiplier;                                    // 0x0168(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadshotDamageDealtMultiplier;                            // 0x016C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageTakenMultiplier;                                    // 0x0170(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadshotDamageTakenMultiplier;                            // 0x0174(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimForHeadshotProbability;                                // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DodgeRollProbability;                                     // 0x017C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StrafeProbability;                                        // 0x0180(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThrowGrenadeProbability;                                  // 0x0184(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThrowMeleeProbability;                                    // 0x0188(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PerceptionStrengthMin;                                    // 0x018C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PerceptionStrengthMax;                                    // 0x0190(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PerceptionStrength;                                       // 0x0194(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSBTAction*>                         AllowedActions;                                           // 0x0198(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSBTAction*>                         DisallowedActions;                                        // 0x01A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedMultiplier;                                          // 0x01B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSWeapon>                    LastFiredWeapon;                                          // 0x01BC(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AttacksSinceLastAttackDelay;                              // 0x01C4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AttacksNeededToTriggerAttackDelay;                        // 0x01C8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIDifficultyComponent");
		return ptr;
	}


	class UKSBTDifficulty* GetCurrentDifficulty();
	void ChangeDifficulty(class UKSBTDifficulty* DifficultyIn);
};


// Class Killstreak.KSAIItemPriorityComponent
// 0x0010 (0x00C0 - 0x00B0)
class UKSAIItemPriorityComponent : public UActorComponent
{
public:
	TArray<struct FKSBTItemPriorityTableRow>           ItemPriorities;                                           // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIItemPriorityComponent");
		return ptr;
	}


	void InsertPriority(const struct FKSBTItemPriorityTableRow& ItemPriority);
	void InsertPriorities(class UDataTable* ItemPriorityTable);
	float GetWeightByName(const struct FString& ItemName);
	float GetWeight(TSoftObjectPtr<class UKSItem> Item);
	float GetShopPurchaseWeightByName(const struct FString& ItemName);
	float GetShopPurchaseWeight(TSoftObjectPtr<class UKSItem> Item);
	float GetShopPriorityGroupByName(const struct FString& ItemName);
	float GetShopPriorityGroup(TSoftObjectPtr<class UKSItem> Item);
	float GetPriorityMultiplierByName(const struct FString& ItemName);
	float GetPriorityMultiplier(TSoftObjectPtr<class UKSItem> Item);
	void ClearPriorities();
};


// Class Killstreak.KSAimAssistActor
// 0x0090 (0x02B0 - 0x0220)
class AKSAimAssistActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET
	int                                                TeamNumOverride;                                          // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class UKSAimAssistAnchorComponent*                 AimAssistAnchor;                                          // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	TMap<struct FName, EHitLocationType>               BoneToHitLocationTypeMap;                                 // 0x0248(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBeKilled;                                             // 0x0298(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0299(0x0003) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x029C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLocallyKilled;                                           // 0x02A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x02A1(0x0003) MISSED OFFSET
	struct FAimAssistActorHealthInfo                   HealthInfo;                                               // 0x02A4(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimAssistActor");
		return ptr;
	}


	void ResetHealth();
	void OnRep_HealthInfo();
	void OnKilled();
	float ModifyIncomingDamageTaken(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsValidIncomingDamage(class UClass* DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	struct FVector GetAAHeadLocation();
	struct FVector GetAABodyLocation();
	bool CanBeHitByWeapon(class UKSWeaponAsset* Weapon);
	bool AimAssistRightNow(class AKSPlayerController* PlayerController);
};


// Class Killstreak.KSAimAssistAnchorComponent
// 0x0010 (0x0460 - 0x0450)
class UKSAimAssistAnchorComponent : public USphereComponent
{
public:
	float                                              AimAssistPriority;                                        // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0454(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimAssistAnchorComponent");
		return ptr;
	}

};


// Class Killstreak.KSAimAssistComponent
// 0x0098 (0x0148 - 0x00B0)
class UKSAimAssistComponent : public UActorComponent
{
public:
	class AKSPlayerController*                         PlayerOwner;                                              // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FRankedAimAssistTarget>              AssistTargetStack;                                        // 0x00B8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentTargetWeightStickiness;                            // 0x00C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProjectionSpaceStackBoundary;                             // 0x00CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseStackBoundaryFovScaling;                              // 0x00D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	float                                              FovBaseline;                                              // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistEffectivenessCurve;                              // 0x00D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSAimAssistActivationType                         ActivationType;                                           // 0x00E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSAimAssistInputFlag                              FrictionAllowedInputMode;                                 // 0x00E1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSAimAssistInputFlag                              LockAllowedInputMode;                                     // 0x00E2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSAimAssistInputFlag                              SnapAllowedInputMode;                                     // 0x00E3(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSAimAssistInputFlag                              CorrectionAllowedInputMode;                               // 0x00E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E5(0x0007) MISSED OFFSET
	bool                                               bAssistGadgets;                                           // 0x00EC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimLockUsesTargetVelocity;                               // 0x00ED(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimLockMeshSmoothCompensation;                           // 0x00EE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimLockUsesOwnVelocity;                                  // 0x00EF(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bComplexAimLockDeltaRotCalculation;                       // 0x00F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bComplexLookLocationCalculation;                          // 0x00F1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00F2(0x0002) MISSED OFFSET
	float                                              MaxAimLockEvaluationInterval;                             // 0x00F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackIgnoreFactor;                                     // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrossAxisWeaknessPoint;                                   // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOldLockValid;                                            // 0x0100(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	struct FVector                                     OldLockRelativeLocation;                                  // 0x0104(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    OldInputRot;                                              // 0x0110(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	class UObject*                                     LastAimAssistTarget;                                      // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bLastTargetCrouching;                                     // 0x0128(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bLastSelfCrouching;                                       // 0x0129(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	struct FVector2D                                   LastLockAssistPosition;                                   // 0x012C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   LastAnchorScreenLocation;                                 // 0x0134(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AimAssistVisibilityUpdatePeriod;                          // 0x013C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseAccurateStrengthInterp;                               // 0x0140(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseAccurateBoundsInterp;                                 // 0x0141(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseAccurateKickbackAndGyro;                              // 0x0142(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x5];                                       // 0x0143(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimAssistComponent");
		return ptr;
	}


	static bool GetScaledProjectionBoundsForActor(class APlayerController* Player, class AActor* InActor, struct FBox2D* OutBounds);
	float GetProjectionSpaceStackBoundary();
	class AKSPlayerController* GetPlayerOwner();
	static float GetAssistRingScreenSize(class APlayerController* Player, float ProjectionSpaceSize);
	static bool GetActorScreenBoundsForActor(class APlayerController* Player, class AActor* InActor, struct FBox2D* OutBounds);
};


// Class Killstreak.KSAimAssistDataBase
// 0x0008 (0x0038 - 0x0030)
class UKSAimAssistDataBase : public UDataAsset
{
public:
	EControllerInputType                               JoyConFallback;                                           // 0x0030(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EControllerInputType                               JoyConADSFallback;                                        // 0x0031(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EControllerInputType                               TouchFallback;                                            // 0x0032(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EControllerInputType                               TouchADSFallback;                                         // 0x0033(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EControllerInputType                               PCGamepadADSFallback;                                     // 0x0034(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimAssistDataBase");
		return ptr;
	}

};


// Class Killstreak.KSAimAssistTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UKSAimAssistTargetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimAssistTargetInterface");
		return ptr;
	}


	void UnregisterAsAimAssistTarget();
	void RegisterAsAimAssistTarget();
	struct FVector GetHeadLocation();
	struct FVector GetBodyLocation();
	class AActor* GetAsActor();
	bool CanBeConsideredForAimAssistRightNow(class AKSPlayerController* PlayerController);
};


// Class Killstreak.KSAimCorrectionData
// 0x0210 (0x0248 - 0x0038)
class UKSAimCorrectionData : public UKSAimAssistDataBase
{
public:
	TMap<EControllerInputType, bool>                   AllowAimCorrection;                                       // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, float>                  AimCorrectionOffset;                                      // 0x0088(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, float>                  AimCorrectionRange;                                       // 0x00D8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyBool>            AllowOverride;                                            // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyFloat>           OffsetOverride;                                           // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyFloat>           RangeOverride;                                            // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, bool>                   FullAllowAimCorrection;                                   // 0x0158(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, float>                  FullAimCorrectionOffset;                                  // 0x01A8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, float>                  FullAimCorrectionRange;                                   // 0x01F8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimCorrectionData");
		return ptr;
	}

};


// Class Killstreak.KSAimFrictionData
// 0x00F0 (0x0128 - 0x0038)
class UKSAimFrictionData : public UKSAimAssistDataBase
{
public:
	TMap<EControllerInputType, bool>                   RequireInputForAimFriction;                               // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveVector*>    AimFrictionCurve;                                         // 0x0088(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveFloat*>     AimFrictionDistanceCurve;                                 // 0x00D8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimFrictionData");
		return ptr;
	}

};


// Class Killstreak.KSAimLockData
// 0x0210 (0x0248 - 0x0038)
class UKSAimLockData : public UKSAimAssistDataBase
{
public:
	TMap<EControllerInputType, bool>                   RequireInputForAimLock;                                   // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveVector*>    AimLockCurve;                                             // 0x0088(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveFloat*>     AimLockDistanceCurve;                                     // 0x00D8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyBool>            RequireInputOverride;                                     // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyCurveVector>     LockCurveOverride;                                        // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSAimAssistPropertyCurveFloat>      DistanceCurveOverride;                                    // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, bool>                   FullRequireInputForAimLock;                               // 0x0158(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveVector*>    FullAimLockCurve;                                         // 0x01A8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveFloat*>     FullAimLockDistanceCurve;                                 // 0x01F8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimLockData");
		return ptr;
	}

};


// Class Killstreak.KSAimMagnetismData
// 0x0000 (0x0038 - 0x0038)
class UKSAimMagnetismData : public UKSAimAssistDataBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimMagnetismData");
		return ptr;
	}

};


// Class Killstreak.KSAimSnapData
// 0x00F0 (0x0128 - 0x0038)
class UKSAimSnapData : public UKSAimAssistDataBase
{
public:
	TMap<EControllerInputType, struct FRotator>        MaxAimSnapRotation;                                       // 0x0038(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveFloat*>     AimSnapDistanceCurve;                                     // 0x0088(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EControllerInputType, class UCurveVector*>    AimSnapCurve;                                             // 0x00D8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAimSnapData");
		return ptr;
	}

};


// Class Killstreak.KSAIObjectivePriorityComponent
// 0x0068 (0x0118 - 0x00B0)
class UKSAIObjectivePriorityComponent : public UActorComponent
{
public:
	class UDataTable*                                  ObjectivePriorityTable;                                   // 0x00B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FKSBTObjectivePriorityTableRow> ObjectivePriorities;                                      // 0x00B8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSBTObjectivePriorityTableRow>      SortedPriorities;                                         // 0x0108(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIObjectivePriorityComponent");
		return ptr;
	}


	void UpdatePriority(const struct FName& Key, const struct FKSBTObjectivePriorityTableRow& ObjectivePriority, bool ShouldResort);
	void UpdatePriorities(class UDataTable* ObjectivePriorityTableIn);
	void Setup(class UDataTable* ObjectivePriorityTableIn);
	void InsertPriority(const struct FName& Key, const struct FKSBTObjectivePriorityTableRow& ObjectivePriority, bool ShouldResort);
	void InsertPriorities(class UDataTable* ObjectivePriorityTableIn);
	float GetPriority(const struct FName& Key);
	void ClearPriorities();
	void ApplyPrioritiesFromDifficulty(class UDataTable* ObjectivePriorityTableIn);
};


// Class Killstreak.KSAIPerceptionComponent
// 0x0000 (0x0180 - 0x0180)
class UKSAIPerceptionComponent : public UAIPerceptionComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAIPerceptionComponent");
		return ptr;
	}


	void GetCurrentlyPerceivedStimuli(class UClass* SenseToUse, TArray<struct FKSStimulusEvent>* Stimuli);
};


// Class Killstreak.KSAISense_MapPoint
// 0x0010 (0x0090 - 0x0080)
class UKSAISense_MapPoint : public UAISense
{
public:
	TArray<struct FKSAIMapPointStimulusEvent>          RegisteredEvents;                                         // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISense_MapPoint");
		return ptr;
	}

};


// Class Killstreak.KSAISense_Objective
// 0x0010 (0x00F8 - 0x00E8)
class UKSAISense_Objective : public UAISense_Hearing
{
public:
	TArray<struct FAIObjectiveEvent>                   ObjectiveEvents;                                          // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISense_Objective");
		return ptr;
	}


	static void ReportObjectiveEvent(class UObject* WorldContextObject, const struct FVector& ObjectiveLocation, float Loudness, class AActor* Instigator, float MaxRange, const struct FName& Tag);
};


// Class Killstreak.KSAISense_PeripheralSight
// 0x0000 (0x0170 - 0x0170)
class UKSAISense_PeripheralSight : public UAISense_Sight
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISense_PeripheralSight");
		return ptr;
	}

};


// Class Killstreak.KSAISense_Player
// 0x0010 (0x0090 - 0x0080)
class UKSAISense_Player : public UAISense
{
public:
	TArray<struct FKSAIPlayerStimulusEvent>            RegisteredEvents;                                         // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISense_Player");
		return ptr;
	}

};


// Class Killstreak.KSAISense_Team
// 0x0010 (0x0090 - 0x0080)
class UKSAISense_Team : public UAISense
{
public:
	TArray<struct FKSAITeamStimulusEvent>              RegisteredEvents;                                         // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISense_Team");
		return ptr;
	}

};


// Class Killstreak.KSAISenseConfig_MapPoint
// 0x0000 (0x0048 - 0x0048)
class UKSAISenseConfig_MapPoint : public UAISenseConfig
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISenseConfig_MapPoint");
		return ptr;
	}

};


// Class Killstreak.KSAISenseConfig_Player
// 0x0000 (0x0048 - 0x0048)
class UKSAISenseConfig_Player : public UAISenseConfig
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISenseConfig_Player");
		return ptr;
	}

};


// Class Killstreak.KSAISenseConfig_Team
// 0x0000 (0x0048 - 0x0048)
class UKSAISenseConfig_Team : public UAISenseConfig
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISenseConfig_Team");
		return ptr;
	}

};


// Class Killstreak.KSAISenseEvent_Objective
// 0x0030 (0x0058 - 0x0028)
class UKSAISenseEvent_Objective : public UAISenseEvent
{
public:
	struct FAIObjectiveEvent                           Event;                                                    // 0x0028(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISenseEvent_Objective");
		return ptr;
	}

};


// Class Killstreak.KSAISightTargetInterface
// 0x0000 (0x0028 - 0x0028)
class UKSAISightTargetInterface : public UAISightTargetInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAISightTargetInterface");
		return ptr;
	}

};


// Class Killstreak.KSAkComponent
// 0x00A0 (0x0490 - 0x03F0)
class UKSAkComponent : public UAkComponent
{
public:
	EOcclusionType                                     OcclusionType;                                            // 0x03F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03F1(0x0003) MISSED OFFSET
	float                                              MinTimeBetweenOcclusionUpdates;                           // 0x03F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OcclusionDistanceMultiplier;                              // 0x03F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                OcclusionInterpolationMilliseconds;                       // 0x03FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentObstruction;                                       // 0x0400(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentOcclusion;                                         // 0x0404(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0408(0x0004) MISSED OFFSET
	bool                                               RequiresListenerDistance;                                 // 0x040C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x040D(0x0003) MISSED OFFSET
	float                                              MinTimeBetweenDistanceUpdates;                            // 0x0410(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	bool                                               RequiresListenerDirection;                                // 0x0418(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0419(0x0003) MISSED OFFSET
	float                                              MinTimeBetweenDirectionUpdates;                           // 0x041C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0420(0x0008) MISSED OFFSET
	class UBakedOcclusionLUT*                          LUT;                                                      // 0x0428(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       PendingStopEvents;                                        // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<int, class UAkAudioEvent*>                    LoopIdToStopEventMap;                                     // 0x0440(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAkComponent");
		return ptr;
	}


	void StopLoopingEvent(int StopHandle);
	void StopAllLoopingEvents();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	int AddLoopingEvent(class UAkAudioEvent* EventStart, class UAkAudioEvent* EventStop);
};


// Class Killstreak.KSAkAmbientComponent
// 0x0000 (0x0490 - 0x0490)
class UKSAkAmbientComponent : public UKSAkComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAkAmbientComponent");
		return ptr;
	}

};


// Class Killstreak.KSAkAmbientSound
// 0x0040 (0x0260 - 0x0220)
class AKSAkAmbientSound : public AActor
{
public:
	class UAkAudioEvent*                               AkAudioEvent;                                             // 0x0220(0x0008) (CPF_ZeroConstructor, CPF_Deprecated, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSAkAmbientComponent*                       AkComponent;                                              // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               StopWhenOwnerIsDestroyed;                                 // 0x0230(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_SimpleDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               AutoPost;                                                 // 0x0231(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_SimpleDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ForceNoTickingOnAkComponent;                              // 0x0232(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_SimpleDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2D];                                      // 0x0233(0x002D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAkAmbientSound");
		return ptr;
	}


	void StopAmbientSound();
	static void StopAllKSAmbientSounds(class UObject* WorldContextObject);
	void StartAmbientSound();
	static void StartAllKSAmbientSounds(class UObject* WorldContextObject);
};


// Class Killstreak.KSItemDrop
// 0x0160 (0x0380 - 0x0220)
class AKSItemDrop : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0220(0x0018) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0238(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0240(0x0010) MISSED OFFSET
	TArray<class AKSCharacter*>                        AllowedCharacters;                                        // 0x0250(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ItemDropInteractDuration;                                 // 0x0260(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Price;                                                    // 0x0264(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInstantPickup;                                         // 0x0268(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowManualInstantPickup;                                // 0x0269(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanPickupWithModifiedRange;                              // 0x026A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x5];                                       // 0x026B(0x0005) MISSED OFFSET
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x0270(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SightOffset;                                              // 0x0278(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0284(0x0004) MISSED OFFSET
	TArray<class AActor*>                              ActorsSeenBy;                                             // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSItem*                                     ItemAsset;                                                // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      InteractionType;                                          // 0x02A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyOnPickUp;                                         // 0x02A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemPickup;                                             // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x20];                                      // 0x02C0(0x0020) MISSED OFFSET
	class AKSCharacter*                                PendingPickupCharacter;                                   // 0x02E0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                // 0x02E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      CollisionMesh;                                            // 0x02F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x02F8(0x0003) MISSED OFFSET
	EPlayerSilhouetteType                              InactiveStencilValue;                                     // 0x02FB(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EPlayerSilhouetteType                              ActiveStencilValue;                                       // 0x02FC(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x02FD(0x0003) MISSED OFFSET
	struct FRotator                                    LootSiteSpawnRotation;                                    // 0x0300(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4];                                       // 0x030C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       SkinTagContainer;                                         // 0x0310(0x0020) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x18];                                      // 0x0330(0x0018) MISSED OFFSET
	class AController*                                 DropHidePlayer;                                           // 0x0348(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bClientDropUnhide;                                        // 0x0350(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	int                                                OriginalOwnerId;                                          // 0x0354(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                OriginalOwnerTeamNum;                                     // 0x0358(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsPlayerDrop;                                            // 0x035C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EDropPickupConfig                                  DropPickupConfig;                                         // 0x035D(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x2];                                       // 0x035E(0x0002) MISSED OFFSET
	int                                                ObjectiveId;                                              // 0x0360(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	class UAkAudioEvent*                               PickupSound;                                              // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSNudgeComponent*                           NudgeComponent;                                           // 0x0370(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBeNudged;                                             // 0x0378(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnlyVisibleIfCanPickup;                                  // 0x0379(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x6];                                       // 0x037A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItemDrop");
		return ptr;
	}


	bool ShouldShowViewedItemLabel();
	void SetInactiveStencilValue(EPlayerSilhouetteType Value);
	void SetActiveStencilValue(EPlayerSilhouetteType Value);
	void PlayDestroyedEffects();
	bool Pickup(class AKSCharacter* Receiver, bool bActivate);
	void OverridePickupFunction(const struct FScriptDelegate& ItemPickupOverride);
	void OnRootMeshDetached(class UKSStaticMeshComponent* ResponsibleMesh);
	void OnRep_PendingPickupCharacter();
	void OnRep_ObjectiveId();
	void OnRep_ItemAsset();
	void OnRep_DropHidePlayer();
	struct FScriptDelegate GetPickupDelegate();
	class AKSCharacter* GetPendingPickupCharacter();
	struct FRotator GetLootSiteSpawnRotation();
	bool GetLabelInfoForSecondaryTitle(struct FText* LabelText);
	bool GetLabelInfoForPrimaryTitle(struct FText* LabelText);
	class UKSItem* GetItemAsset();
	void EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	bool CanBePickedUpByCharacterInternal(class AKSCharacter* Receiver);
	bool CanBePickedUpByCharacter(class AKSCharacter* Receiver);
	void CalculateRandomImpulse(struct FVector* LinearImpulse, struct FVector* AngularImpulse);
	void BeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AsyncItemGiveComplete(class UKSItem* Item, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
	void ApplyRandomImpulse();
	void AllowPickup(class AKSCharacter* Character);
};


// Class Killstreak.KSAmmoDrop
// 0x0008 (0x0388 - 0x0380)
class AKSAmmoDrop : public AKSItemDrop
{
public:
	int                                                Amount;                                                   // 0x0380(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0384(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAmmoDrop");
		return ptr;
	}

};


// Class Killstreak.KSItem
// 0x0078 (0x0230 - 0x01B8)
class UKSItem : public UPlatformInventoryItem
{
public:
	TSoftObjectPtr<class UClass>                       ItemDropClass;                                            // 0x01B8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ItemPrice;                                                // 0x01E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsePreviewIconInfo;                                      // 0x01E4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01E5(0x0003) MISSED OFFSET
	class UImageIconInfo*                              PreviewIconInfo;                                          // 0x01E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UTexture2D*                                  DefaultItemIcon;                                          // 0x01F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       SpecialItemWidgetClass;                                   // 0x01F8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FColor                                      ColorCode;                                                // 0x0220(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0224(0x000C) (CPF_Edit, CPF_DuplicateTransient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItem");
		return ptr;
	}


	static bool SoftGiveToAsync(TSoftObjectPtr<class UKSItem> Item, class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, const struct FScriptDelegate& GivenToEvent);
	static bool SoftCreateDropAsync(TSoftObjectPtr<class UKSItem> Item, const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters, const struct FScriptDelegate& ItemDroppedEvent, bool bEnablePhysics, const struct FVector& InSpawnLinearVelocity, const struct FVector& InSpawnAngularVelocity);
	static void RemoveFromPlayerLoadout(class UKSItem* Item, class AKSPlayerState* PlayerState);
	void InitNewlyCreatedItem(int64_t InItemId);
	bool HasValidPurchasePreviewIcon();
	static bool GiveToAsync(class UKSItem* Item, class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, const struct FScriptDelegate& GivenToEvent);
	static bool GiveTo(class UKSItem* Item, class AActor* Owner, class AActor* Instigator, const struct FGiveItemParameters& InGiveItemParameters, class UObject** OutObject);
	TSoftObjectPtr<class UClass> GetSpecialItemWidgetClass();
	class UIconInfo* GetPurchasePreviewIconInfo();
	TSoftObjectPtr<class UTexture2D> GetPurchasePreviewIcon();
	class UKSJobItem* GetJobItemForPreview(class UObject* WorldContextObject);
	int GetItemPrice();
	TSoftObjectPtr<class UClass> GetItemDropClass();
	TArray<struct FItemDisplayStat> GetItemDisplayStats();
	struct FText GetItemCategoryText();
	struct FColor GetColorCode();
	static bool CreateDropAsync(class UKSItem* Item, const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters, const struct FScriptDelegate& ItemDroppedEvent, bool bEnablePhysics, const struct FVector& InSpawnLinearVelocity, const struct FVector& InSpawnAngularVelocity);
	static class AKSItemDrop* CreateDrop(class UKSItem* Item, const struct FTransform& SpawnTransform, class UObject* WorldContextObject, const struct FDropItemParameters& InDropItemParameters);
	bool CanBePickedUpByCharacter(class AKSCharacter* PotentialOwner);
	bool CanBePickedUpBy(class AActor* PotentialOwner);
	static bool AddToPlayerLoadout(class UKSItem* Item, class AKSPlayerState* PlayerState, const struct FRestoreInfoInitParams& Params);
};


// Class Killstreak.KSAmmoDropAsset
// 0x0008 (0x0238 - 0x0230)
class UKSAmmoDropAsset : public UKSItem
{
public:
	EAmmoType                                          AmmoType;                                                 // 0x0230(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	int                                                AmmoCount;                                                // 0x0234(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAmmoDropAsset");
		return ptr;
	}


	EAmmoType GetAmmoType();
};


// Class Killstreak.KSAnalogStickFilter
// 0x0010 (0x0038 - 0x0028)
class UKSAnalogStickFilter : public UObject
{
public:
	EKSAnalogStickType                                 StickType;                                                // 0x0028(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UKSPlayerInput*                              PlayerInput;                                              // 0x0030(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnalogStickFilter");
		return ptr;
	}

};


// Class Killstreak.KSAnimationAuditComponent
// 0x0008 (0x00B8 - 0x00B0)
class UKSAnimationAuditComponent : public UActorComponent
{
public:
	class UKSAnimInstance*                             CurrentAnimInst;                                          // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimationAuditComponent");
		return ptr;
	}


	void AnimAuditStop(class UKSAnimInstance* AnimInst, bool bExportImmediately);
	void AnimAuditStart(class UKSAnimInstance* AnimInst);
	void AnimAuditClear(class UKSAnimInstance* AnimInst);
};


// Class Killstreak.KSAnimInstance
// 0x0020 (0x02F0 - 0x02D0)
class UKSAnimInstance : public USkinnedAnimInstance
{
public:
	class UKSAnimationAuditComponent*                  AuditingComponent;                                        // 0x02D0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x02D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimInstance");
		return ptr;
	}


	void SetLobbyState(bool bInModelViewer);
	void Montage_JumpToRandomSection(TArray<struct FName> SectionNames, class UAnimMontage* Montage, bool bDisallowCurrentSection);
};


// Class Killstreak.KSAnimNotify_EmotionDuration
// 0x0008 (0x0040 - 0x0038)
class UKSAnimNotify_EmotionDuration : public UAnimNotify
{
public:
	EKSEmotion                                         Emotion;                                                  // 0x0038(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Duration;                                                 // 0x003C(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotify_EmotionDuration");
		return ptr;
	}

};


// Class Killstreak.KSAnimNotify_PlayParticleEffect
// 0x0010 (0x00A0 - 0x0090)
class UKSAnimNotify_PlayParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:
	struct FName                                       SkinTableRowName;                                         // 0x0090(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0098(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotify_PlayParticleEffect");
		return ptr;
	}

};


// Class Killstreak.KSAnimNotifyState_Emotion
// 0x0008 (0x0038 - 0x0030)
class UKSAnimNotifyState_Emotion : public UAnimNotifyState
{
public:
	EKSEmotion                                         Emotion;                                                  // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotifyState_Emotion");
		return ptr;
	}

};


// Class Killstreak.KSAnimNotifyState_Prop
// 0x0048 (0x0078 - 0x0030)
class UKSAnimNotifyState_Prop : public UAnimNotifyState
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      AnimClass;                                                // 0x0038(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0040(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FPoolAttachmentInfo                         PropAttachmentInfo;                                       // 0x0048(0x0030) (CPF_Edit, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotifyState_Prop");
		return ptr;
	}

};


// Class Killstreak.KSAnimNotifyState_Trail
// 0x0008 (0x0060 - 0x0058)
class UKSAnimNotifyState_Trail : public UAnimNotifyState_Trail
{
public:
	struct FName                                       SkinTableRowName;                                         // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotifyState_Trail");
		return ptr;
	}

};


// Class Killstreak.KSAnimNotifyState_WeaponProp
// 0x0068 (0x0098 - 0x0030)
class UKSAnimNotifyState_WeaponProp : public UAnimNotifyState
{
public:
	struct FSoftObjectPath                             WeaponAsset;                                              // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AnimClassRowNameOverride;                                 // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActivationMontage;                                        // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PropIdentifier;                                           // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ExtendedLifetime;                                         // 0x0060(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FPoolAttachmentInfo                         PropAttachmentInfo;                                       // 0x0064(0x0030) (CPF_Edit, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnimNotifyState_WeaponProp");
		return ptr;
	}

};


// Class Killstreak.KSAnnouncer
// 0x0120 (0x0340 - 0x0220)
class AKSAnnouncer : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0220(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAllyLivingPlayersChanged;                               // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnemyLivingPlayersChanged;                              // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UKSVOPriorityManager*                        PriorityManager;                                          // 0x0258(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0260(0x0010) MISSED OFFSET
	class UAkComponent*                                AnnouncerAkComponent;                                     // 0x0270(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FTimeAnnouncementList>   PhaseTimeAnnouncements;                                   // 0x0278(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SuddenDeathAnnouncement;                                  // 0x02C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	class UAkAudioEvent*                               FallbackEliminationAnnouncement;                          // 0x02D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FallbackEliminationAnnouncementAlly;                      // 0x02E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x40];                                      // 0x02E8(0x0040) MISSED OFFSET
	float                                              MaxAnnouncementDuration;                                  // 0x0328(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnVOLineFinished;                                         // 0x032C(0x0014) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              VODuckingAmount;                                          // 0x033C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAnnouncer");
		return ptr;
	}


	bool ShouldPlayTimeAnnouncementFromGroup(TArray<struct FName> Groups);
	void QueueAnnouncementStruct(const struct FAnnouncement& Announcement, int TeamNum, bool DelayProcessing);
	void QueueAnnouncement(class UAkAudioEvent* AkEvent, class UAkAudioEvent* AltAkEvent, EKSVoiceOverPriority Priority, float Lifetime, float Delay, float Lockout, int TeamNum, bool DelayProcessing, class AKSPlayerState* TargetPlayer, class UAkAudioEvent* TargetPlayerAkEvent);
	void ProcessTimeAnnouncementList(float Time, int TeamNum, struct FTimeAnnouncementList* TimeAnnouncementList);
	void OnObjectiveTimerZero();
	void OnObjectiveSpawned(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveReset(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveHeld(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveExploded(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDropped(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDisarming(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDisarmed(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDeactivated(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveContested(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveArming(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveArmed(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnMatchTimerUpdate(float TimeInWholeSeconds);
	void OnLocalViewTargetMovementModeChanged(TEnumAsByte<EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnLocalViewTargetChanged(class AKSPlayerController* Controller, class AActor* OldViewTarget, class AActor* NewViewTarget);
	void OnGameObjectiveStateChanged(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnControlPointTimerUpdate(float Time);
	void LocalPlayerControllerDestroyed(class AActor* PlayerController);
	int GetTeamOverrideForAnnouncementGroup(TArray<struct FName> Groups);
	class AKSPlayerController* GetPlayerController();
	void FinishedLineCallback(EAkCallbackType in_eType, class UAkCallbackInfo* in_pCallbackInfo);
	void EventQueueInGame();
	void EventLocalPlayerControllerDestroyed(class AKSPlayerController* PlayerController);
	void CurrentAnnouncementComplete();
	void AnnouncePlayerDeath(const struct FCombatEventInfo& CombatEvent);
};


// Class Killstreak.KSApparelAsset
// 0x0070 (0x02A0 - 0x0230)
class UKSApparelAsset : public UKSItem
{
public:
	int                                                Priority;                                                 // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                ApparelSlot;                                              // 0x0234(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       SlotsToOverride;                                          // 0x0240(0x0020) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0260(0x0028) MISSED OFFSET
	int                                                AsyncLoadPriority;                                        // 0x0288(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LocalPlayerAsyncLoadPriority;                             // 0x028C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0290(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSApparelAsset");
		return ptr;
	}


	struct FGameplayTag GetSlot();
};


// Class Killstreak.KSApparelAsset_SkinDataTables
// 0x0020 (0x02C0 - 0x02A0)
class UKSApparelAsset_SkinDataTables : public UKSApparelAsset
{
public:
	TArray<struct FSoftDataTableInfo>                  AssetDataTables;                                          // 0x02A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               ApparelObjectsToInfluence;                                // 0x02B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSApparelAsset_SkinDataTables");
		return ptr;
	}

};


// Class Killstreak.KSApparelAsset_CustomComponent
// 0x0028 (0x02E8 - 0x02C0)
class UKSApparelAsset_CustomComponent : public UKSApparelAsset_SkinDataTables
{
public:
	TSoftObjectPtr<class UClass>                       CustomComponentClass;                                     // 0x02C0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSApparelAsset_CustomComponent");
		return ptr;
	}

};


// Class Killstreak.KSApparelAsset_SkinnedMesh
// 0x0050 (0x0310 - 0x02C0)
class UKSApparelAsset_SkinnedMesh : public UKSApparelAsset_SkinDataTables
{
public:
	TSoftObjectPtr<class UClass>                       MeshClass;                                                // 0x02C0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       AttachPointName;                                          // 0x02E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       CollisionProfile;                                         // 0x02F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSlaveToCharacterMesh;                                    // 0x02F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSimulatePhysics;                                         // 0x02F9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02FA(0x0006) MISSED OFFSET
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x0300(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSApparelAsset_SkinnedMesh");
		return ptr;
	}

};


// Class Killstreak.KSEquipment
// 0x00A0 (0x02C0 - 0x0220)
class AKSEquipment : public AInfo
{
public:
	bool                                               bInitialized;                                             // 0x0220(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0221(0x0003) MISSED OFFSET
	struct FKSEquipRepInfo                             EquipInfo;                                                // 0x0224(0x0014) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0238(0x0018) MISSED OFFSET
	TScriptInterface<class UKSEquipmentManagerOwner>   EquipmentManagerOwner;                                    // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                // 0x0260(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0268(0x0018) MISSED OFFSET
	struct FGiveItemParameters                         GiveParameters;                                           // 0x0280(0x001C) (CPF_Net, CPF_Transient, CPF_DuplicateTransient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	uint16_t                                           EquipmentId;                                              // 0x029C(0x0002) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x2];                                       // 0x029E(0x0002) MISSED OFFSET
	class UKSEquipmentCosmeticComponent*               EquipmentCosmeticComponent;                               // 0x02A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x02A8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCosmeticComponentCreated;                               // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipment");
		return ptr;
	}


	void Unequip(bool bLocal, bool bWillReequip);
	bool SetEquipPoint(const struct FGameplayTag& InEquipPoint);
	void OnUnequipped(bool bWillReequip);
	void OnRep_GiveParameters();
	void OnRep_EquipPoint();
	void OnRep_EquipmentId();
	void OnEquipped();
	bool IsInitialized();
	bool IsInAction();
	bool IsEquipped();
	class UKSItem* GetKSItem();
	struct FGiveItemParameters GetGiveParameters();
	struct FGameplayTag GetEquipPoint();
	uint16_t GetEquipmentId();
	class UKSEquipmentCosmeticComponent* GetCosmeticComponent();
	bool EquipNoPoint();
	void Drop();
};


// Class Killstreak.KSWeapon
// 0x0458 (0x0718 - 0x02C0)
class AKSWeapon : public AKSEquipment
{
public:
	bool                                               bCanSwapOnFire;                                           // 0x02C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanSwapOnDown;                                           // 0x02C1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanSwapOutOnInteraction;                                 // 0x02C2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanSwapOutWhileAimingDownSights;                         // 0x02C3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x14];                                      // 0x02C4(0x0014) MISSED OFFSET
	class UClass*                                      LoadedDropClass;                                          // 0x02D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02E0(0x0008) MISSED OFFSET
	bool                                               bNoWeaponAsset;                                           // 0x02E8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x02E9(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSWeaponAsset>               WeaponAssetPtr;                                           // 0x02F0(0x0028) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              WeaponAsset;                                              // 0x0318(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0320(0x0010) MISSED OFFSET
	uint32_t                                           AutoSwapOutWeaponId;                                      // 0x0330(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	struct FAuxiliaryWeaponInfo                        AuxiliaryWeaponInfo;                                      // 0x0338(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, class AKSWeapon*>               AuxiliaryWeapons;                                         // 0x0348(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreatedDeployable;                                      // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	EKSWeaponDestroyReason                             DestroyReason;                                            // 0x03A8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x03B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerState*                              PlayerStateInstigator;                                    // 0x03B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseCompressStateTransmission;                            // 0x03C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x17];                                      // 0x03C1(0x0017) MISSED OFFSET
	EWeaponStateNew                                    WeaponState;                                              // 0x03D8(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponStateNew                                    LocalWeaponState;                                         // 0x03D9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x2];                                       // 0x03DA(0x0002) MISSED OFFSET
	float                                              LastStateChangeTimeStamp;                                 // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FWeaponStateChangeRequest>           PendingStateChangeRequests;                               // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x2];                                       // 0x03F0(0x0002) MISSED OFFSET
	uint16_t                                           NextStateRequestId;                                       // 0x03F2(0x0002) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x4];                                       // 0x03F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponStateChangedDel;                                  // 0x03F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData10[0x31];                                      // 0x0408(0x0031) MISSED OFFSET
	bool                                               bPendingFire;                                             // 0x0439(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bBotPendingFire;                                          // 0x043A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFireOnce;                                                // 0x043B(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                KickbackShotIndex;                                        // 0x043C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackResetTimeLeft;                                    // 0x0440(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                BurstShotIndex;                                           // 0x0444(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinCookTimeStamp;                                         // 0x0448(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsingPostFireForgiveness;                                // 0x044C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x044D(0x0003) MISSED OFFSET
	float                                              PrefireStartTime;                                         // 0x0450(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         FireLockout;                                              // 0x0454(0x000C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFire;                                                   // 0x0460(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnReloadFailed;                                           // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DeathShotForgivenessTime;                                 // 0x0480(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTryToReloadEveryTickOnEmpty;                             // 0x0484(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0485(0x0003) MISSED OFFSET
	int                                                CachedReloadSize;                                         // 0x0488(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AmmoInClip;                                               // 0x048C(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ClipSize;                                                 // 0x0490(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AmmoConsumedSinceLastReload;                              // 0x0494(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FWeaponStateChangeRequest                   LastReloadRequest;                                        // 0x0498(0x0010) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bWeaponStartsLoaded;                                      // 0x04A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EReloadReplicationFlags                            ReloadReplicationFlags;                                   // 0x04A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x6];                                       // 0x04AA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnExhaustedDel;                                           // 0x04B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldResumeReload;                                      // 0x04C0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstReload;                                             // 0x04C1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x6];                                       // 0x04C2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAmmoChangedDel;                                         // 0x04C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData15[0x18];                                      // 0x04D8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAmmoInClipConsumed;                                     // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0500(0x0008) MISSED OFFSET
	class UClass*                                      LoadedDamageTypeClass;                                    // 0x0508(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHiddenInteractableUpdate;                               // 0x0510(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      CachedHiddenInteractable;                                 // 0x0520(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x18];                                      // 0x0528(0x0018) MISSED OFFSET
	float                                              NextExpectedTimerEndTime;                                 // 0x0540(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	struct FTimerHandle                                ActiveTimer;                                              // 0x0548(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCanEverInterruptSprinting;                               // 0x0550(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0551(0x0003) MISSED OFFSET
	float                                              SprintRecoveryRemaining;                                  // 0x0554(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReleasedFireInSprintRecovery;                            // 0x0558(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDodgeRollInterruptedReload;                              // 0x0559(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSprintCanInterruptReload;                                // 0x055A(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDodgeRollCanInterruptReload;                             // 0x055B(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DodgeRollRecoveryRemaining;                               // 0x055C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x18];                                      // 0x0560(0x0018) MISSED OFFSET
	bool                                               bInLockon;                                                // 0x0578(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x3];                                       // 0x0579(0x0003) MISSED OFFSET
	float                                              LockonProgress;                                           // 0x057C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LockonDuration;                                           // 0x0580(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    LockonStartRotation;                                      // 0x0584(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    LockonEndRotation;                                        // 0x0590(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x58];                                      // 0x059C(0x0058) MISSED OFFSET
	struct FRandomStream                               WeaponRandomStream;                                       // 0x05F4(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x54];                                      // 0x05FC(0x0054) MISSED OFFSET
	class UKSAimFrictionData*                          AimAssistFrictionData;                                    // 0x0650(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAimMagnetismData*                         AimAssistMagnetismData;                                   // 0x0658(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAimLockData*                              AimAssistLockData;                                        // 0x0660(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAimSnapData*                              AimAssistSnapData;                                        // 0x0668(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistFriction;                        // 0x0670(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistMagnetism;                       // 0x0671(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForAimAssistLock;                            // 0x0672(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x5];                                       // 0x0673(0x0005) MISSED OFFSET
	class UCurveVector*                                AimAssistFrictionCurve;                                   // 0x0678(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistFrictionDistanceCurve;                           // 0x0680(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistMagnetismCurve;                                  // 0x0688(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistMagnetismDistanceCurve;                          // 0x0690(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistLockCurve;                                       // 0x0698(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 AimAssistLockDistanceCurve;                               // 0x06A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistFriction;                     // 0x06A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistMagnetism;                    // 0x06A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireInputForHipAimAssistLock;                         // 0x06AA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x5];                                       // 0x06AB(0x0005) MISSED OFFSET
	class UCurveVector*                                HipAimAssistFrictionCurve;                                // 0x06B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistFrictionDistanceCurve;                        // 0x06B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                HipAimAssistMagnetismCurve;                               // 0x06C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistMagnetismDistanceCurve;                       // 0x06C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                HipAimAssistLockCurve;                                    // 0x06D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HipAimAssistLockDistanceCurve;                            // 0x06D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    MaxAimAssistSnapRotation;                                 // 0x06E0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x4];                                       // 0x06EC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 AimAssistSnapDistanceCurve;                               // 0x06F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                AimAssistSnapCurve;                                       // 0x06F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x18];                                      // 0x0700(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon");
		return ptr;
	}


	bool WasRemoved();
	bool WasDropped();
	bool UsingAccuracyLoss();
	void UpdateHiddenInteractable();
	bool StopFireOnRelease();
	void StopFire();
	void StopDefaultAim();
	bool StopAltFire();
	void StopAimOverShoulder();
	void StopAimDownSights();
	void StateRequestTimeoutExpired();
	bool StartRetrieving(bool bInstant);
	bool StartReload();
	bool StartHolstering();
	bool StartFire();
	void StartDefaultAim();
	bool StartAltFire();
	void StartAimOverShoulder();
	void StartAimDownSights();
	void SimulateConsumeAmmo(int* AmmoInClipAfterConsume, int* AmmoToConsumeFromInventory);
	bool ShouldSwapOffBeInstant();
	bool ShouldStartReloadInterruptSprinting();
	bool ShouldStartHolsterInterruptSprinting();
	bool ShouldStartFireInterruptSprinting();
	bool ShouldStartFireInterruptAimDownSights();
	bool ShouldQuickMeleeAsBackupFire();
	bool ShouldEACRecordAsMeleeAttackNow();
	bool ShouldConsumeAmmoDirectlyFromInventory();
	bool ShouldBeRemovedWhenExhausted();
	void SetAutoSwapOutWeaponId(uint32_t OtherWeaponId);
	void ServerStartForcedVariableFireRateUpdate();
	void ServerRetrieveActiveWeaponCompressed(const struct FWeaponStateChangeRequest& request, uint16_t LastRequestId);
	void ServerRetrieveActiveWeapon(const struct FWeaponStateChangeRequest& request);
	void ServerRequestStateChangeCompressed(const struct FWeaponStateChangeRequest& request, uint16_t LastRequestId);
	void ServerRequestStateChange(const struct FWeaponStateChangeRequest& request);
	void ServerPostReloadCompressed(const struct FWeaponStateChangeRequest& request, int AmmoDelta, uint16_t LastRequestId);
	void ServerPostReload(const struct FWeaponStateChangeRequest& request, int AmmoDelta);
	void ServerEndForcedVariableFireRateUpdate();
	void ServerCookReleasedCompressed(const struct FWeaponStateChangeRequest& request, float AdditionalCookTime, uint16_t LastRequestId);
	void ServerCookReleased(const struct FWeaponStateChangeRequest& request, float AdditionalCookTime);
	void Reload();
	void RecoverBackToIdleOnUnpossess();
	void ProcessHits(const struct FAimData& ReceivedAim, TArray<struct FHitResult> Hits);
	void PreLoadAmmo();
	bool OwnerIsTransitioningAimState();
	bool OwnerIsSwimming();
	bool OwnerIsSprinting();
	bool OwnerIsReloadingAnyWeapon();
	bool OwnerIsMovingOnGround();
	bool OwnerIsLocallyViewed();
	bool OwnerIsFreeFalling();
	bool OwnerIsFiringMeleeWeapon();
	bool OwnerIsDowned();
	bool OwnerIsAlive();
	bool OwnerHasAmmo();
	float OnStartRetrieving(EWeaponStateNew PreviousState);
	float OnStartReloadCooldown(EWeaponStateNew PreviousState);
	float OnStartPreReload(EWeaponStateNew PreviousState);
	float OnStartPreFire(EWeaponStateNew PreviousState);
	float OnStartPostReload(EWeaponStateNew PreviousState);
	float OnStartPostFire(EWeaponStateNew PreviousState);
	void OnStartInactive(EWeaponStateNew PreviousState);
	float OnStartHolstering(EWeaponStateNew PreviousState);
	float OnStartCooldown(EWeaponStateNew PreviousState);
	float OnStartBuildup(EWeaponStateNew PreviousState);
	void OnRep_WeaponState();
	void OnRep_WeaponAsset();
	void OnRep_AuxiliaryWeaponInfo();
	void OnRep_AutoSwapOutWeaponId();
	void OnRep_Ammo();
	void OnPostMantleLockoutEnd();
	void OnOwnerMovementModeChangedNative(TEnumAsByte<EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnOwnerMovementModeChanged(TEnumAsByte<EMovementMode> OldMode, unsigned char OldCustomMode, TEnumAsByte<EMovementMode> NewMode, unsigned char NewCustomMode);
	void OnEndRetrieving(EWeaponStateNew NextState);
	void OnEndReloadCooldown(EWeaponStateNew NewState);
	void OnEndPreReload(EWeaponStateNew NextState);
	void OnEndPreFire(EWeaponStateNew NextState);
	void OnEndPostReload(EWeaponStateNew NextState);
	void OnEndPostFire(EWeaponStateNew NextState);
	void OnEndInactive(EWeaponStateNew NextState);
	void OnEndIdleState(EWeaponStateNew NextState);
	void OnEndHolstering(EWeaponStateNew NextState);
	void OnEndCooldown(EWeaponStateNew NextState);
	void OnEndBuildup(EWeaponStateNew NextState);
	void OnDecayFireRateTimerElapsed();
	void OnBeginIdleState(EWeaponStateNew PreviousState);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsRetrieving();
	bool IsReloading();
	bool IsInSprintRecovery();
	bool IsInReloadingLoop();
	bool IsInFiringLoop();
	bool IsInDodgeRollRecovery();
	bool IsHolstering();
	bool IsFiring();
	bool IsExhausted();
	bool IsEquippedMelee();
	bool IsEquippedMainWeapon();
	bool IsEquippedGrenade();
	bool IsCooking();
	bool IsClipFull();
	bool IsClipEmpty();
	bool IsActiveWeapon();
	bool InstantReload();
	bool HasAttachment(class UKSWeaponAttachmentInstance* InAttachment);
	void HandleExhausted();
	EWeaponStateNew GetWeaponState();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetWalkSpeedModifier();
	float GetReloadCooldownTime();
	float GetPreReloadTime();
	float GetPostReloadTime();
	float GetMovementAccuracyPenalty();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetLimbDamageAmount();
	class AKSPlayerState* GetKSPlayerStateInstigator();
	class AKSPlayerState* GetKSPlayerState();
	float GetInAirAccuracyModifier();
	class AActor* GetHiddenInteractable();
	float GetHeadDamageAmount();
	class AController* GetDamageInstigator();
	float GetDamageFalloffRangeScaler();
	float GetCrouchAccuracyModifier();
	int GetClipSize();
	class AKSCharacter* GetCharacterOwner();
	bool GetCanUseOffGround();
	float GetBaseDamageAmount();
	float GetBaseAccuracy();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void GetAttachmentInstances(TArray<class UKSWeaponAttachmentInstance*>* OutWeaponAttachmentInstances);
	class UKSWeaponAttachmentInstance* GetAttachment(const struct FGameplayTag& InAttachPoint);
	EAmmoType GetAmmoType();
	int GetAmmoInOwnerInventory();
	int GetAmmoInClip();
	float GetAimOverShoulderAccuracyModifier();
	float GetAimDownSightsFOV();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	void FireWeapon();
	void EndState(EWeaponStateNew NextState);
	void ConsumePendingFire();
	int ConsumeAmmo();
	void ClientStateChangeRejected(uint16_t nRequestId, EWeaponStateNew RestoreState);
	void ClientStateChangeAccepted(uint16_t nRequestId);
	void ClientSetVariableFireRateState(EVariableFireRateState State, float Timestamp, float PostFireTime);
	void ClientRecoverSeedMisalignment(uint16_t RequestID, const struct FRandomStream& ServerStream);
	void ClientNotifyRecoveryFinish();
	void ClientForceUpdateAmmoInClip(int NewAmmo);
	void ClientForceIdleFromFire();
	void ClientFixLastReload(uint16_t RequestID, int InAmmoInClip);
	void ClientFireWeaponRejected(uint16_t nRequestId);
	void CheckExhausted();
	bool CheckDeathShotForgiveness();
	bool CanUseAnAimStateNow();
	bool CanToggleOutOfAimDownSightsNow();
	bool CanToggleIntoAimDownSightsNow();
	bool CanStartReloadNow();
	bool CanStartFireNow();
	bool CanRetrieveNow();
	bool CanReloadNowCommon();
	bool CanRefireNow();
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanInteractWith(class AActor* InteractableTarget);
	bool CanHolsterNow();
	bool CanFireNowCommon();
	bool CanEverReload();
	bool CanEverAimOverShoulder();
	bool CanEverAimDownSights();
	bool CanEverAimAlternate();
	bool CanDropNow();
	bool CanCookNow();
	bool CanContinueReloadNow();
	bool CancelHolstering();
	bool CanBeSwappedTo(bool bByForce);
	bool CanBeSwappedFrom();
	bool CanBeInterruptedNow();
	float CalculateDamageFromHitInfo(const struct FHitResult& HitInfo);
	float CalculateDamageFalloffFromHitResults(const struct FHitResult& HitInfo);
	float CalculateDamageFalloffFromDistance(float Distance);
	void BeginState(EWeaponStateNew PreviousState);
	void AltFireInitiated();
	void AltFireEnded();
	bool AllowZiplineRightNow();
	bool AllowSprintingRightNow();
	bool AllowDodgeRollRightNow();
	void AimTransitionComplete(EKSCharacterAimMode NewAimState);
	int AddAmmoDirectlyToClip(int AddedAmmo);
	bool AbortReload();
	void AbortFire();
};


// Class Killstreak.KSArmor
// 0x0008 (0x0720 - 0x0718)
class AKSArmor : public AKSWeapon
{
public:
	float                                              Durability;                                               // 0x0718(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bArmorIsBroken;                                           // 0x071C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x071D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSArmor");
		return ptr;
	}


	bool ShouldDestroyOnBreak();
	float RepairArmor(float DurabilityToAdd);
	bool IsRepairableByInteract();
	bool IsRepairableArmor();
	bool IsArmorBeingRepaired();
	float GetMaxDurability();
	float GetDurability();
	class UKSArmorAsset* GetArmorAsset();
	bool CanArmorBeRepaired();
	bool CanAbsorbDamageType(class UClass* DamageTypeClass);
	float CalcAbsorbRadialDamage(float Damage, const struct FRadialDamageEvent& RadialDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	float CalcAbsorbPointDamage(float Damage, const struct FPointDamageEvent& PointDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
};


// Class Killstreak.KSWeaponAsset
// 0x0648 (0x0878 - 0x0230)
class UKSWeaponAsset : public UKSItem
{
public:
	class UDataTable*                                  ItemDisplayStatParamsTable;                               // 0x0230(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       WeaponDisplayName;                                        // 0x0238(0x0018) (CPF_Deprecated, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       WeaponDescription;                                        // 0x0250(0x0018) (CPF_Deprecated, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                WeaponType;                                               // 0x0268(0x0008) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSWeaponEquipType                                 WeaponEquipType;                                          // 0x0270(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       WeaponClass;                                              // 0x0278(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       WeaponComponentClass;                                     // 0x02A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       WeaponAmmoWidgetClass;                                    // 0x02C8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       WeaponDropClass;                                          // 0x02F0(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUnique;                                                  // 0x0318(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldBeRemovedWhenExhausted;                            // 0x0319(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBeDropped;                                            // 0x031A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWillDropWhenDowned;                                      // 0x031B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceUprightDrops;                                       // 0x031C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoesRestoreAmmo;                                         // 0x031D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bModsCanReplenishAmmo;                                    // 0x031E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoLocalReveals;                                          // 0x031F(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverFire;                                             // 0x0320(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLagCompensatedFire;                                      // 0x0321(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreNoFire;                                            // 0x0322(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLimitNumInPlay;                                          // 0x0323(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxNumInPlay;                                             // 0x0324(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsesEquipPoint;                                          // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       ValidEquipPoints;                                         // 0x0330(0x0020) (CPF_Deprecated, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	EFireModeType                                      FireModeType;                                             // 0x0350(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponCastType                                    CastType;                                                 // 0x0351(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0352(0x0002) MISSED OFFSET
	int                                                RoundsPerBurst;                                           // 0x0354(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseAltFire;                                              // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseBuildupForCooking;                                    // 0x0359(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2];                                       // 0x035A(0x0002) MISSED OFFSET
	float                                              BuildupTime;                                              // 0x035C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PreFireTime;                                              // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PreFireInterruptThreshold;                                // 0x0364(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AltPreFireTime;                                           // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFireTime;                                             // 0x036C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AltPostFireTime;                                          // 0x0370(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFireForgivenessTime;                                  // 0x0374(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSwapAfterFire;                                           // 0x0378(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0379(0x0003) MISSED OFFSET
	float                                              CooldownTime;                                             // 0x037C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseChargingFireRate;                                     // 0x0380(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	float                                              InitialPostFireTime;                                      // 0x0384(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FinalPostFireTime;                                        // 0x0388(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFireChargeTime;                                       // 0x038C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFireDecayTime;                                        // 0x0390(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFireDecayDelay;                                       // 0x0394(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverReload;                                           // 0x0398(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsumeAmmoDirectlyFromInventory;                        // 0x0399(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x2];                                       // 0x039A(0x0002) MISSED OFFSET
	int                                                ClipSize;                                                 // 0x039C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EReloadType                                        ReloadType;                                               // 0x03A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x03A1(0x0003) MISSED OFFSET
	float                                              PreReloadTime;                                            // 0x03A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostReloadTime;                                           // 0x03A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReloadCooldownTime;                                       // 0x03AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReloadOnEmptyWhileScoped;                                // 0x03B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	float                                              FirstShotPreReloadTime;                                   // 0x03B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanInterruptPreReload;                                   // 0x03B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EAmmoType                                          AmmoType;                                                 // 0x03B9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x2];                                       // 0x03BA(0x0002) MISSED OFFSET
	int                                                DefaultAmmo;                                              // 0x03BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUnlimitedAmmo;                                           // 0x03C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMuteEmptyClipWarnings;                                   // 0x03C1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x2];                                       // 0x03C2(0x0002) MISSED OFFSET
	float                                              HolsterTime;                                              // 0x03C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldRestrictHolsterInPostFire;                         // 0x03C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x3];                                       // 0x03C9(0x0003) MISSED OFFSET
	float                                              RetriveTime;                                              // 0x03CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanFireFromRetrieve;                                     // 0x03D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EReticleType                                       ReticleType;                                              // 0x03D1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x6];                                       // 0x03D2(0x0006) MISSED OFFSET
	struct FWeaponStateGraph                           WeaponStateGraph;                                         // 0x03D8(0x0140) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoRadialDamage;                                          // 0x0518(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsRadialDamageConical;                                   // 0x0519(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x2];                                       // 0x051A(0x0002) MISSED OFFSET
	float                                              HeadDamageAmount;                                         // 0x051C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageAmount;                                             // 0x0520(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LimbDamageAmount;                                         // 0x0524(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           DamageFalloffCurve;                                       // 0x0528(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRadialDamageParams                         RadialDamageParams;                                       // 0x0540(0x0014) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreFriendlies;                                        // 0x0554(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreSelf;                                              // 0x0555(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreWalls;                                             // 0x0556(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x1];                                       // 0x0557(0x0001) MISSED OFFSET
	float                                              RadialConicalHalfAngle;                                   // 0x0558(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       DamageTypeClass;                                          // 0x0560(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CautionRadius;                                            // 0x0588(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ShotPenetrationCount;                                     // 0x058C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultAimTransitionTime;                                 // 0x0590(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverAimOverShoulder;                                  // 0x0594(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0595(0x0003) MISSED OFFSET
	float                                              AimOverShoulderTransitionTime;                            // 0x0598(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverAimDownSights;                                    // 0x059C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x3];                                       // 0x059D(0x0003) MISSED OFFSET
	float                                              AimDownSightsTransitionTime;                              // 0x05A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockoutAimStateInCooldown;                               // 0x05A4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x3];                                       // 0x05A5(0x0003) MISSED OFFSET
	float                                              AimDownSightsFov;                                         // 0x05A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverAimAlternate;                                     // 0x05AC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x3];                                       // 0x05AD(0x0003) MISSED OFFSET
	float                                              AimAlternateTransitionTime;                               // 0x05B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPrefireLockon;                                           // 0x05B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x3];                                       // 0x05B5(0x0003) MISSED OFFSET
	float                                              PrefireLockonAngle;                                       // 0x05B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PrefireLockonDistance;                                    // 0x05BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPrefireOverlapSkipsToFire;                               // 0x05C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x7];                                       // 0x05C1(0x0007) MISSED OFFSET
	TArray<struct FPrefireSkipWindow>                  PrefireSkipWindows;                                       // 0x05C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PrefireOverlapGracePeriod;                                // 0x05D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EThirdPersonAimOriginType                          ThirdPersonAimOriginType;                                 // 0x05DC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x3];                                       // 0x05DD(0x0003) MISSED OFFSET
	struct FVector                                     ThirdPersonFixedRelativeOffset;                           // 0x05E0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       ThirdPersonAimOriginSocketName;                           // 0x05EC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BaseAccuracy;                                             // 0x05F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchAccuracyModifier;                                   // 0x05F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimOverShoulderAccuracyModifier;                          // 0x05FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InAirAccuracyModifier;                                    // 0x0600(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementAccuracyPenalty;                                  // 0x0604(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseAccuracyLoss;                                         // 0x0608(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0609(0x0003) MISSED OFFSET
	float                                              AccuracyLossPerShot;                                      // 0x060C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxFiringAccuracyLoss;                                    // 0x0610(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyReturnRate;                                       // 0x0614(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyGainPerShot;                                      // 0x0618(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxFiringAccuracyGain;                                    // 0x061C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAimedFiringAccuracyGain;                               // 0x0620(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyDecayRate;                                        // 0x0624(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AccuracyReturnDelay;                                      // 0x0628(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHipFireAccuracy;                                       // 0x062C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAimedAccuracy;                                         // 0x0630(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	class UKickbackModule*                             KickbackModule;                                           // 0x0638(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackApplicationTimeOverride;                          // 0x0640(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanResetKickback;                                        // 0x0644(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0645(0x0003) MISSED OFFSET
	float                                              KickbackResetTime;                                        // 0x0648(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseKickbackRecovery;                                     // 0x064C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x3];                                       // 0x064D(0x0003) MISSED OFFSET
	float                                              KickbackRecoveryDelay;                                    // 0x0650(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackRecoveryRate;                                     // 0x0654(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackRecoveryAcceleration;                             // 0x0658(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxCumulativeKickbackVerticalAngle;                       // 0x065C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GamepadKickbackScaling;                                   // 0x0660(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintRecoveryTime;                                       // 0x0664(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartFireInterruptsSprinting;                            // 0x0668(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartReloadInterruptsSprinting;                          // 0x0669(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartHolsterInterruptsSprinting;                         // 0x066A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x1];                                       // 0x066B(0x0001) MISSED OFFSET
	float                                              DodgeRollRecoveryTime;                                    // 0x066C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldPreventDodgeRollDuringFire;                        // 0x0670(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanFireWhileInPowerSlide;                                // 0x0671(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanUseWhileOnZipline;                                    // 0x0672(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsAudible;                                               // 0x0673(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AudibleRange;                                             // 0x0674(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WalkSpeedModifier;                                        // 0x0678(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSSpeedModifier;                                         // 0x067C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FiringSpeedModifier;                                      // 0x0680(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanUseOffGround;                                         // 0x0684(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x3];                                       // 0x0685(0x0003) MISSED OFFSET
	struct FGameplayTagContainer                       ValidWeaponAttachmentPoints;                              // 0x0688(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x50];                                      // 0x06A8(0x0050) UNKNOWN PROPERTY: ValidAttachments
	int                                                AttachmentSlotCount;                                      // 0x06F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET
	TMap<struct FName, TSoftObjectPtr<class UKSWeaponAsset>> AuxiliaryWeapons;                                         // 0x0700(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UForceFeedbackEffect>         VibrationEffect;                                          // 0x0750(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UForceFeedbackEffect>         AlternativeVibrationEffect;                               // 0x0778(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UForceFeedbackAttenuation>    AlternativeVibrationAttenuation;                          // 0x07A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleEvent;                                              // 0x07C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSWeaponAsset>               WeaponUpgrade;                                            // 0x07D0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_AssetRegistrySearchable, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   ItemRenderImage;                                          // 0x07F8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSRollMultiplier;                                        // 0x0820(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSBumpStartStopMultiplier;                               // 0x0824(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSBumpLoopingMultiplier;                                 // 0x0828(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FADSBlurValues                              ADSBlurValuesInfo;                                        // 0x082C(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_Config, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               EnableCustomMask;                                         // 0x085C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x3];                                       // 0x085D(0x0003) MISSED OFFSET
	class UTexture2D*                                  CustomMaskTexture;                                        // 0x0860(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                        WeaponTags;                                               // 0x0868(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset");
		return ptr;
	}


	bool WillDropWhenDowned();
	bool UsingAccuracyLoss();
	static class AKSWeapon* TryToEquipToCharacterNoPointGiven(class UKSWeaponAsset* WeaponAsset, class AKSCharacter* InOwner, class AActor* InInstigator, const struct FGiveItemParameters& InGiveItemParameters, bool bAllowSyncLoad);
	static class AKSWeapon* TryToEquipToCharacter(class UKSWeaponAsset* WeaponAsset, class AKSCharacter* InOwner, class AActor* InInstigator, const struct FGameplayTag& EquipPoint, const struct FGiveItemParameters& InGiveItemParameters, bool bAllowSyncLoad);
	bool ShouldUseChargingFireRate();
	bool ShouldUseBuildupForCooking();
	bool ShouldStartReloadInterruptSprinting();
	bool ShouldStartHolsterInterruptSprinting();
	bool ShouldStartFireInterruptSprinting();
	bool ShouldPreventDodgeRollDuringFire();
	bool ShouldPrefireOverlapSkipToFire();
	bool ShouldMuteEmptyClipWarnings();
	bool ShouldLockonPrefire();
	bool ShouldLagCompensateFire(class AKSPlayerState* FiringPlayer);
	bool ShouldForceUprightDrops();
	bool ShouldDoRadialDamage();
	bool ShouldBeRemovedWhenExhausted();
	bool RequiresAnEquipPoint();
	struct FInterpCurveVector2D MakeKickbackCurve(int nShotIndex, float AbsoluteMaxDuration);
	bool LockoutAimStateInCooldown();
	bool LimitNumInPlay();
	bool IsUnique();
	bool IsRadialDamageConical();
	bool IsGadget();
	float IsAudible();
	bool HasKickback();
	TSoftObjectPtr<class UKSWeaponAsset> GetWeaponUpgrade();
	struct FGameplayTag GetWeaponType();
	void GetWeaponStats(TArray<struct FString>* OutStats);
	struct FString GetWeaponNameAsString();
	struct FText GetWeaponName();
	struct FGameplayTag GetWeaponEquipType();
	TSoftObjectPtr<class UClass> GetWeaponDropClass();
	struct FString GetWeaponDescriptionAsString();
	struct FText GetWeaponDescription();
	TSoftObjectPtr<class UClass> GetWeaponComponentClass();
	TSoftObjectPtr<class UClass> GetWeaponClass();
	EKSWeaponCategoryType GetWeaponCategoryType();
	void GetWeaponAttachmentPoints(struct FGameplayTagContainer* OutAttachPoints);
	TSoftObjectPtr<class UClass> GetWeaponAmmoWidgetClass();
	float GetWalkSpeedModifier();
	TSoftObjectPtr<class UForceFeedbackEffect> GetVibrationEffect();
	struct FGameplayTagContainer GetValidEquipPoints();
	void GetValidAttachments();
	bool GetUseAltFire();
	bool GetUnlimitedAmmo();
	struct FVector GetThirdPersonFixedRelativeOffset();
	bool GetSwapAfterFire();
	float GetSprintRecoveryTime();
	TSoftObjectPtr<class UTexture2D> GetSoftItemRenderImage();
	int GetShotPenetrationCount();
	TSoftObjectPtr<class UAkAudioEvent> GetRumbleEvent();
	int GetRoundsPerBurst();
	float GetRetrieveTime();
	EReticleType GetReticleType();
	EReloadType GetReloadType();
	float GetReloadCooldownTime();
	bool GetRadialIgnoreWalls();
	bool GetRadialIgnoreSelf();
	bool GetRadialIgnoreFriendlies();
	struct FRadialDamageParams GetRadialDamageParams();
	float GetRadialConicalHalfAngle();
	float GetPreReloadTime();
	float GetPreFireTime();
	int GetPrefireSkipWindowNum();
	struct FPrefireSkipWindow GetPrefireSkipWindow(int Index);
	float GetPrefireOverlapGracePeriod();
	float GetPrefireLockonDistance();
	float GetPrefireLockonAngle();
	float GetPreFireInterruptThreshold();
	float GetPostReloadTime();
	float GetPostFireTime();
	float GetPostFireForgivenessTime();
	float GetPostFireDecayTime();
	float GetPostFireDecayDelay();
	float GetPostFireChargeTime();
	float GetOuterRadius();
	float GetMovementAccuracyPenalty();
	int GetMaxNumInPlay();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxFalloffDistance();
	float GetMaxCumulativeKickbackVerticalAngle();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetLimbDamageAmount();
	float GetKickbackResetTime();
	float GetKickbackRecoveryRate();
	float GetKickbackRecoveryDelay();
	float GetKickbackRecoveryAcceleration();
	float GetKickbackApplicationOverride();
	float GetInnerRadius();
	float GetInitialFireRate();
	float GetInAirAccuracyModifier();
	float GetHolsterTime();
	float GetHeadDamageAmount();
	float GetGamepadKickbackScaling();
	float GetFirstShotPreReloadTime();
	float GetFiringSpeedModifier();
	EFireModeType GetFireModeType();
	float GetFinalFireRate();
	float GetDodgeRollRecoveryTime();
	int GetDefaultAmmo();
	float GetDefaultAimTransitionTime();
	TSoftObjectPtr<class UClass> GetDamageTypeClass();
	float GetDamageAmount();
	float GetCrouchAccuracyModifier();
	float GetCooldownDownTime();
	bool GetConsumeAmmoDirectlyFromInventory();
	void GetCompatibleAttachments(TArray<class UKSWeaponAttachment*>* OutAttachments);
	void GetCompatibleAttachmentAssets(TArray<TSoftObjectPtr<class UKSWeaponAttachment>>* OutAttachments);
	int GetClipSize();
	float GetCautionRadius();
	EWeaponCastType GetCastType();
	bool GetCanUseOffGround();
	float GetCanFireWhileInPowerSlide();
	float GetBuildupTime();
	float GetBaseRadialDamage();
	float GetBaseAccuracy();
	float GetAudibleRange();
	int GetAttachmentSlotCount();
	EAmmoType GetAmmoType();
	TSoftObjectPtr<class UForceFeedbackEffect> GetAlternativeVibrationEffect();
	TSoftObjectPtr<class UForceFeedbackAttenuation> GetAlternativeVibrationAttenuation();
	float GetAlternatePreFireTime();
	float GetAlternatePostFireTime();
	float GetAimOverShoulderTransitionTime();
	float GetAimOverShoulderAccuracyModifier();
	float GetAimDownSightsTransitionTime();
	float GetAimDownSightsFOV();
	float GetAimAlternateTransitionTime();
	float GetADSSpeedModifier();
	float GetADSRollMultiplier();
	float GetADSBumpStartStopMultiplier();
	float GetADSBumpLoopingMultiplier();
	struct FADSBlurValues GetADSBlurValuesInfo();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	bool DoesScopingAllowAutoReload();
	bool DoesRestoreAmmo();
	bool DoesIgnoreNoFire();
	static class AKSProjectile* CreateProjectile(class UObject* WorldContextObject, class UKSWeaponAsset* WeaponAsset, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FDropItemParameters& InDropItemParameters, class AKSWeapon* SpawningWeapon, class AActor* SpawningOwner, class APawn* SpawningInstigator, bool bDeferConstruction, const struct FName& ProjectileInfoKey);
	static class AKSProjectile* CreateAndExplodeProjectile(class UObject* WorldContextObject, class UKSWeaponAsset* WeaponAsset, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FDropItemParameters& InDropItemParameters, class AKSWeapon* SpawningWeapon, class AActor* SpawningOwner, class APawn* SpawningInstigator, bool bDeferConstruction);
	static float ConeHalfAngleToAccuracy(float HalfAngle);
	bool CanWeaponStateTransition(EWeaponStateNew OldState, EWeaponStateNew NewState);
	bool CanResetKickback();
	bool CanRecoverFromKickback();
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanModsReplenishAmmo();
	bool CanInterruptPreReload();
	bool CanEverReload();
	bool CanEverFire();
	bool CanEverAimOverShoulder();
	bool CanEverAimDownSights();
	bool CanEverAimAlternate();
	bool CanDoLocalReveals();
	bool CanBeDropped();
	float CalculateDamageFromProjectileHit(const struct FHitResult& HitInfo, class AKSProjectile* Projectile);
	float CalculateDamageFromInstantHit(const struct FHitResult& HitInfo, float DamageFalloffRangeScaler);
	float CalculateDamageFalloffFromProjectileHit(const struct FHitResult& HitInfo, class AKSProjectile* Projectile);
	float CalculateDamageFalloffFromHitResults(const struct FHitResult& HitInfo, float FalloffRangeScaler);
	float CalculateDamageFalloffFromDistance(float Distance, float FalloffRangeScaler);
	static float AccuracyToConeHalfAngle(float Accuracy);
};


// Class Killstreak.KSArmorAsset
// 0x0018 (0x0890 - 0x0878)
class UKSArmorAsset : public UKSWeaponAsset
{
public:
	float                                              Durability;                                               // 0x0878(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StartingDurability;                                       // 0x087C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageAbsorbPercent;                                      // 0x0880(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DisplayLevel;                                             // 0x0884(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAbsorbsHeadDamage;                                       // 0x0888(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAbsorbsBreakingHit;                                      // 0x0889(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bArmorIsRepairable;                                       // 0x088A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyOnBreak;                                          // 0x088B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRepairableByInteract;                                    // 0x088C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x088D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSArmorAsset");
		return ptr;
	}


	bool ShouldDestroyOnBreak();
	bool IsRepairableByInteract();
	bool IsArmorRepairable();
	float GetStartingDurability();
	float GetMaxDurability();
	int GetDisplayLevel();
	float GetDamageAbsorbPercent();
	bool DoesAbsorbBreakingHit();
	float CalcAbsorbRadialDamage(float Damage, const struct FRadialDamageEvent& RadialDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	float CalcAbsorbPointDamage(float Damage, const struct FPointDamageEvent& PointDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
};


// Class Killstreak.KSWeaponAssetDrop
// 0x04C8 (0x0848 - 0x0380)
class AKSWeaponAssetDrop : public AKSItemDrop
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                      // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0398(0x0018) MISSED OFFSET
	class AKSProjectile*                               ReturnProjectile;                                         // 0x03B0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET
	class UKSWeaponComponent*                          WeaponComponent;                                          // 0x03C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              WeaponAsset;                                              // 0x03C8(0x0008) (CPF_ZeroConstructor, CPF_Deprecated, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSEquipmentId                              WeaponComponentEquipmentId;                               // 0x03D0(0x0004) (CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class UKSWeaponAsset*                              CachedWeaponAsset;                                        // 0x03D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0xE8];                                      // 0x03E0(0x00E8) MISSED OFFSET
	struct FBundledAmmoInfo                            BundledAmmo;                                              // 0x04C8(0x000C) (CPF_Edit, CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	TArray<int>                                        CachedCsrIds;                                             // 0x04D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSWeaponDropAttachmentContainer            AttachmentContainer;                                      // 0x04E8(0x0128) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAttachWeaponComponentOnDrop;                             // 0x0610(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0611(0x0007) MISSED OFFSET
	struct FKSEquipmentContainer                       EquipmentContainer;                                       // 0x0618(0x0228) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	float                                              CosmeticZOffset;                                          // 0x0840(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0844(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAssetDrop");
		return ptr;
	}


	void SetBundledAmmoToDefault();
	void OverrideDropAmmo(int ReserveAmmo, int AmmoInClip);
	void OnReturnProjectileStopped(const struct FHitResult& HitResult);
	void OnRep_ReturnProjectile();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	class AKSProjectile* GetReturnProjectile();
	bool GetLabelInfoForFireModeType(EFireModeType* FireModeType);
	bool GetLabelInfoForAmmoType(EAmmoType* AmmoType);
	bool CanPickupReplenishAmmo();
	void BroadcastPickupFailedInventoryFull(class AKSCharacter* Receiver);
	bool AddAttachment(class UKSWeaponAttachment* InAttachment);
};


// Class Killstreak.KSArmorAssetDrop
// 0x0008 (0x0850 - 0x0848)
class AKSArmorAssetDrop : public AKSWeaponAssetDrop
{
public:
	float                                              RemainingDurability;                                      // 0x0848(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x084C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSArmorAssetDrop");
		return ptr;
	}

};


// Class Killstreak.KSAssetManager
// 0x01B0 (0x07D8 - 0x0628)
class UKSAssetManager : public UPInv_AssetManager
{
public:
	unsigned char                                      UnknownData00[0x190];                                     // 0x0628(0x0190) MISSED OFFSET
	bool                                               bCookAndPackageActivities;                                // 0x07B8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCookAndPackageJobActivities;                             // 0x07B9(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCookAndPackageWeaponActivities;                          // 0x07BA(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsQuickCook;                                             // 0x07BB(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07BC(0x0004) MISSED OFFSET
	TArray<struct FString>                             AdditionalQuickCookPrimaryAssets;                         // 0x07C0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x07D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAssetManager");
		return ptr;
	}

};


// Class Killstreak.KSAssetManagerSettings
// 0x0130 (0x0168 - 0x0038)
class UKSAssetManagerSettings : public UDeveloperSettings
{
public:
	bool                                               bCookAndPackageActivities;                                // 0x0038(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCookAndPackageJobActivities;                             // 0x0039(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCookAndPackageWeaponActivities;                          // 0x003A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bQuickCook;                                               // 0x003B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FName>                               PrimaryTypesToIgnoreQuickCook;                            // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0050(0x0050) UNKNOWN PROPERTY: QuickCookTypeIgnoreSet
	TArray<struct FString>                             PrimaryAssetsToIgnoreQuickCook;                           // 0x00A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x50];                                      // 0x00B0(0x0050) UNKNOWN PROPERTY: QuickCookAssetIgnoreSet
	unsigned char                                      UnknownData03[0x50];                                      // 0x0100(0x0050) UNKNOWN PROPERTY: QuickCookAssetIngoreSetTypes
	TArray<struct FString>                             PrimaryAssetsToIncludeQuickCook;                          // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ActiveContentProductionChunkId;                           // 0x0160(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ActiveMapProductionChunkId;                               // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAssetManagerSettings");
		return ptr;
	}

};


// Class Killstreak.KSAssetQueryHelperComponent
// 0x0060 (0x0110 - 0x00B0)
class UKSAssetQueryHelperComponent : public UActorComponent
{
public:
	struct FGameplayTagQuery                           PrimaryAssetQuery;                                        // 0x00B0(0x0048) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetId>                     AssetIds;                                                 // 0x00F8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LastResolvedIndex;                                        // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasInitalizedAssetIdList;                                // 0x010C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x010D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAssetQueryHelperComponent");
		return ptr;
	}


	class UObject* ResolvePreviousAssetId();
	class UObject* ResolveNextAssetId();
	class UObject* ResolveAssetIdAtIndex(int Index);
	int GetLastResolvedIndex();
};


// Class Killstreak.KSAsyncImage
// 0x0010 (0x0270 - 0x0260)
class UKSAsyncImage : public UPUMG_AsyncImage
{
public:
	class UMaterialInstanceDynamic*                    MaterialToUse;                                            // 0x0260(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MaterialParameter;                                        // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAsyncImage");
		return ptr;
	}


	void SetMaterialToUse(class UMaterialInstanceDynamic* InMID);
	void SetBrushFromTextureOnItem(class UPlatformInventoryItem* Item, TSoftObjectPtr<class UTexture2D> Texture, bool bMatchSize);
	void SetBrushFromPathOnItem(class UPlatformInventoryItem* Item, const struct FSoftObjectPath& Path, bool bMatchSize);
	void SetBrushFromItemIcon(class UPlatformInventoryItem* Item, bool bMatchSize);
	void SetBrushFromIconInfo(class UIconInfo* IconInfo, bool bMatchSize);
};


// Class Killstreak.KSEquipmentCosmeticComponent
// 0x0068 (0x0118 - 0x00B0)
class UKSEquipmentCosmeticComponent : public UActorComponent
{
public:
	bool                                               bHasBeenUnequipped;                                       // 0x00B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	TScriptInterface<class UKSEquipmentContainerOwner> EquipmentContainerOwner;                                  // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              EquipmentId;                                              // 0x00C8(0x0004) (CPF_Net, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FGameplayTag                                EquipPoint;                                               // 0x00CC(0x0008) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNoEquipPoint;                                            // 0x00D4(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
	TScriptInterface<class USkinTagAssetInterface>     SkinTagAssetOwner;                                        // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00E8(0x0008) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x00F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x00F8(0x0018) MISSED OFFSET
	bool                                               bPropSpawner;                                             // 0x0110(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipmentCosmeticComponent");
		return ptr;
	}


	void OnRep_EquipPoint();
	void OnRep_EquipmentId();
	bool IsOwnerDeadOrDestroyed();
	bool IsLocallyViewed();
	bool IsLocallyManaged();
	bool IsInAction();
	bool IsAPropSpawner();
	struct FGameplayTag GetEquipPoint();
	class UKSCharacterAnimInst* GetCharAnimInstance();
	class AKSCharacter* GetCharacterOwner();
	class USkeletalMeshComponent* GetCharacterMesh();
	void BlueprintOwnerSkinTagContainerChanged();
};


// Class Killstreak.KSWeaponAttachmentCosmeticInst
// 0x0090 (0x01A8 - 0x0118)
class UKSWeaponAttachmentCosmeticInst : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0118(0x0018) MISSED OFFSET
	class UDataTable*                                  DefaultAssetDataTable;                                    // 0x0130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DefaulAssetDataTablePriority;                             // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UKSWeaponAttachmentSkinDetails> SkinDetailsPtr;                                           // 0x0140(0x0028) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0168(0x0010) MISSED OFFSET
	class UKSWeaponAttachment*                         AttachmentAsset;                                          // 0x0178(0x0008) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FGameplayTag                                AttachPoint;                                              // 0x0180(0x0008) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSWeaponComponent*                          ParentComponent;                                          // 0x0188(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSEquipmentId                              ParentEquipmentId;                                        // 0x0190(0x0004) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	class UKSWeaponAsset*                              ParentWeaponAsset;                                        // 0x0198(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bInitialized;                                             // 0x01A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachmentCosmeticInst");
		return ptr;
	}


	void OnRep_ParentEquipmentId();
	void OnRep_AttachPoint();
	void OnRep_AttachmentAsset();
	void OnParentWeaponComponentInitialized();
	void OnParentWeaponComponentCosmeticUpdate();
	void OnComponentCosmeticUpdate(class UKSWeaponComponent* InComponent);
	bool IsInitialized();
	class UKSWeaponComponent* GetParentComponent();
	bool GetLoadedMeshAnimAnimOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData);
	struct FGameplayTag GetAttachPoint();
	class UKSWeaponAttachment* GetAttachmentAsset();
	void GetAccumulatedMeshAndAnimOverrideData(class UKSWeaponAsset* InWeaponAsset, struct FWeaponAttachmentAnimationData* OutData);
	void EventOnInitialized();
};


// Class Killstreak.KSAttachCosmeticInst_Reactive
// 0x0010 (0x01B8 - 0x01A8)
class UKSAttachCosmeticInst_Reactive : public UKSWeaponAttachmentCosmeticInst
{
public:
	int                                                CachedCsrId;                                              // 0x01A8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	class AKSCosmeticStateReplicator*                  CachedCsr;                                                // 0x01B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAttachCosmeticInst_Reactive");
		return ptr;
	}


	void OnWrapProgressUpdated(int NewValue);
	void OnWrapEventTriggered();
	void OnRep_CachedCsrId();
	void OnNewCsrRegistered(class AKSCosmeticStateReplicator* NewCsr);
	class UMaterialInstanceDynamic* GetDynamicMaterialAtIndex(int Index);
};


// Class Killstreak.KSWeaponAssetDrop_MacGuffin
// 0x00B8 (0x0900 - 0x0848)
class AKSWeaponAssetDrop_MacGuffin : public AKSWeaponAssetDrop
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0848(0x0008) MISSED OFFSET
	struct FKSObjectiveInfo                            ObjectiveInfo;                                            // 0x0850(0x00B0) (CPF_Net, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAssetDrop_MacGuffin");
		return ptr;
	}


	void OnRep_ObjectiveInfo();
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
};


// Class Killstreak.KSNeutralBombDrop
// 0x0160 (0x0A60 - 0x0900)
class AKSNeutralBombDrop : public AKSWeaponAssetDrop_MacGuffin
{
public:
	float                                              CurrentInteractionProgress;                               // 0x0900(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0904(0x0004) MISSED OFFSET
	class AKSCharacter*                                CurrentInteractor;                                        // 0x0908(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NeutralPickupTime;                                        // 0x0910(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	struct FText                                       NeutralPickupPrompt;                                      // 0x0918(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       NeutralPickupProgressText;                                // 0x0930(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DisarmTime;                                               // 0x0948(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x094C(0x0004) MISSED OFFSET
	struct FText                                       DisarmPrompt;                                             // 0x0950(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DisarmProgressText;                                       // 0x0968(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DisarmInteractionType;                                    // 0x0980(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxDisarmInteractionDistance;                             // 0x0988(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x098C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x0990(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       FullmapDisplayWidget;                                     // 0x09B8(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       OverlayDisplayWidget;                                     // 0x09E0(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       DisarmCameraName;                                         // 0x0A08(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DisarmCameraTransitionInTime;                             // 0x0A10(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DisarmCameraTransitionOutTime;                            // 0x0A14(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisarmForceCameraShoulder;                               // 0x0A18(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECameraShoulder                                    DisarmCameraShoulder;                                     // 0x0A19(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0A1A(0x0002) MISSED OFFSET
	float                                              DisarmCameraMaxRotation;                                  // 0x0A1C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               DisarmCameraRotationLockout;                              // 0x0A20(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                               // 0x0A21(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                 // 0x0A22(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisarmCameraShake;                                       // 0x0A23(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0A24(0x0004) MISSED OFFSET
	class UClass*                                      DisarmCameraShake;                                        // 0x0A28(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0A30(0x0004) MISSED OFFSET
	int                                                TeamSpottingBitmask;                                      // 0x0A34(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldAutomaticallyBeSpotted;                            // 0x0A38(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0A39(0x0003) MISSED OFFSET
	float                                              MaxSpottingRange;                                         // 0x0A3C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpottingSweepRadius;                                      // 0x0A40(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GroundCheckDistance;                                      // 0x0A44(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0A48(0x0008) MISSED OFFSET
	struct FName                                       SoundEventName;                                           // 0x0A50(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SoundEventLoudness;                                       // 0x0A58(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RepeatTimeToNotifyBots;                                   // 0x0A5C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNeutralBombDrop");
		return ptr;
	}


	bool Respawn();
	static void RequestBombReset(class UObject* WorldContextObject);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnNeutralBombStateChanged(const struct FKSNeutralBombState& NewState);
	void NotifyBots();
	bool IsSpottedByTeam(class AKSTeamState* Team);
	bool IsSpottedByPlayer(class AController* Controller);
	float GetCurrentInteractionProgress();
	static class AKSLootSiteBase* GetBestBombSpawner(class UObject* WorldContextObject);
	void ForceExplode();
	void ExplodeCosmetic();
	void Explode();
};


// Class Killstreak.KSAttackBombDrop
// 0x0000 (0x0A60 - 0x0A60)
class AKSAttackBombDrop : public AKSNeutralBombDrop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAttackBombDrop");
		return ptr;
	}

};


// Class Killstreak.KSObjectiveBase
// 0x0160 (0x0380 - 0x0220)
class AKSObjectiveBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnObjectiveUpdate;                                        // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EObjectiveIconType                                 MapIconType;                                              // 0x0240(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0241(0x0003) MISSED OFFSET
	int                                                DisplayId;                                                // 0x0244(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                ActiveObjectiveIndex;                                     // 0x0248(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsed;                                                    // 0x024C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x024D(0x0003) MISSED OFFSET
	struct FObjectiveState                             ObjectiveState;                                           // 0x0250(0x0014) (CPF_BlueprintVisible, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                ObjectiveId;                                              // 0x0264(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EObjectiveType                                     ObjectiveType;                                            // 0x0268(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	struct FName                                       DefaultState;                                             // 0x026C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       InitialActivateState;                                     // 0x0274(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x0280(0x0018) (CPF_Edit, CPF_DisableEditOnTemplate, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FString                                     ObjectiveDisplayLabel;                                    // 0x0298(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAppendActiveIndexToLabel;                                // 0x02A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x1F];                                      // 0x02A9(0x001F) MISSED OFFSET
	int                                                ObjectiveLootGroup;                                       // 0x02C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     NavigationLocation;                                       // 0x02CC(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0xC];                                       // 0x02D8(0x000C) MISSED OFFSET
	bool                                               UseNavLocationForDistance;                                // 0x02E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x02E5(0x0003) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x02E8(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       FullmapDisplayWidget;                                     // 0x0310(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       OverlayDisplayWidget;                                     // 0x0338(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x0360(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0368(0x0008) MISSED OFFSET
	struct FName                                       SoundEventName;                                           // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SoundEventLoudness;                                       // 0x0378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RepeatTimeToNotifyBots;                                   // 0x037C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSObjectiveBase");
		return ptr;
	}


	void SetState(const struct FName& NewState, int NewOwner);
	void ResetState(bool ClearOwner);
	void OnRep_ObjectiveState();
	void OnRep_ObjectiveId();
	void NotifyBots();
	void HandleNewState();
	struct FName GetPreviousState();
	int GetOwningTeamOrPlayer();
	float GetObjectiveMeterProgressTotal();
	float GetObjectiveMeterProgress();
	int GetObjectiveLootGroup();
	int GetObjectiveId();
	struct FText GetObjectiveDisplayName();
	struct FString GetObjectiveDisplayLabel();
	struct FName GetCurrentState();
	bool CanChangeState(const struct FName& NewState, int NewOwner);
	void CallOnTeamSidesFlipped();
	void AssignObjectiveId(int NewId);
	void ActivateObjective(int NewOwner);
};


// Class Killstreak.KSExtractionComputer
// 0x01B0 (0x0530 - 0x0380)
class AKSExtractionComputer : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0380(0x0018) MISSED OFFSET
	struct FKSObjectiveInfo                            ObjectiveInfo;                                            // 0x0398(0x00B0) (CPF_Net, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	EKSPOIState                                        POIState;                                                 // 0x0448(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0449(0x0007) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0450(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0458(0x0010) MISSED OFFSET
	int                                                FavoredSide;                                              // 0x0468(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToHack;                                               // 0x046C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToDehack;                                             // 0x0470(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentInteractionProgress;                               // 0x0474(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                // 0x0478(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                ComputerUser;                                             // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       HackingInteractionProgressText;                           // 0x0488(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DehackingInteractionProgressText;                         // 0x04A0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       HackingInteractionPromptText;                             // 0x04B8(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DehackingInteractionPromptText;                           // 0x04D0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            InteractionRangeSphereComponent;                          // 0x04E8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RelativeInteractionPoint;                                 // 0x04F0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CameraName;                                               // 0x04FC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraTransitionInTime;                                   // 0x0504(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraTransitionOutTime;                                  // 0x0508(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceCameraShoulder;                                     // 0x050C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECameraShoulder                                    CameraShoulder;                                           // 0x050D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2];                                       // 0x050E(0x0002) MISSED OFFSET
	float                                              CameraMaxRotation;                                        // 0x0510(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CameraRotationLockout;                                    // 0x0514(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                               // 0x0515(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                 // 0x0516(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               FacesInteract;                                            // 0x0517(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCameraShake;                                             // 0x0518(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	class UClass*                                      CameraShake;                                              // 0x0520(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSExtractionComputer");
		return ptr;
	}


	void OnRep_ObjectiveInfo();
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void LocalHoverStateChanged(bool bIsHovered);
	void InteractionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void InteractionComplete();
};


// Class Killstreak.KSAttackExtractionComputer
// 0x0000 (0x0530 - 0x0530)
class AKSAttackExtractionComputer : public AKSExtractionComputer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAttackExtractionComputer");
		return ptr;
	}

};


// Class Killstreak.KSAudioManager
// 0x0118 (0x0140 - 0x0028)
class UKSAudioManager : public UObject
{
public:
	class UKSAudioPlayerStateParameterData*            AudioPlayerStateParameters;                               // 0x0028(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0030(0x0020) MISSED OFFSET
	TMap<struct FString, class UDataTable*>            LoadedAudioDataTables;                                    // 0x0050(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x80];                                      // 0x00A0(0x0080) MISSED OFFSET
	TWeakObjectPtr<class UKSGameInstance>              WeakGameInstance;                                         // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0128(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAudioManager");
		return ptr;
	}


	void HandleTeamCinematicStarted();
	void HandleSkydiveStarted(class AKSCharacter* Diver);
	void HandleSkydiveSkipped(class AKSCharacter* Diver);
	void HandleSkydiveEnded(class AKSCharacter* Diver);
	void HandleRoundHasEnded(int RoundWinner, int MatchWinner);
	void HandlePostSelectionPhaseBeginFadeOut();
	void HandlePhaseChanged(const struct FName& NewPhaseName, const struct FName& PreviousPhaseName);
	void HandleMatchTimerUpdate(float TimeInWholeSeconds);
	void HandleLoadingScreenEnded();
	void HandleLoadingScreenBegan();
	void HandleLeavingMap();
	void HandleLastManStanding(class AKSPlayerState* LastPlayer);
	void HandleKillcamStarted();
	void HandleJobSelectionComponentReady(class UKSJobSelectionComponent* JobSelectionComponent);
	void HandleGameStateEndPlay(class AKSGameState* GameState);
	void HandleGameStateBeginPlay(class AKSGameState* GameState);
	void HandleGameModeReceived();
	void HandleDropshipDoorOpened();
	void HandleControlPointCaptured(class AKSTeamState* CapturingTeam);
	void HandleBombStateChanged(const struct FKSNeutralBombState& BombState);
	void HandleBanPhaseFinished();
};


// Class Killstreak.KSAudioPlayer
// 0x02E0 (0x0500 - 0x0220)
class AKSAudioPlayer : public AInfo
{
public:
	TMap<EGameplayAudioEvent, class UKSAudioPlayerEventActionData*> GameplayEventActionMap;                                   // 0x0220(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MapLevelStartEventActionMap;                              // 0x0270(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MapLevelEndEventActionMap;                                // 0x02C0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> GameModeStartEventActionMap;                              // 0x0310(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> GameModeEndEventActionMap;                                // 0x0360(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> PlayerCharacterStartEventActionMap;                       // 0x03B0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> PlayerCharacterEndEventActionMap;                         // 0x0400(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MusicPackStartEventActionMap;                             // 0x0450(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FString, class UKSAudioPlayerEventActionData*> MusicPackEndEventActionMap;                               // 0x04A0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSAudioPlayerEventActionData*               AudioPlayerBeginPlayEventActionData;                      // 0x04F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAudioPlayerEventActionData*               AudioPlayerEndPlayEventActionData;                        // 0x04F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAudioPlayer");
		return ptr;
	}


	TArray<struct FString> ComposeEventNamePriorityArray(const struct FString& EventName, class UKSAudioPlayerStateParameterData* CurrentStateParameters);
	TArray<struct FString> ComposeBankNamePriorityArray(const struct FString& BankPrefix, class UKSAudioPlayerStateParameterData* CurrentStateParameters);
};


// Class Killstreak.KSAudioPlayerEventActionData
// 0x0070 (0x00A0 - 0x0030)
class UKSAudioPlayerEventActionData : public UDataAsset
{
public:
	TArray<struct FString>                             BanksToLoad;                                              // 0x0030(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             BanksToUnload;                                            // 0x0040(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ContainersToPlay;                                         // 0x0050(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             ContainersToStop;                                         // 0x0060(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             TablesToLoad;                                             // 0x0070(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             TablesToUnload;                                           // 0x0080(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FString>                             EventsToPost;                                             // 0x0090(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAudioPlayerEventActionData");
		return ptr;
	}

};


// Class Killstreak.KSAudioPlayerStateParameterData
// 0x0090 (0x00B8 - 0x0028)
class UKSAudioPlayerStateParameterData : public UObject
{
public:
	struct FString                                     ActiveGameMode;                                           // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     ActiveMapLevel;                                           // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     ActiveMusicPack;                                          // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     ActivePlayerCharacter;                                    // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               IsSpectating;                                             // 0x0068(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FString                                     PreviousGameMode;                                         // 0x0070(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     PreviousMapLevel;                                         // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     PreviousMusicPack;                                        // 0x0090(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FString                                     PreviousPlayerCharacter;                                  // 0x00A0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               PreviousIsSpectating;                                     // 0x00B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAudioPlayerStateParameterData");
		return ptr;
	}


	bool HasActivePlayerCharacter();
	bool HasActiveMusicPack();
	bool HasActiveMapLevel();
	bool HasActiveGameMode();
	struct FString GetPreviousPlayerCharacter();
	struct FString GetPreviousMusicPack();
	struct FString GetPreviousMapLevel();
	bool GetPreviousIsSpectating();
	struct FString GetPreviousGameMode();
	bool GetIsSpectating();
	struct FString GetActivePlayerCharacter();
	struct FString GetActiveMusicPack();
	struct FString GetActiveMapLevel();
	struct FString GetActiveGameMode();
};


// Class Killstreak.KSAutoPickupComponent
// 0x00B0 (0x0160 - 0x00B0)
class UKSAutoPickupComponent : public UActorComponent
{
public:
	float                                              AutoPickupMinPickupTimeSinceCreation;                     // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoPickupDistance;                                       // 0x00B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoPickupQueryInterval;                                  // 0x00B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bActivateAutoPickups;                                     // 0x00BC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	TMap<class UKSItem*, int>                          ItemPriorityMap;                                          // 0x00C0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoPickupClusivityEnabled;                              // 0x0110(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	struct FGameplayTagQuery                           ClusivityQuery;                                           // 0x0118(0x0048) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAutoPickupComponent");
		return ptr;
	}


	void OnOwnerPossessionChanged(class AController* Controller);
	void OnAutoPickupPreferenceChanged(bool bAutoPickupEnabled);
};


// Class Killstreak.KSAvatar
// 0x0030 (0x0260 - 0x0230)
class UKSAvatar : public UKSItem
{
public:
	TSoftObjectPtr<class UTexture2D>                   LargeAvatarIcon;                                          // 0x0230(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UIconInfo*                                   LargeAvatarIconInfo;                                      // 0x0258(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAvatar");
		return ptr;
	}


	TSoftObjectPtr<class UTexture2D> GetSoftLargeAvatarIcon();
	class UIconInfo* GetLargeAvatarInfo();
};


// Class Killstreak.KSAvenger
// 0x0020 (0x00B8 - 0x0098)
class UKSAvenger : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0098(0x0008) MISSED OFFSET
	TArray<struct FPlayerCombatInfo>                   PlayerTrackers;                                           // 0x00A0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxTrackerTimer;                                          // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAvenger");
		return ptr;
	}


	void StoreCombatInfo(const struct FCombatEventInfo& ElimEvent);
	void RemoveTracker(const struct FPlayerCombatInfo& CurrentTrackPlayer);
	bool CheckPlayerTrackers(class AKSPlayerState* Instigator, class AKSPlayerState* Victim);
};


// Class Killstreak.KSAwardsManager
// 0x0000 (0x0210 - 0x0210)
class UKSAwardsManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSAwardsManager");
		return ptr;
	}

};


// Class Killstreak.KSBanner
// 0x0060 (0x0290 - 0x0230)
class UKSBanner : public UKSItem
{
public:
	TSoftObjectPtr<class UTexture2D>                   SmallBannerIcon;                                          // 0x0230(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UIconInfo*                                   SmallBannerIconInfo;                                      // 0x0258(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   LargeBannerIcon;                                          // 0x0260(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UIconInfo*                                   LargeBannerIconInfo;                                      // 0x0288(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBanner");
		return ptr;
	}


	TSoftObjectPtr<class UTexture2D> GetSoftSmallBannerIcon();
	TSoftObjectPtr<class UTexture2D> GetSoftLargeBannerIcon();
	class UIconInfo* GetSmallBannerInfo();
	class UIconInfo* GetLargeBannerInfo();
};


// Class Killstreak.KSBattlePassProgressionManager
// 0x0018 (0x0228 - 0x0210)
class UKSBattlePassProgressionManager : public UKSActivityManagerBase
{
public:
	struct FScriptMulticastDelegate                    OnBattlePassProgressionActivitiesReady;                   // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               BattlePassReady;                                          // 0x0220(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBattlePassProgressionManager");
		return ptr;
	}


	bool ShouldDisplayMiniBattlePass();
	bool ShouldDisplayBattlePass();
	bool IsBattlePassPurchaseItem(class UPUMG_StoreItem* StoreItem);
	bool HasPremiumBattlePass();
	TArray<class UPUMG_StoreItem*> GetTierRewardItems(int StartTier, int EndTier);
	struct FGameplayTag GetSeasonTag();
	bool GetSeasonalChallengeInstances(class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* ActivityInstances);
	TArray<class UPUMG_StoreItem*> GetPurchaseConfirmDisplayItems(class UPUMG_StoreItem* BattlePassPurchaseItem, int Quantity);
	TArray<class UPUMG_StoreItem*> GetPurchasableBattlePassBundles();
	int GetMiniBattlePassXpItemId();
	int GetLockedRogueBucksCount();
	int GetLockedItemsCount(bool IncludeInstantUnlocks, int AdditionalTiers);
	TArray<class UPUMG_StoreItem*> GetLockedItems(bool IncludeInstantUnlock, int AdditionalTiers);
	EKSItemBattlePassSource GetItemBattlePassSource(class UPUMG_StoreItem* StoreItem);
	class UKSActivityInstance* GetHighestCompletionUnlockedSeasonalChallenge(class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	class UKSActivityInstance* GetCurrentSeasonMasteryInstance(class AKSPlayerController* Player, class AKSPlayerState* PlayerState);
	int GetBattlePassXpItemId();
	struct FText GetBattleBassTimeRemainingText();
	TArray<class UPUMG_StoreItem*> GetActiveTierBundles();
};


// Class Killstreak.KSGameRuleComponent
// 0x0000 (0x00B0 - 0x00B0)
class UKSGameRuleComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameRuleComponent");
		return ptr;
	}


	void OnTeamSidesFlipped();
	void OnTeamChanged(class AKSPlayerState* Player, class AKSTeamState* OldTeam, class AKSTeamState* NewTeam);
	void OnLogout(class AController* Controller);
	void NewPlayerStarting(class APlayerController* NewPlayer);
	void NewBotStarting(class AKSAIController* NewBot);
};


// Class Killstreak.KSBehaviorRuleBaseComponent
// 0x0000 (0x00B0 - 0x00B0)
class UKSBehaviorRuleBaseComponent : public UKSGameRuleComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBehaviorRuleBaseComponent");
		return ptr;
	}


	void HandleTeamSidesFlipped();
};


// Class Killstreak.KSBehaviorRuleComponent
// 0x0000 (0x00B0 - 0x00B0)
class UKSBehaviorRuleComponent : public UKSBehaviorRuleBaseComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBehaviorRuleComponent");
		return ptr;
	}


	void ClearBehaviorChange();
	void ApplyBehaviorChange();
};


// Class Killstreak.KSPlayerBehaviorRuleComponent
// 0x0018 (0x00C8 - 0x00B0)
class UKSPlayerBehaviorRuleComponent : public UKSBehaviorRuleBaseComponent
{
public:
	class AController*                                 FilteredPlayer;                                           // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AKSTeamState*                                FilteredTeam;                                             // 0x00B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EPlayerBehaviorChangeReact                         PlayerSetChangeReaction;                                  // 0x00C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerBehaviorRuleComponent");
		return ptr;
	}


	void SetTeamFilter(class AKSTeamState* NewFilteredTeam);
	void SetPlayerFilterByPlayerState(class AKSPlayerState* NewFilteredPlayer);
	void SetPlayerFilter(class AController* NewFilteredPlayer);
	void OnPlayerFilterControllerLogout(bool bWasActive);
	void ClearTeamFilter();
	void ClearPlayerFilter();
	void ClearBehaviorChange(TArray<class AController*> Players);
	void ApplyBehaviorChange(TArray<class AController*> Players);
};


// Class Killstreak.KSBlendableCameraModifier
// 0x0000 (0x0048 - 0x0048)
class UKSBlendableCameraModifier : public UCameraModifier
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlendableCameraModifier");
		return ptr;
	}

};


// Class Killstreak.KSFXCurveComponent
// 0x0080 (0x0130 - 0x00B0)
class UKSFXCurveComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00B0(0x0050) MISSED OFFSET
	class UMaterialInstanceDynamic*                    PostProcessMID;                                           // 0x0100(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          PostProcessMIDParent;                                     // 0x0108(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0110(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UParticleSystem*                             ParticleSystemParent;                                     // 0x0118(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlaying;                                                 // 0x0120(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReversing;                                               // 0x0121(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLooping;                                                 // 0x0122(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0123(0x0001) MISSED OFFSET
	float                                              CurrentTime;                                              // 0x0124(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFXCurveComponent");
		return ptr;
	}


	void UpdateScalarTrack(const struct FName& TrackName, float TrackValue);
	void UpdateColorTrack(const struct FName& TrackName, const struct FLinearColor& TrackValue);
	void Stop();
	void Reverse();
	void ResetTime();
	void Play();
	bool IsPlaying();
	struct FName GetFxID();
	class AKSCharacter* GetCharacterOwner();
};


// Class Killstreak.KSBloodSplatterComponent
// 0x0008 (0x0138 - 0x0130)
class UKSBloodSplatterComponent : public UKSFXCurveComponent
{
public:
	float                                              Damage;                                                   // 0x0130(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBloodSplatterComponent");
		return ptr;
	}


	void AddDamageInstance(float DamageAmount, const struct FVector& DamageOrigin);
};


// Class Killstreak.KSBlueprintableInteractable
// 0x00D0 (0x02F0 - 0x0220)
class AKSBlueprintableInteractable : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0228(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Duration;                                                 // 0x0230(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseCollisionForInteractionDistance;                      // 0x0234(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanInteractFromBehind;                                   // 0x0235(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanInteractWhileDowned;                                  // 0x0236(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldDisplayInteractionProgress;                        // 0x0237(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       InteractionName;                                          // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxNumberOfInteractors;                                   // 0x0240(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                InteractionPriority;                                      // 0x0244(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInteractionAllowed;                                      // 0x0248(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	class UClass*                                      InteractionType;                                          // 0x0250(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 OutlinedComponents;                                       // 0x0258(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0268(0x0010) MISSED OFFSET
	TArray<class UKSInteractionManager*>               ActiveInteractions;                                       // 0x0278(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumActiveInteractions;                                    // 0x0288(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	struct FText                                       ProgressText;                                             // 0x0290(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       PromptText;                                               // 0x02A8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionStarted;                                     // 0x02C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionEnded;                                       // 0x02D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractionComplete;                                    // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlueprintableInteractable");
		return ptr;
	}


	void SetInteractability(bool NewInteractable);
	void InterruptInteraction(class AKSCharacter* InteractingCharacter, bool bForce);
	void InterruptAllInteractions(bool bForce);
	bool InternalCanInteractOnPress(class AKSCharacter* InteractingCharacter);
	bool InternalCanInteractOnHold(class AKSCharacter* InteractingCharacter);
	void BlueprintInteractionStarted(class AKSCharacter* InteractingCharacter, float InDuration);
	struct FVector BlueprintInteractionPoint();
	void BlueprintInteractionEnded(class AKSCharacter* InteractingCharacter);
	void AddOutlinedPrimitiveComponent(class UPrimitiveComponent* InComponent);
};


// Class Killstreak.KSBlueprintableAmmoRefillCrate
// 0x0000 (0x02F0 - 0x02F0)
class AKSBlueprintableAmmoRefillCrate : public AKSBlueprintableInteractable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlueprintableAmmoRefillCrate");
		return ptr;
	}


	void ReloadGrenadeAmmo(class AKSPlayerState* InteractingCharacterState);
};


// Class Killstreak.KSInteractionState
// 0x0008 (0x0030 - 0x0028)
class UKSInteractionState : public UObject
{
public:
	EKSInteractionResult                               Result;                                                   // 0x0028(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractionState");
		return ptr;
	}

};


// Class Killstreak.KSHoldOrTapStart
// 0x0000 (0x0030 - 0x0030)
class UKSHoldOrTapStart : public UKSInteractionState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHoldOrTapStart");
		return ptr;
	}

};


// Class Killstreak.KSBlueprintStart
// 0x0000 (0x0030 - 0x0030)
class UKSBlueprintStart : public UKSHoldOrTapStart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlueprintStart");
		return ptr;
	}

};


// Class Killstreak.KSWaitingForTimer
// 0x0000 (0x0030 - 0x0030)
class UKSWaitingForTimer : public UKSInteractionState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWaitingForTimer");
		return ptr;
	}

};


// Class Killstreak.KSBlueprintWaiting
// 0x0000 (0x0030 - 0x0030)
class UKSBlueprintWaiting : public UKSWaitingForTimer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlueprintWaiting");
		return ptr;
	}

};


// Class Killstreak.KSBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UKSBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBlueprintFunctionLibrary");
		return ptr;
	}


	static bool TryToStartCarry(class UObject* WorldContextObject, const TScriptInterface<class UKSCarriedInterface>& CarriedObject, class AKSCharacter* InHauler);
	static class UTracerParticleSystemComponent* SpawnTracerEmitterWithRotation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, float TravelSpeed, const struct FRotator& Rotation);
	static class UTracerParticleSystemComponent* SpawnTracerEmitter(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, float TravelSpeed);
	static class UTracerStaticMeshComponent* SpawnMeshTracerWithRotation(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed, const struct FRotator& Rotation);
	static class UTracerStaticMeshComponent* SpawnMeshTracer(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed);
	static class UDecalComponent* SpawnImpactDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float Lifespan);
	static class UActorComponent* SpawnComponentFromClass(class UClass* Class, class AActor* Owner);
	static void SortPlayerEntryStatsByPoints(bool ShouldSortDescending, TArray<struct FPlayerEntryStats>* PlayerEntryStatsArray);
	static void SortObjectsByName(bool bReverseSort, TArray<class UObject*>* ObjectsToSort);
	static void SortKSPlayerStatesByMoney(bool ShouldSortDescending, TArray<class AKSPlayerState*>* PlayerStates);
	static void SortKSPlayerDataByMoney(bool ShouldSortDescending, TArray<class UKSPersistentPlayerData*>* PlayerData);
	static void SortJobRoles(TArray<class UKSJobRole*>* InRoles);
	static void ShowSlateNotification(const struct FString& MessageToShow, float DisplayTimeSeconds);
	static bool ShouldPlayCosmeticLocally(class AKSPlayerState* UsingPlayerState, class AKSPlayerState* LocalPlayerState, EMercCosmeticSlot CosmeticSlot);
	static bool ShouldDropshipDoorBeOpen(class UObject* WorldContextObject);
	static void SetupSkeletalMeshLODReductionGroups(class USkeletalMesh* SkeletalMesh, TArray<struct FSkeletalMeshMaterialToReductionGroup> InReductionGroupMap);
	static void SetTracerInitialOffset(class UTracerStaticMeshComponent* TracerMesh, float Offset);
	static bool ScoreboardStatsHasValidInstanceId(const struct FScoreboardStats& Stats);
	static void ResetRenderTargetBuffer();
	static void RemoveRowFromLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName);
	static bool QuickMeshMerge(TArray<class USkeletalMesh*> SourceMeshList, class USkeletalMesh** OutMesh);
	static void ProcessTakePointHitDamage(class AKSCharacter* HitCharacter, const struct FVector& RelativeHitLocation, const struct FVector& RelativeHitNormal, class AActor* DamageCauser, struct FVector* WorldHitLocation, struct FVector* WorldHitNormal, struct FVector* VectorToHitSource, EKSMovementDirection* HitDirection);
	static void PrintStringInShipping(class UObject* WorldContextObject, const struct FString& inString, bool bPrintToScreen, bool bPrintToLog, const struct FLinearColor& TextColor, float Duration);
	static int PostEventKS(class UAkAudioEvent* AkEvent, class AActor* Actor, int CallbackMask, const struct FScriptDelegate& PostEventCallback, bool bStopWhenAttachedToDestroyed, const struct FString& EventName, EOcclusionType OcclusionType, bool UseDistance, bool UseDirection);
	static int PostEvent(class UAkAudioEvent* AkEvent, class UObject* GameObject, bool bStopWhenAttachedToDestroyed, const struct FString& EventName);
	static void PlayWorldCameraShake1P3P(class UObject* WorldContextObject, class UClass* Shake1P, class UClass* Shake3P, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, bool bOrientShakeTowardsEpicenter);
	static void KSConvertRenderTargetToTexture2D(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture2D* Texture);
	static bool ItemHasToggleRelationship(class AKSPlayerShop* PlayerShop, const struct FShopItem& Item);
	static bool IsViewportWorld(class UObject* WorldContextObject);
	static bool IsRecurringDamageTypeClass(class UClass* DamageTypeClass);
	static bool IsRecurringDamageType(class UDamageType* DamageType);
	static bool IsRecurringDamageCategory(EDamageCategory DamageCategory);
	static bool IsPlayerMuted(class AKSPlayerState* KSPlayerState);
	static bool IsLowerPriorityReveal(EKSRevealPriority RevealPriority1, EKSRevealPriority RevealPriority2);
	static bool IsKillCamWorld(class UObject* WorldContextObject);
	static bool IsItemAvailable(TSoftObjectPtr<class UKSItem> Item);
	static bool IsInViewportWorld(class AActor* Actor);
	static bool IsInKillCamWorld(class AActor* Actor);
	static bool IsHigherPriorityReveal(EKSRevealPriority RevealPriority1, EKSRevealPriority RevealPriority2);
	static bool IsExperimentActive(const struct FString& ExpermentName);
	static bool IsChunkInstalling(int ChunkId);
	static bool IsChunkAvailable(int ChunkId);
	static bool IsAssetAvailable(const struct FAssetData& AssetData);
	static bool IsAnyChunkInstalling();
	static bool IsAlphabeticalOrder(const struct FString& StringA, const struct FString& StringB, TEnumAsByte<ESearchCase> SearchCase);
	static void HideOutline(class UPrimitiveComponent* TargetComponent);
	static bool HasAnyEnemyTeamsFor(class UObject* WorldContextObject, class AActor* Actor);
	static bool HasAnyEnemiesFor(class UObject* WorldContextObject, class AActor* Actor);
	static struct FVector GetWorldMinLocation();
	static bool GetTotalRounds(class UObject* WorldContextObject, int* TotalRounds);
	static void GetTeamsWithHighestIntraScore(class UObject* WorldContextObject, TArray<class AKSTeamState*>* TeamsWithHighestIntraScore, int* OutScore);
	static TArray<class AKSCharacter*> GetTeammatesFor(class UObject* WorldContextObject, class AActor* Actor, bool bIncludeSelf);
	static class AKSTeamState* GetTeamFor(class UObject* WorldContextObject, class AActor* Actor);
	static TSoftObjectPtr<class UKSSkinBundle> GetSkinBundleBySkinId(int SkinId);
	static int GetSkeletalMeshSettingsLODNum(class USkeletalMeshLODSettings* SkeletalMeshLODSettings);
	static int GetSkeletalMeshLODNum(class USkeletalMesh* SkeletalMesh);
	static int GetSideForTeam(class UObject* WorldContextObject, int TeamNum);
	static int GetSideFor(class AActor* Actor);
	static class AKSPlayerShop* GetShopForPlayer(class AKSPlayerState* PlayerState);
	static void GetScreenSpaceAccuracyRadius(class APlayerController* PlayerController, float Accuracy, float* ViewPortRadius);
	static bool GetRoundsToWin(class UObject* WorldContextObject, int* RoundsToWin);
	static int GetRevealPriorityAsInt(EKSRevealPriority RevealPriority);
	static struct FRotator GetRandomDecalRotationForNormal(const struct FVector& Normal, float minRotation, float maxRotation);
	static struct FKSOutlineParameters GetOutlineParameters(EPlayerSilhouetteType ColorType, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly, bool bShouldFade, bool bShowOnlyOccludedParts);
	static unsigned char GetOutlineCustomDepth(EPlayerSilhouetteType ColorType, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly);
	static int GetNumSlotsForCosmeticSlot(EMercCosmeticSlot CosmeticSlot);
	static int GetNumEventAssistantsForCombatEvent(struct FCombatEventInfo* CombatEvent);
	static int GetNumberOfEmittersInSystem(class UParticleSystemComponent* SystemComponent);
	static struct FGameplayTag GetNextEquipPoint(const struct FGameplayTag& EquipPoint);
	static struct FKSOutlineParameters GetNewOutlineParameters(const struct FLinearColor& RevealColor, bool bHideWhenOccluded, bool bShouldFill, bool bIsHot, bool bIsFriendly, bool bShouldFade, bool bShowOnlyOccludedParts);
	static TSoftObjectPtr<class UTexture2D> GetMinimapTextureForMap(const struct FString& mapName);
	static class AKSMiniMapAssistant* GetMiniMapAssistant(class UObject* WorldContextObject);
	static struct FVector GetMeshOffsetForSimulatedCharacter(class AKSCharacter* SimulatedCharacter);
	static class APlayerController* GetLocalPlayerController(class UObject* WorldContextObject, int PlayerIndex);
	static class AKSWorldSettings* GetKSWorldSettings(class UObject* WorldContextObject);
	static class AKSGameState_RoundGame* GetKSGameState_RoundGame(class UObject* WorldContextObject);
	static class AKSGameState_NeutralBomb* GetKSGameState_NeutralBomb(class UObject* WorldContextObject);
	static class AKSGameState_Modular* GetKSGameState_Modular(class UObject* WorldContextObject);
	static class AKSGameState_Extraction* GetKSGameState_Extraction(class UObject* WorldContextObject);
	static class AKSGameState_Demolition* GetKSGameState_Demolition(class UObject* WorldContextObject);
	static class AKSGameState* GetKSGameState(class UObject* WorldContextObject);
	static class AKSGameMode_RoundGame* GetKSGameMode_RoundGame(class UObject* WorldContextObject);
	static class AKSGameMode_Modular* GetKSGameMode_Modular(class UObject* WorldContextObject);
	static class AKSGameMode_Extraction* GetKSGameMode_Extraction(class UObject* WorldContextObject);
	static class AKSGameMode* GetKSGameMode(class UObject* WorldContextObject);
	static class UKSKillCam* GetKillCamForPlayer(class UObject* WorldContextObject, int LocalPlayerIndex);
	static int GetKillCamActorGuidFor(class UObject* WorldContextObject, class AActor* Actor);
	static struct FString GetInstanceIdFromScoreboardStats(const struct FScoreboardStats& Stats);
	static struct FGameplayTag GetGameplayTagByStringAndIndex(const struct FString& StartingString, int EndingIndex);
	static struct FGameplayTag GetGameplayTagByNameAndIndex(const struct FName& StartingName, int EndingIndex);
	static class AKSAnnouncer* GetFirstAnnouncer(class UObject* WorldContextObject);
	static class APlayerState* GetEventAssistantAtIndexForCombatEvent(int Index, struct FCombatEventInfo* CombatEvent);
	static int GetEquipPointIndex(const struct FGameplayTag& EquipPoint);
	static struct FString GetEquipPointAsStringWithoutIndex(const struct FGameplayTag& EquipPoint);
	static TArray<class AKSTeamState*> GetEnemyTeamsFor(class UObject* WorldContextObject, class AActor* Actor);
	static TArray<class AKSCharacter*> GetEnemiesFor(class UObject* WorldContextObject, class AActor* Actor);
	static struct FVector GetEndTraceLocation(const struct FAimData& Aim, float Range);
	static bool GetCustomRarityColorName(class UDataTable* QuantityRarityDT, class UPUMG_StoreItem* StoreItem, struct FGameplayTagContainer* RarityTag);
	static void GetCurrentFrameTimestamp(struct FDateTime* Timestamp);
	static EMercCosmeticSlot GetCosmeticSlotForVoicelineType(EKSVoicelineType VoicelineType);
	static float GetAnimMontageSectionLength(class UAnimMontage* TargetMontage, const struct FName& SectionName);
	static void GetAllWeaponComponents(const TScriptInterface<class UKSEquipmentContainerOwner>& Target, TArray<class UKSWeaponComponent*>* OutWeaponComponents);
	static TArray<struct FItemTableElement> GetAllItemTableElements(class UDataTable* InDataTable, TArray<struct FName>* OutRowNames);
	static void GetAllEquipment(const TScriptInterface<class UKSEquipmentContainerOwner>& Target, TArray<class UObject*>* OutEquipment);
	static int FindSkinForPlayer(class AKSPlayerController* PlayerController, int JobId);
	static int FindSkinForLocalPlayer(int JobId);
	static class AKSPlayerState* FindPlayerWithBestScoreOnTeam(class AKSTeamState* Team, bool bIncludeBots, bool bHighestWins);
	static class AKSPlayerState* FindPlayerWithBestScore(TArray<class AKSPlayerState*> PlayerStates, bool bHighestWins);
	static void FadeOut(class UObject* WorldContextObject, float FadeOutDuration, float FadeDelay, float FadeOutSafeTime);
	static void FadeIn(class UObject* WorldContextObject, float FadeInDuration, float FadeDelay);
	static bool ExportCSVData(const struct FString& Filename, TArray<struct FKSCSVRow> CSVRows, bool AppendTime, bool AllowOverwriting, const struct FString& SaveDirectory);
	static class USphereComponent* CreateSphereComponentFor(class UObject* WorldContextObject, class AActor* Owner, float Radius, const struct FTransform& Transform);
	static TArray<EMercCosmeticSlot> CreateRadialMenuCosmeticSlots();
	static TScriptInterface<class UKSRevealable> ConvertActorToRevealableScriptInterface(class AActor* AActorToConvert);
	static void ApplyOutlineParameters(const struct FKSOutlineParameters& OutlineParameters, class UPrimitiveComponent* TargetComponent, bool bEnabled);
	static bool AllowCheats(class APlayerController* PlayerController);
	static void AddStaticMeshToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UStaticMesh* Asset);
	static void AddSkeletalMeshToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class USkeletalMesh* Asset);
	static void AddRowToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, const struct FHardAssetTableRow& Row);
	static void AddParticleSystemToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UParticleSystem* Asset);
	static void AddMaterialInterfaceToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UMaterialInterface* Asset);
	static void AddClassToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UClass* Asset);
	static void AddAudioEventToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UAkAudioEvent* Asset);
	static void AddAnimationAssetToLegacyAssetDataTable(class UDataTable* DataTable, const struct FName& RowName, class UAnimationAsset* Asset);
};


// Class Killstreak.KSCurrency
// 0x0080 (0x02B0 - 0x0230)
class UKSCurrency : public UKSItem
{
public:
	bool                                               IsDLCVoucher;                                             // 0x0230(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	int                                                SortOrder;                                                // 0x0234(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>                   CurrencyDataByQtyTable;                                   // 0x0238(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   FullSplash;                                               // 0x0260(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   CurrencySmallIcon;                                        // 0x0288(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCurrency");
		return ptr;
	}


	TSoftObjectPtr<class UTexture2D> GetSoftFullSplashImage();
	TSoftObjectPtr<class UTexture2D> GetSoftCurrencySmallIcon();
	bool GetCurrencyDataForQuantity(int Quantity, struct FCurrencyImageRow* Data);
};


// Class Killstreak.KSBoost
// 0x0018 (0x02C8 - 0x02B0)
class UKSBoost : public UKSCurrency
{
public:
	EBoostCategory                                     BoostCategory;                                            // 0x02B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EBoostDurationCategory                             BoostDurationCategory;                                    // 0x02B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsActiveBooster;                                          // 0x02B2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x02B3(0x0005) MISSED OFFSET
	TArray<struct FString>                             BonusProgressionKeys;                                     // 0x02B8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBoost");
		return ptr;
	}


	void GetBoostCategoryText(struct FText* BoostCategoryText, struct FText* DurationCategoryText);
};


// Class Killstreak.KSBoosterManager
// 0x0060 (0x0270 - 0x0210)
class UKSBoosterManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0210(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBoosterManager");
		return ptr;
	}

};


// Class Killstreak.KSBorder
// 0x0060 (0x0290 - 0x0230)
class UKSBorder : public UKSItem
{
public:
	TSoftObjectPtr<class UTexture2D>                   SmallBorderIcon;                                          // 0x0230(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UIconInfo*                                   SmallBorderIconInfo;                                      // 0x0258(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   LargeBorderIcon;                                          // 0x0260(0x0028) (CPF_Deprecated, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UIconInfo*                                   LargeBorderIconInfo;                                      // 0x0288(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBorder");
		return ptr;
	}


	TSoftObjectPtr<class UTexture2D> GetSoftSmallBorderIcon();
	TSoftObjectPtr<class UTexture2D> GetSoftLargeBorderIcon();
	class UIconInfo* GetSmallBorderInfo();
	class UIconInfo* GetLargeBorderInfo();
};


// Class Killstreak.KSBotDefinition
// 0x01A8 (0x01D8 - 0x0030)
class UKSBotDefinition : public UDataAsset
{
public:
	struct FString                                     FriendlySearchName;                                       // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_AssetRegistrySearchable, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FBotSpawnTableRow                           Info;                                                     // 0x0040(0x0198) (CPF_Edit, CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBotDefinition");
		return ptr;
	}

};


// Class Killstreak.KSBotDefinitionCollection
// 0x0010 (0x0040 - 0x0030)
class UKSBotDefinitionCollection : public UDataAsset
{
public:
	TArray<class UKSBotDefinition*>                    BotDefinitions;                                           // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBotDefinitionCollection");
		return ptr;
	}

};


// Class Killstreak.KSBotEncounter
// 0x0038 (0x0068 - 0x0030)
class UKSBotEncounter : public UDataAsset
{
public:
	int                                                BotSideNumber;                                            // 0x0030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseTeamInsteadOfSide;                                    // 0x0034(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                BotTeamNumber;                                            // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<class UKSEncounterWave*>                    BotWaves;                                                 // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       nmEncounterName;                                          // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	class AKSTeamState*                                CachedTeamState;                                          // 0x0060(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBotEncounter");
		return ptr;
	}


	unsigned char GetTotalWaveNumber();
	struct FName GetEncounterName();
	unsigned char GetCurrentWaveNumber();
	class UKSEncounterWave* GetCurrentWave();
	TArray<struct FName> ChooseNSpawnTableRows(int nCount);
	int AdvanceWave();
};


// Class Killstreak.KSBotFactory
// 0x0120 (0x0340 - 0x0220)
class AKSBotFactory : public AActor
{
public:
	bool                                               bFinishPrecacheOnBeginPlay;                               // 0x0220(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseTeamInsteadOfSide;                                    // 0x0221(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0222(0x0002) MISSED OFFSET
	int                                                SideNum;                                                  // 0x0224(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TeamNum;                                                  // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECharacterBehaviorState                            InitialBehaviorState;                                     // 0x022C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseInlineSpawnCollection;                                // 0x022D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x022E(0x0002) MISSED OFFSET
	class UKSBotDefinitionCollection*                  SpawnCollectionAsset;                                     // 0x0230(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBotDefinitionCollection*                  SpawnCollectionInline;                                    // 0x0238(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpawnHidden;                                             // 0x0240(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRandomBot;                                               // 0x0241(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWithoutReplacement;                                      // 0x0242(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRandomLoadout;                                           // 0x0243(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPreserveAIControllers;                                   // 0x0244(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               OverrideTeamSizeFromQueue;                                // 0x0245(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0246(0x0002) MISSED OFFSET
	int                                                FillTeamTo;                                               // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseAutoWayPointSets;                                     // 0x024C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x024D(0x0003) MISSED OFFSET
	class AKSWayPointSet*                              WayPointSet;                                              // 0x0250(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldReverseWayPointSetDirection;                        // 0x0258(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0259(0x0007) MISSED OFFSET
	TArray<class APlayerStart*>                        SpawnPoints;                                              // 0x0260(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnBeginPlay;                                         // 0x0270(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnRoundStart;                                        // 0x0274(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropShipLocation*                         AssociatedDropShipLocation;                               // 0x0278(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnRoundSetup;                                        // 0x0280(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnCollectionTimeout;                                 // 0x0284(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnHackTimeout;                                       // 0x0288(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnEscapeTimeout;                                     // 0x028C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnDownloadStart;                                     // 0x0290(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SpawnOnAlarm;                                             // 0x0294(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MinSpawnCount;                                            // 0x0298(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxSpawnCount;                                            // 0x029C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMaintainCountOnBotDeath;                                 // 0x02A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET
	TArray<class AKSAIController*>                     ActiveBots;                                               // 0x02A8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                TeamState;                                                // 0x02B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NextSequentialSpawnStart;                                 // 0x02C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentLoadoutSeed;                                       // 0x02C4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               RelevantObjectiveStates;                                  // 0x02C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               RelevantGameStatesForObjectiveSpawning;                   // 0x02D8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumberOfTimesToSpawnForObjectiveRelevancy;                // 0x02E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET
	class UBoxComponent*                               RelevancyVolume;                                          // 0x02F0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        ContainedPlayers;                                         // 0x02F8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSObjectiveBase*>                    ContainedObjectives;                                      // 0x0308(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x28];                                      // 0x0318(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBotFactory");
		return ptr;
	}


	void UnhideSpawnedBots();
	TArray<class AKSAIController*> Spawn(int Count);
	void ShuffleSpawnPoints();
	void SetWayPointSet(class AKSWayPointSet* InWPS);
	void SetSpawnPoints(TArray<class APlayerStart*> InPlayerStarts);
	void SetSideNum(int InSideNum);
	void SetShouldReverseWayPointSetDirection(bool InShouldReverse);
	void SetBotSpawnCollection(class UKSBotDefinitionCollection* InSpawnCollection);
	void RestartBots();
	void OnSpawnedBotDestroyed(class AActor* DestroyedActor);
	void OnRoundStart(const struct FRoundInitState& RoundInitState);
	void OnRoundSetup(const struct FRoundInitState& RoundInitState);
	void OnRelevancyOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnRelevancyOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPhaseChanged(const struct FName& PreviousPhaseName, const struct FName& NewPhaseName);
	void OnExtractionPhaseTimeout(const struct FName& PhaseName);
	void OnAllPlayersFinishedPrePrep();
	void OnAlarmPeriodStart();
	void HideSpawnedBots();
	int GetTeamSize();
	class UKSBotDefinitionCollection* GetBotSpawnCollection();
};


// Class Killstreak.KSBotJobConfigMap
// 0x0050 (0x0080 - 0x0030)
class UKSBotJobConfigMap : public UDataAsset
{
public:
	TMap<TSoftObjectPtr<class UKSJobItem>, struct FKSBotJobConfig> JobConfigs;                                               // 0x0030(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBotJobConfigMap");
		return ptr;
	}

};


// Class Killstreak.KSBoxDeadZoneFilter
// 0x0010 (0x0048 - 0x0038)
class UKSBoxDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	struct FVector2D                                   InnerDeadZone;                                            // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   OuterDeadZone;                                            // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBoxDeadZoneFilter");
		return ptr;
	}

};


// Class Killstreak.KSBRC_GiveEquipment
// 0x0028 (0x00F0 - 0x00C8)
class UKSBRC_GiveEquipment : public UKSPlayerBehaviorRuleComponent
{
public:
	bool                                               bAddToLoadout;                                            // 0x00C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	TArray<class UKSItem*>                             ItemsToGive;                                              // 0x00D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                        SlotsToRemove;                                            // 0x00E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBRC_GiveEquipment");
		return ptr;
	}

};


// Class Killstreak.KSBTAbilityConditionValidator
// 0x0180 (0x01B0 - 0x0030)
class UKSBTAbilityConditionValidator : public UDataAsset
{
public:
	bool                                               bShouldUsePerceptionFilter;                               // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<class UClass*>                              SensesToUse;                                              // 0x0038(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FKSPerceptionFilter                         PerceptionFilter;                                         // 0x0048(0x0158) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	int                                                MinPerceivedStimuliCount;                                 // 0x01A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckCombatTarget;                                       // 0x01A4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckTargetVisible;                                      // 0x01A5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckTargetHidden;                                       // 0x01A6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCheckDistance;                                           // 0x01A7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinDistanceMeters;                                        // 0x01A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDistanceMeters;                                        // 0x01AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTAbilityConditionValidator");
		return ptr;
	}

};


// Class Killstreak.KSBTAction
// 0x0010 (0x0040 - 0x0030)
class UKSBTAction : public UDataAsset
{
public:
	struct FString                                     ActionName;                                               // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTAction");
		return ptr;
	}

};


// Class Killstreak.KSBTD_AbilityState
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_AbilityState : public UBTDecorator_BlackboardBase
{
public:
	bool                                               bCheckAbilityReady;                                       // 0x0090(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    AbilityReady;                                             // 0x0091(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckActive;                                             // 0x0092(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    AbilityActive;                                            // 0x0093(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_AbilityState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_AnyActorPerceived
// 0x0168 (0x01D0 - 0x0068)
class UKSBTD_AnyActorPerceived : public UBTDecorator
{
public:
	TArray<class UClass*>                              SensesToUse;                                              // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                         // 0x0078(0x0158) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_AnyActorPerceived");
		return ptr;
	}

};


// Class Killstreak.KSBTD_BlackboardPerceived
// 0x0018 (0x00A8 - 0x0090)
class UKSBTD_BlackboardPerceived : public UBTDecorator_BlackboardBase
{
public:
	TArray<class UClass*>                              SensesToUse;                                              // 0x0090(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       PerceptionEvent;                                          // 0x00A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_BlackboardPerceived");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CanActivateAbility
// 0x0028 (0x0090 - 0x0068)
class UKSBTD_CanActivateAbility : public UBTDecorator
{
public:
	TSoftObjectPtr<class UKSPlayerMod>                 Ability;                                                  // 0x0068(0x0028) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CanActivateAbility");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CanActivateUniqueAbility
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_CanActivateUniqueAbility : public UBTDecorator
{
public:
	class UDataTable*                                  AbilityValidatorTable;                                    // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CanActivateUniqueAbility");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CharacterState
// 0x0098 (0x0128 - 0x0090)
class UKSBTD_CharacterState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSCharacterStateFilter                     CharacterStateFilter;                                     // 0x0090(0x0098) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CharacterState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CheckRole
// 0x0018 (0x0080 - 0x0068)
class UKSBTD_CheckRole : public UBTDecorator
{
public:
	TArray<ECharacterRole>                             RequiredRoles;                                            // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               RequireAll;                                               // 0x0078(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CheckRole");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CheckUniqueAbilityType
// 0x0010 (0x0078 - 0x0068)
class UKSBTD_CheckUniqueAbilityType : public UBTDecorator
{
public:
	class UDataTable*                                  AbilityValidatorTable;                                    // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EAbilityExecutionType                              AbilityExecutionType;                                     // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CheckUniqueAbilityType");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareBetweenBlackboards
// 0x00A0 (0x0108 - 0x0068)
class UKSBTD_CompareBetweenBlackboards : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      SourceBlackboardActor;                                    // 0x0068(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SourceKey;                                                // 0x0090(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetBlackboardActor;                                    // 0x00B8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x00E0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareBetweenBlackboards");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareBlackboardToValue
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_CompareBlackboardToValue : public UBTDecorator_BlackboardBase
{
public:
	float                                              TargetValue;                                              // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareBlackboardToValue");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareGrenadeFuseTimeLeft
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_CompareGrenadeFuseTimeLeft : public UBTDecorator
{
public:
	float                                              Time;                                                     // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               ArithmeticOperation;                                      // 0x006C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareGrenadeFuseTimeLeft");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareKeyToObjective
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_CompareKeyToObjective : public UBTDecorator_BlackboardBase
{
public:
	class UKSBTObjective*                              Objective;                                                // 0x0090(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareKeyToObjective");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareMatchPhaseTimeLeft
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_CompareMatchPhaseTimeLeft : public UBTDecorator
{
public:
	float                                              Time;                                                     // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               ArithmeticOperation;                                      // 0x006C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareMatchPhaseTimeLeft");
		return ptr;
	}

};


// Class Killstreak.KSBTD_CompareRoundNumber
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_CompareRoundNumber : public UBTDecorator
{
public:
	int                                                RoundNumber;                                              // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               ArithmeticOperation;                                      // 0x006C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_CompareRoundNumber");
		return ptr;
	}

};


// Class Killstreak.KSBTD_DestroyableHazardState
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_DestroyableHazardState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSDestroyableHazardStateFilter             DestroyableHazardStateFilter;                             // 0x0090(0x0007) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0097(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_DestroyableHazardState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_DestructibleState
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_DestructibleState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSDestructibleStateFilter                  DestructibleStateFilter;                                  // 0x0090(0x0002) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0092(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_DestructibleState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_DistanceFromBlackboard
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_DistanceFromBlackboard : public UBTDecorator_BlackboardBase
{
public:
	TEnumAsByte<EArithmeticKeyOperation>               ArithmeticOperation;                                      // 0x0090(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	float                                              DistanceThreshold;                                        // 0x0094(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_DistanceFromBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTD_EquipmentState
// 0x0090 (0x00F8 - 0x0068)
class UKSBTD_EquipmentState : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x0068(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckIsEquipped;                                         // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    IsEquipped;                                               // 0x0071(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckIsActiveWeapon;                                     // 0x0072(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    IsActiveWeapon;                                           // 0x0073(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckIsReloading;                                        // 0x0074(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    IsReloading;                                              // 0x0075(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckEquipmentType;                                      // 0x0076(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    EquipmentType;                                            // 0x0077(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       ComparedEquipmentTypes;                                   // 0x0078(0x0020) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckEquipmentClass;                                     // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    EquipmentClassComparison;                                 // 0x0099(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x009A(0x0006) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       ComparedEquipmentClass;                                   // 0x00A0(0x0028) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckComponentClass;                                     // 0x00C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    ComponentClassComparison;                                 // 0x00C9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00CA(0x0006) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       ComparedComponentClass;                                   // 0x00D0(0x0028) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_EquipmentState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_GameState
// 0x0010 (0x0078 - 0x0068)
class UKSBTD_GameState : public UBTDecorator
{
public:
	bool                                               bCheckMatchInProgress;                                    // 0x0068(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    MatchInProgress;                                          // 0x0069(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckMatchPhase;                                         // 0x006A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EBasicKeyOperation>                    MatchPhase;                                               // 0x006B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       MatchPhaseName;                                           // 0x006C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_GameState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_HasAmmo
// 0x0018 (0x0080 - 0x0068)
class UKSBTD_HasAmmo : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x0068(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               ClipOperation;                                            // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	float                                              ClipPercentage;                                           // 0x0074(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOrCheck;                                                 // 0x0078(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               InventoryOperation;                                       // 0x0079(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	float                                              InventoryPercentage;                                      // 0x007C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_HasAmmo");
		return ptr;
	}

};


// Class Killstreak.KSBTD_HasBeenCollected
// 0x0000 (0x0090 - 0x0090)
class UKSBTD_HasBeenCollected : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_HasBeenCollected");
		return ptr;
	}

};


// Class Killstreak.KSBTD_HasBeenHitRecently
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_HasBeenHitRecently : public UBTDecorator
{
public:
	float                                              MaxTimeSinceHit;                                          // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_HasBeenHitRecently");
		return ptr;
	}

};


// Class Killstreak.KSBTD_HasSwappedEquipment
// 0x0028 (0x0090 - 0x0068)
class UKSBTD_HasSwappedEquipment : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      CachedWeaponClassKey;                                     // 0x0068(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_HasSwappedEquipment");
		return ptr;
	}

};


// Class Killstreak.KSBTD_InteractableState
// 0x0018 (0x00A8 - 0x0090)
class UKSBTD_InteractableState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSInteractableStateFilter                  InteractableStateFilter;                                  // 0x0090(0x0018) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_InteractableState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsActionAllowed
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_IsActionAllowed : public UBTDecorator
{
public:
	class UKSBTAction*                                 Action;                                                   // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsActionAllowed");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsActorPendingKill
// 0x0000 (0x0090 - 0x0090)
class UKSBTD_IsActorPendingKill : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsActorPendingKill");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsApproachingDropLocation
// 0x0050 (0x00B8 - 0x0068)
class UKSBTD_IsApproachingDropLocation : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      DropLocationKey;                                          // 0x0068(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DropLocationVectorKey;                                    // 0x0090(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsApproachingDropLocation");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsApproachingFall
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_IsApproachingFall : public UBTDecorator
{
public:
	float                                              LookAheadDistance;                                        // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FallDistance;                                             // 0x006C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsApproachingFall");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsBlackboardSet
// 0x0000 (0x0090 - 0x0090)
class UKSBTD_IsBlackboardSet : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsBlackboardSet");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsBlackboardVisible
// 0x0000 (0x0090 - 0x0090)
class UKSBTD_IsBlackboardVisible : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsBlackboardVisible");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsFreeFalling
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_IsFreeFalling : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsFreeFalling");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsGameMode
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_IsGameMode : public UBTDecorator
{
public:
	class UClass*                                      GameModeClass;                                            // 0x0068(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsGameMode");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsOnNavMesh
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_IsOnNavMesh : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsOnNavMesh");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsRidingZipline
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_IsRidingZipline : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsRidingZipline");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsSprinting
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_IsSprinting : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsSprinting");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsSwimming
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_IsSwimming : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsSwimming");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsWeaponFiring
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_IsWeaponFiring : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x0068(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsWeaponFiring");
		return ptr;
	}

};


// Class Killstreak.KSBTD_IsWeaponReady
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_IsWeaponReady : public UBTDecorator
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x0068(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_IsWeaponReady");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ItemDropState
// 0x0010 (0x00A0 - 0x0090)
class UKSBTD_ItemDropState : public UBTDecorator_BlackboardBase
{
public:
	struct FKSItemDropStateFilter                      ItemDropStateFilter;                                      // 0x0090(0x0010) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ItemDropState");
		return ptr;
	}

};


// Class Killstreak.KSBTD_NearbyEnemyCount
// 0x0020 (0x0088 - 0x0068)
class UKSBTD_NearbyEnemyCount : public UBTDecorator
{
public:
	TArray<class UClass*>                              SensesToUse;                                              // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EArithmeticKeyOperation>               ArithmeticOperation;                                      // 0x0078(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                EnemyCount;                                               // 0x007C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceThreshold;                                        // 0x0080(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckLOS;                                                // 0x0084(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0085(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_NearbyEnemyCount");
		return ptr;
	}

};


// Class Killstreak.KSBTD_RandomCooldown
// 0x0008 (0x0070 - 0x0068)
class UKSBTD_RandomCooldown : public UBTDecorator
{
public:
	float                                              MinCoolDownTime;                                          // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxCoolDownTime;                                          // 0x006C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_RandomCooldown");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ShouldCrouchAtPoint
// 0x0028 (0x0090 - 0x0068)
class UKSBTD_ShouldCrouchAtPoint : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                      PointKey;                                                 // 0x0068(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ShouldCrouchAtPoint");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ShouldDodgeRoll
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_ShouldDodgeRoll : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ShouldDodgeRoll");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ShouldStrafe
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_ShouldStrafe : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ShouldStrafe");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ShouldThrowGrenade
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_ShouldThrowGrenade : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ShouldThrowGrenade");
		return ptr;
	}

};


// Class Killstreak.KSBTD_ShouldThrowMelee
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_ShouldThrowMelee : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_ShouldThrowMelee");
		return ptr;
	}

};


// Class Killstreak.KSBTD_TimerComplete
// 0x0000 (0x0090 - 0x0090)
class UKSBTD_TimerComplete : public UBTDecorator_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_TimerComplete");
		return ptr;
	}

};


// Class Killstreak.KSBTD_WantsToVaultFromSwimming
// 0x0000 (0x0068 - 0x0068)
class UKSBTD_WantsToVaultFromSwimming : public UBTDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_WantsToVaultFromSwimming");
		return ptr;
	}

};


// Class Killstreak.KSBTD_WeightedPerceptionCheck
// 0x0018 (0x0080 - 0x0068)
class UKSBTD_WeightedPerceptionCheck : public UBTDecorator
{
public:
	TArray<struct FKSWeightedPerceptionEntry>          WeightedEntries;                                          // 0x0068(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CriticalWeightDifference;                                 // 0x0078(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_WeightedPerceptionCheck");
		return ptr;
	}

};


// Class Killstreak.KSBTD_WillActiveGrenadeHitTarget
// 0x0008 (0x0098 - 0x0090)
class UKSBTD_WillActiveGrenadeHitTarget : public UBTDecorator_BlackboardBase
{
public:
	float                                              OverrideMinRadius;                                        // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTD_WillActiveGrenadeHitTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTDifficulty
// 0x0010 (0x0040 - 0x0030)
class UKSBTDifficulty : public UDataAsset
{
public:
	struct FString                                     DifficultyName;                                           // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTDifficulty");
		return ptr;
	}

};


// Class Killstreak.KSBTObjective
// 0x0040 (0x0070 - 0x0030)
class UKSBTObjective : public UDataAsset
{
public:
	struct FString                                     ObjectiveName;                                            // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     ObjectiveTargetKeyName;                                   // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UKSBTAction*>                         RequiredActions;                                          // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         RequiredAbilities;                                        // 0x0060(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTObjective");
		return ptr;
	}

};


// Class Killstreak.KSBTObjective_DestroyHazard
// 0x0000 (0x0070 - 0x0070)
class UKSBTObjective_DestroyHazard : public UKSBTObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTObjective_DestroyHazard");
		return ptr;
	}

};


// Class Killstreak.KSBTObjective_Patrol
// 0x0000 (0x0070 - 0x0070)
class UKSBTObjective_Patrol : public UKSBTObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTObjective_Patrol");
		return ptr;
	}

};


// Class Killstreak.KSBTObjective_PickUpItem
// 0x0000 (0x0070 - 0x0070)
class UKSBTObjective_PickUpItem : public UKSBTObjective
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTObjective_PickUpItem");
		return ptr;
	}

};


// Class Killstreak.KSBTTargetSelector
// 0x0170 (0x01A0 - 0x0030)
class UKSBTTargetSelector : public UDataAsset
{
public:
	TArray<class UClass*>                              SensesToUse;                                              // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FKSPerceptionFilter                         PerceptionFilter;                                         // 0x0040(0x0158) (CPF_Edit, CPF_NativeAccessSpecifierPublic)
	bool                                               SelectCombatTargetOfResult;                               // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SelectClosestTarget;                                      // 0x0199(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SelectFurthestTarget;                                     // 0x019A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SelectRandomTarget;                                       // 0x019B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTargetSelector");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ActivateAbility
// 0x0028 (0x0098 - 0x0070)
class UKSBTTask_ActivateAbility : public UBTTaskNode
{
public:
	TSoftObjectPtr<class UKSPlayerMod>                 ActivatedAbility;                                         // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ActivateAbility");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ActivateUniqueAbility
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_ActivateUniqueAbility : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ActivateUniqueAbility");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_LookAt
// 0x0020 (0x00C0 - 0x00A0)
class UKSBTTask_LookAt : public UBTTask_RotateToFaceBBEntry
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A0(0x0004) MISSED OFFSET
	float                                              LookRotationRate;                                         // 0x00A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    HorizonAngle;                                             // 0x00A8(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CorridorSmoothingCount;                                   // 0x00B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FirstCorridorIndex;                                       // 0x00B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_LookAt");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_AimAt
// 0x0018 (0x00D8 - 0x00C0)
class UKSBTTask_AimAt : public UKSBTTask_LookAt
{
public:
	float                                              AimRadius;                                                // 0x00C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AimOffset;                                                // 0x00C4(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimAheadSeconds;                                          // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_AimAt");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_BuyItemFromShop
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_BuyItemFromShop : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_BuyItemFromShop");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ClearFocus
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_ClearFocus : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ClearFocus");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ClearNavigationInteractTarget
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_ClearNavigationInteractTarget : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ClearNavigationInteractTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ClearReviverForTarget
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_ClearReviverForTarget : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ClearReviverForTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_ClearValue
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_ClearValue : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_ClearValue");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_CopyActorLocation
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_CopyActorLocation : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      ActorKey;                                                 // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      LocationKey;                                              // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_CopyActorLocation");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_CopyObjectFacingVector
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_CopyObjectFacingVector : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CopyTarget;                                               // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FacingVector;                                             // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_CopyObjectFacingVector");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_CopyReviverToBlackboard
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_CopyReviverToBlackboard : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_CopyReviverToBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_FindGrenadeTarget
// 0x00A8 (0x0118 - 0x0070)
class UKSBTTask_FindGrenadeTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      WeaponOverrideKey;                                        // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      OutTargetLocationKey;                                     // 0x00C0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      OutIntendedTargetLocationKey;                             // 0x00E8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDrawDebug;                                               // 0x0110(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_FindGrenadeTarget");
		return ptr;
	}


	bool FindAimPoints(class AKSCharacter* Instigator, class AActor* Target, const struct FVector& StartPoint, TArray<struct FVector>* OutEndPoints);
};


// Class Killstreak.KSBTTask_FindGrenadeTarget_SimpleCover
// 0x0010 (0x0128 - 0x0118)
class UKSBTTask_FindGrenadeTarget_SimpleCover : public UKSBTTask_FindGrenadeTarget
{
public:
	float                                              FloorHeightFudgeFactor;                                   // 0x0118(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FullCoverOffsetDistance;                                  // 0x011C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MediumCoverHeightOffset;                                  // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MediumCoverHeightOffsetCrouched;                          // 0x0124(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_FindGrenadeTarget_SimpleCover");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_GetNavigationInteractTarget
// 0x0028 (0x0098 - 0x0070)
class UKSBTTask_GetNavigationInteractTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      InteractTarget;                                           // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_GetNavigationInteractTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_GetRotationFromPoint
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_GetRotationFromPoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      MapPointActorKey;                                         // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      MapPointRotationKey;                                      // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_GetRotationFromPoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_HandleChangedCombatTarget
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_HandleChangedCombatTarget : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_HandleChangedCombatTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_InteractWith
// 0x0008 (0x00A0 - 0x0098)
class UKSBTTask_InteractWith : public UBTTask_BlackboardBase
{
public:
	bool                                               ShouldHold;                                               // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_InteractWith");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_InterruptInteraction
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_InterruptInteraction : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_InterruptInteraction");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_LeaveDefensePoint
// 0x0028 (0x0098 - 0x0070)
class UKSBTTask_LeaveDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DefensePoint;                                             // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_LeaveDefensePoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_LookInDirection
// 0x0030 (0x00A0 - 0x0070)
class UKSBTTask_LookInDirection : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DirectionKey;                                             // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              LookRotationRate;                                         // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_LookInDirection");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_MakeNoiseEvent
// 0x0010 (0x0080 - 0x0070)
class UKSBTTask_MakeNoiseEvent : public UBTTaskNode
{
public:
	float                                              Loudness;                                                 // 0x0070(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       EventTag;                                                 // 0x0074(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_MakeNoiseEvent");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_MarkAsSeen
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_MarkAsSeen : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_MarkAsSeen");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_MoveToBlackboard
// 0x0040 (0x00F0 - 0x00B0)
class UKSBTTask_MoveToBlackboard : public UBTTask_MoveTo
{
public:
	float                                              SpeedMultiplier;                                          // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSprint;                                                  // 0x00B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	class UKSBTAction*                                 MoveAction;                                               // 0x00B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBTAction*                                 SprintAction;                                             // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      AcceptableRadiusOverrideKey;                              // 0x00C8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_MoveToBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_MoveToward
// 0x0018 (0x00D0 - 0x00B8)
class UKSBTTask_MoveToward : public UBTTask_MoveDirectlyToward
{
public:
	float                                              SpeedMultiplier;                                          // 0x00B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSprint;                                                  // 0x00BC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	class UKSBTAction*                                 MoveAction;                                               // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBTAction*                                 SprintAction;                                             // 0x00C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_MoveToward");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_PerformPawnAction
// 0x0000 (0x0078 - 0x0078)
class UKSBTTask_PerformPawnAction : public UBTTask_PushPawnAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_PerformPawnAction");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_PerformRandomDodgeRoll
// 0x0030 (0x00A0 - 0x0070)
class UKSBTTask_PerformRandomDodgeRoll : public UBTTask_PawnActionBase
{
public:
	TArray<float>                                      PreferredAngles;                                          // 0x0070(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      SecondaryAngles;                                          // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinDodgeRollMovementPercent;                              // 0x0090(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DodgeRollCheckDistance;                                   // 0x0094(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumHeightChangePerCheckDistance;                      // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_PerformRandomDodgeRoll");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_PlayVO
// 0x0010 (0x0080 - 0x0070)
class UKSBTTask_PlayVO : public UBTTaskNode
{
public:
	struct FGameplayTag                                VOEvent;                                                  // 0x0070(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ChanceToPlay;                                             // 0x0078(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_PlayVO");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_RandomizeWayPointDefensePoint
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_RandomizeWayPointDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      WayPoint;                                                 // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DefensePoint;                                             // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_RandomizeWayPointDefensePoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_RunBehaviorForTarget
// 0x00F0 (0x0168 - 0x0078)
class UKSBTTask_RunBehaviorForTarget : public UBTTask_RunBehavior
{
public:
	TArray<struct FBlackboardKeySelector>              SourceKeyVector;                                          // 0x0078(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FBlackboardKeySelector>              TargetKeyVector;                                          // 0x0088(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      SourceFloatVector;                                        // 0x0098(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FBlackboardKeySelector>              TargetFloatKeyVector;                                     // 0x00A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<bool>                                       TempBools;                                                // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              TempClasses;                                              // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<unsigned char>                              TempEnums;                                                // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<float>                                      TempFloats;                                               // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<int>                                        TempInts;                                                 // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FName>                               TempNames;                                                // 0x0108(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<unsigned char>                              TempNativeEnums;                                          // 0x0118(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UObject*>                             TempObjects;                                              // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FRotator>                            TempRotators;                                             // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FString>                             TempStrings;                                              // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             TempVectors;                                              // 0x0158(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_RunBehaviorForTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectBlackboardTarget
// 0x0198 (0x0208 - 0x0070)
class UKSBTTask_SelectBlackboardTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      BlackboardKey;                                            // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SensesToUse;                                              // 0x0098(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                         // 0x00A8(0x0158) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               SelectClosestTarget;                                      // 0x0200(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               SelectFurthestTarget;                                     // 0x0201(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               SelectRandomTarget;                                       // 0x0202(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0203(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectBlackboardTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectDefensePoint
// 0x0028 (0x0098 - 0x0070)
class UKSBTTask_SelectDefensePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      DefensePointActorKey;                                     // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectDefensePoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectDropLocation
// 0x0080 (0x00F0 - 0x0070)
class UKSBTTask_SelectDropLocation : public UBTTaskNode
{
public:
	bool                                               InitializeDropLocation;                                   // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               InitializeWayPointSet;                                    // 0x0071(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	struct FBlackboardKeySelector                      DropLocationKey;                                          // 0x0078(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DropLocationVectorKey;                                    // 0x00A0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      FlightLocationVectorKey;                                  // 0x00C8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectDropLocation");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectEvadePoint
// 0x0198 (0x0208 - 0x0070)
class UKSBTTask_SelectEvadePoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      EvadePointKey;                                            // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class UClass*>                              SensesToUse;                                              // 0x0098(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSPerceptionFilter                         PerceptionFilter;                                         // 0x00A8(0x0158) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              Distance;                                                 // 0x0200(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0204(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectEvadePoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectIngressPoint
// 0x0030 (0x00A0 - 0x0070)
class UKSBTTask_SelectIngressPoint : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      IngressPointActorKey;                                     // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldLeave;                                             // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectIngressPoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectObjective
// 0x0078 (0x00E8 - 0x0070)
class UKSBTTask_SelectObjective : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      ObjectiveTargetKey;                                       // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      ObjectiveTypeKey;                                         // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSBTObjective*>                      BlackboardKeyObjectives;                                  // 0x00C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	class UKSBTObjective*                              CurrentHighestPriorityObjective;                          // 0x00D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AActor*                                      CurrentHighestPriorityActor;                              // 0x00E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectObjective");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectTargetOfTarget
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_SelectTargetOfTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CopyTarget;                                               // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      KeyToCopy;                                                // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectTargetOfTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectVaultTargetLocation
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_SelectVaultTargetLocation : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectVaultTargetLocation");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SelectWayPoint
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_SelectWayPoint : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SelectWayPoint");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetBehaviorState
// 0x0008 (0x0078 - 0x0070)
class UKSBTTask_SetBehaviorState : public UBTTaskNode
{
public:
	ECharacterBehaviorState                            BehaviorState;                                            // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetBehaviorState");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetBetweenBlackboards
// 0x00A0 (0x0110 - 0x0070)
class UKSBTTask_SetBetweenBlackboards : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      SourceBlackboardActor;                                    // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      SourceKey;                                                // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetBlackboardActor;                                    // 0x00C0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TargetKey;                                                // 0x00E8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetBetweenBlackboards");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetBoolOnBlackboard
// 0x0008 (0x00A0 - 0x0098)
class UKSBTTask_SetBoolOnBlackboard : public UBTTask_BlackboardBase
{
public:
	bool                                               BoolValue;                                                // 0x0098(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetBoolOnBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetFloatOnBlackboard
// 0x0008 (0x00A0 - 0x0098)
class UKSBTTask_SetFloatOnBlackboard : public UBTTask_BlackboardBase
{
public:
	float                                              FloatValue;                                               // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetFloatOnBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetObjectiveOnBlackboard
// 0x0008 (0x00A0 - 0x0098)
class UKSBTTask_SetObjectiveOnBlackboard : public UBTTask_BlackboardBase
{
public:
	class UKSBTObjective*                              Objective;                                                // 0x0098(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetObjectiveOnBlackboard");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetReviveTarget
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_SetReviveTarget : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetReviveTarget");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetTimer
// 0x0008 (0x00A0 - 0x0098)
class UKSBTTask_SetTimer : public UBTTask_BlackboardBase
{
public:
	float                                              Duration;                                                 // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RandomDeviation;                                          // 0x009C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetTimer");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetWaypointDefenseTimer
// 0x0050 (0x00C0 - 0x0070)
class UKSBTTask_SetWaypointDefenseTimer : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      WayPoint;                                                 // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      DefenseTimer;                                             // 0x0098(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetWaypointDefenseTimer");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SetWeaponRanges
// 0x0060 (0x00D0 - 0x0070)
class UKSBTTask_SetWeaponRanges : public UBTTaskNode
{
public:
	class UDataTable*                                  WeaponRangeConfigTable;                                   // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPoint;                                               // 0x0078(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      IdealAttackRangeKey;                                      // 0x0080(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      StartAttackRangeKey;                                      // 0x00A8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SetWeaponRanges");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_SkydiveToward
// 0x0030 (0x0100 - 0x00D0)
class UKSBTTask_SkydiveToward : public UKSBTTask_MoveToward
{
public:
	struct FBlackboardKeySelector                      TargetSkydiveLocation;                                    // 0x00D0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              BlendStartDistance;                                       // 0x00F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BlendEndDistance;                                         // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_SkydiveToward");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_StopMovement
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_StopMovement : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_StopMovement");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_Strafe
// 0x0018 (0x0108 - 0x00F0)
class UKSBTTask_Strafe : public UKSBTTask_MoveToBlackboard
{
public:
	float                                              DirectionAngleMax;                                        // 0x00F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DirectionAngleMin;                                        // 0x00F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInvertAngle;                                             // 0x00F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              MinDistance;                                              // 0x00FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxDistance;                                              // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_Strafe");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_TriggerBleedout
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_TriggerBleedout : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_TriggerBleedout");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_TryToVault
// 0x0000 (0x0098 - 0x0098)
class UKSBTTask_TryToVault : public UBTTask_BlackboardBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_TryToVault");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_UpdateCachedWeapon
// 0x0028 (0x0098 - 0x0070)
class UKSBTTask_UpdateCachedWeapon : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                      CachedWeaponClassKey;                                     // 0x0070(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_UpdateCachedWeapon");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_WaitForADS
// 0x0000 (0x0070 - 0x0070)
class UKSBTTask_WaitForADS : public UBTTaskNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_WaitForADS");
		return ptr;
	}

};


// Class Killstreak.KSBTTask_WeaponDistanceChecks
// 0x00F8 (0x0168 - 0x0070)
class UKSBTTask_WeaponDistanceChecks : public UBTTaskNode
{
public:
	float                                              IntervalCheckRangeMeters;                                 // 0x0070(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FBlackboardKeySelector                      CombatTargetKey;                                          // 0x0078(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      IdealAttackRangeKey;                                      // 0x00A0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      StartAttackRangeKey;                                      // 0x00C8(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      InIdealRangeKey;                                          // 0x00F0(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      InAttackRangeKey;                                         // 0x0118(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                      TooCloseKey;                                              // 0x0140(0x0028) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTask_WeaponDistanceChecks");
		return ptr;
	}

};


// Class Killstreak.KSBTTaskNode_SetCrowdFollowing
// 0x0008 (0x0078 - 0x0070)
class UKSBTTaskNode_SetCrowdFollowing : public UBTTaskNode
{
public:
	bool                                               bEnable;                                                  // 0x0070(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBTTaskNode_SetCrowdFollowing");
		return ptr;
	}

};


// Class Killstreak.KSBuild
// 0x0128 (0x0388 - 0x0260)
class AKSBuild : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0260(0x0030) MISSED OFFSET
	float                                              PointDamageMultiplier;                                    // 0x0290(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RadialDamageMultiplier;                                   // 0x0294(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                // 0x0298(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Health;                                                   // 0x029C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SelfDestructDelay;                                        // 0x02A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KillDestructionDelay;                                     // 0x02A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x02A8(0x0010) MISSED OFFSET
	class UBoxComponent*                               Box;                                                      // 0x02B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                            // 0x02C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                               // 0x02C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x02D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                          // 0x02E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                   // 0x02F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBuildComponentDestroyedDel;                             // 0x02F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0308(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Interactors;                                              // 0x0310(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnBuildReclaim;                                           // 0x0320(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanReclaim;                                              // 0x0330(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	struct FVector                                     RelativeInteractionPoint;                                 // 0x0334(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReclaimTime;                                              // 0x0340(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRestoreWeaponOnReclaim;                                  // 0x0344(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0345(0x0003) MISSED OFFSET
	class UKSWeaponAsset_Build*                        WeaponToRestore;                                          // 0x0348(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       ReclaimItemName;                                          // 0x0350(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      ReclaimInteractionType;                                   // 0x0368(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x0370(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0378(0x0008) MISSED OFFSET
	int                                                OriginalOwnerId;                                          // 0x0380(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0384(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBuild");
		return ptr;
	}


	void YieldToRealTimerExpired();
	void SelfDestructAfterDelay();
	void SelfDestruct();
	void OnSelfDestructDelayStart();
	void OnSelfDestruct();
	void OnRep_Health();
	void OnRadialDamageTaken(class UDamageType* DamageType);
	void OnPointDamageTaken(class UDamageType* DamageType, class UPrimitiveComponent* PrimitiveComponent, const struct FName& HitBone);
	void OnKilled();
	void OnHealthChanged();
	void OnBuildComponentDestroyed(class UPrimitiveComponent* PrimitiveComponent);
	void KillDestructionTimerComplete();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetRealActorTakeoverDelay();
	class AKSPlayerState* GetPlayerStateOwner();
	void GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes);
	class AKSCharacter* GetCharacterOwner();
	class UKSWeaponAsset_Build* GetBuildWeaponAsset();
	void DestroyBuildComponent(class UPrimitiveComponent* PrimitiveComponent);
	float ComponentTakeDamage(class UPrimitiveComponent* PrimitiveComponent, float DamageAmount);
	void BroadcastSelfDestructStart();
	void BroadcastSelfDestruct();
	void BroadcastDestroyBuildComponent(class UPrimitiveComponent* PrimitiveComponent);
};


// Class Killstreak.KSBuild_APS
// 0x0038 (0x03C0 - 0x0388)
class AKSBuild_APS : public AKSBuild
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	class USphereComponent*                            DetectionSphere;                                          // 0x0390(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DetectionSphereRadius;                                    // 0x0398(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxProjectilesDestroyed;                                  // 0x039C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToActivate;                                           // 0x03A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03A4(0x0004) MISSED OFFSET
	TArray<class AKSProjectile*>                       MarkedProjectiles;                                        // 0x03A8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03B8(0x0004) MISSED OFFSET
	bool                                               bIsActive;                                                // 0x03BC(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03BD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBuild_APS");
		return ptr;
	}


	void OnRep_Active();
	void OnProjectileIntercepted(const struct FVector& InterceptedProjectileLocation);
	void OnMarkedProjectileDestroyed(class AActor* InActor);
	void OnDeactivated();
	void OnActorOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActivated();
	void BroadcastProjectileIntercept(class AKSProjectile* DestroyedProjectile, const struct FVector& BackupLocation);
};


// Class Killstreak.KSBuild_Shop
// 0x0010 (0x0398 - 0x0388)
class AKSBuild_Shop : public AKSBuild
{
public:
	TArray<class UKSInteractionManager*>               ShopperManagers;                                          // 0x0388(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBuild_Shop");
		return ptr;
	}


	void HandleShopClosed(class AKSPlayerShop* PlayerShop);
	void HandleShopAvailabilityChanged(class AKSPlayerShop* PlayerShop);
};


// Class Killstreak.KSBuildPreview
// 0x0048 (0x0268 - 0x0220)
class AKSBuildPreview : public AActor
{
public:
	class UMaterialInterface*                          ValidBuildMaterial;                                       // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          InvalidBuildMaterial;                                     // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBoxComponent*                               Box;                                                      // 0x0230(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkinnableMergedMeshComponent*               MeshComponent;                                            // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                               // 0x0240(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x0248(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               FullKeywordList;                                          // 0x0258(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSBuildPreview");
		return ptr;
	}


	class AKSPlayerState* GetPlayerStateOwner();
	void GetMeshesToIgnore(TArray<class UMeshComponent*>* MeshesToIgnore);
	class AKSCharacter* GetCharacterOwner();
};


// Class Killstreak.KSCarriedInterface
// 0x0000 (0x0028 - 0x0028)
class UKSCarriedInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCarriedInterface");
		return ptr;
	}


	void StopActiveCarry();
	bool IsBeingCarriedRightNow();
	class AKSCharacter* GetHauler();
	class AActor* GetAsActor();
	bool CanBeCarriedByRightNow(class AKSCharacter* InHauler);
	bool CanBeCarriedBy(class AKSCharacter* InHauler);
};


// Class Killstreak.KSCash
// 0x0028 (0x0258 - 0x0230)
class UKSCash : public UKSItem
{
public:
	int                                                Amount;                                                   // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	struct FText                                       CashReasonText;                                           // 0x0238(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_DuplicateTransient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShareWithTeam;                                           // 0x0250(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0251(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCash");
		return ptr;
	}

};


// Class Killstreak.KSCashDrop
// 0x0008 (0x0388 - 0x0380)
class AKSCashDrop : public AKSItemDrop
{
public:
	int                                                Amount;                                                   // 0x0380(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0384(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCashDrop");
		return ptr;
	}

};


// Class Killstreak.KSCashExtractionPoint
// 0x0140 (0x04C0 - 0x0380)
class AKSCashExtractionPoint : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	int                                                ContainedCash;                                            // 0x0388(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	struct FPGame_ReplicatedTimer                      ReplicatedStateTimer;                                     // 0x0390(0x0038) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x03C8(0x0010) MISSED OFFSET
	float                                              UpdateReplicatedTimerPeriod;                              // 0x03D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PreparingStateDuration;                                   // 0x03DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DepositingStateDuration;                                  // 0x03E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ExtractedStateDuration;                                   // 0x03E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CooldownStateDuration;                                    // 0x03E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	struct FText                                       CallInInteractionPrompt;                                  // 0x03F0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       CallInInteractionProgressText;                            // 0x0408(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DepositInteractionPrompt;                                 // 0x0420(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DepositInteractionProgressText;                           // 0x0438(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       CancelInteractionPrompt;                                  // 0x0450(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       CancelInteractionProgressText;                            // 0x0468(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            InteractionRangeSphereComponent;                          // 0x0480(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CallInInteractDuration;                                   // 0x0488(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DepositInteractDuration;                                  // 0x048C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CancelInteractDuration;                                   // 0x0490(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	TArray<class AKSCharacter*>                        Interactors;                                              // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x04A8(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x10];                                      // 0x04B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCashExtractionPoint");
		return ptr;
	}


	void StateTimerExpired();
	bool ShouldShowLabel();
	void OnRep_ContainedCash();
	void HideCashPoint();
	void GetRemainingTimeInState(float* RemainingTime, float* TotalDuration);
	void ActivateCashPoint();
};


// Class Killstreak.KSCharacterBase
// 0x0830 (0x0CF0 - 0x04C0)
class AKSCharacterBase : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x04C0(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTakeArmorDamage;                                        // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x18];                                      // 0x04F0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthChangedDel;                                       // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0518(0x0018) MISSED OFFSET
	float                                              HealthRegenerationPerSecond;                              // 0x0530(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealthRegenerationPeriod;                                 // 0x0534(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealthRegenerationDelay;                                  // 0x0538(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x053C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerActive;                            // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerTick;                              // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHealthRegenDelayTimerComplete;                          // 0x0560(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           HealthRegenDelayTimer;                                    // 0x0570(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	float                                              CurrentOverheal;                                          // 0x0580(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OverhealDecayPerSecond;                                   // 0x0584(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OverhealDecayPeriod;                                      // 0x0588(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x24];                                      // 0x058C(0x0024) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOverhealChanged;                                        // 0x05B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              QueuedMovementForgivenessPeriod;                          // 0x05C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              QueuedMovementForgivenessEndTime;                         // 0x05C4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSQueuedMovement                                  CurrentQueuedMovement;                                    // 0x05C8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x05C9(0x0003) MISSED OFFSET
	struct FName                                       FreeFallCollisionProfileName;                             // 0x05CC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x10];                                      // 0x05D4(0x0010) MISSED OFFSET
	TWeakObjectPtr<class UCameraShake>                 CurrentFreeFallCameraShake;                               // 0x05E4(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0xC];                                       // 0x05EC(0x000C) MISSED OFFSET
	class UClass*                                      FreeFallCameraShake;                                      // 0x05F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEndFreeFallDel;                                         // 0x0600(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bRealWantsCrouch;                                         // 0x0610(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0611(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSprintChanged;                                          // 0x0618(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedSprinting;                                     // 0x0628(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0629(0x0003) MISSED OFFSET
	struct FVector_NetQuantizeNormal                   ReplicatedAccelDirection;                                 // 0x062C(0x000C) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPowerSlideChanged;                                      // 0x0638(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FKSPowerSlideInfo                           bReplicatedPowerSlide;                                    // 0x0648(0x0002) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x2];                                       // 0x064A(0x0002) MISSED OFFSET
	float                                              DodgeRollDuration;                                        // 0x064C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedDodgeRoll;                                     // 0x0650(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0651(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDOdgeRollChanged;                                       // 0x0658(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x30];                                      // 0x0668(0x0030) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNearMiss;                                               // 0x0698(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET
	float                                              NearMissRange;                                            // 0x06B0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NearMissCooldownTime;                                     // 0x06B4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NearMissADSCameraShakeScaleOverride;                      // 0x06B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	struct FKSSpecialEffect                            NearMissSpecialEffect;                                    // 0x06C0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NearMissFrontCameraShake;                                 // 0x0710(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NearMissBackCameraShake;                                  // 0x0718(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NearMissRightCameraShake;                                 // 0x0720(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NearMissLeftCameraShake;                                  // 0x0728(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSLungeInfo                                LungeInfo;                                                // 0x0730(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLungeChanged;                                           // 0x0740(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplicatedAbilityMovement;                               // 0x0750(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedZipLineBracing;                                // 0x0751(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedZipLineEnding;                                 // 0x0752(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedUpline;                                        // 0x0753(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SecondsAwayToBraceOnZipLine;                              // 0x0754(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SecondsAwayToEndOnZipLine;                                // 0x0758(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	struct FKSZipLineInfo                              ReplicatedZipLineInfo;                                    // 0x0760(0x0010) (CPF_Net, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bPrevPressedJump;                                         // 0x0770(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0771(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJumpedDel;                                              // 0x0778(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLandedDel;                                              // 0x0788(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStartFallingDel;                                        // 0x0798(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x16];                                      // 0x07A8(0x0016) MISSED OFFSET
	bool                                               bReplicatedStun;                                          // 0x07BE(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x21];                                      // 0x07BF(0x0021) MISSED OFFSET
	bool                                               bReplicatedHardLand;                                      // 0x07E0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData20[0x37];                                      // 0x07E1(0x0037) MISSED OFFSET
	TWeakObjectPtr<class UCameraShake>                 CurrentSprintCameraShake;                                 // 0x0818(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x8];                                       // 0x0820(0x0008) MISSED OFFSET
	class UClass*                                      SprintCameraShake;                                        // 0x0828(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UCameraShake>                 CurrentLandedCameraShake;                                 // 0x0830(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x8];                                       // 0x0838(0x0008) MISSED OFFSET
	class UClass*                                      LandedCameraShake;                                        // 0x0840(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAimStateChanged;                                        // 0x0848(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             ProjectileThrowComponent;                                 // 0x0858(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             GrenadeThrowComponent;                                    // 0x0860(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             MeleeThrowComponent;                                      // 0x0868(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSCharacterAimMode                                ReplicatedAimState;                                       // 0x0870(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EKSCharacterAimMode                                LastReplicatedAimState;                                   // 0x0871(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bEnableSmoothedAimRotation;                               // 0x0872(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData23[0x1];                                       // 0x0873(0x0001) MISSED OFFSET
	struct FReplicatedViewInfo                         ViewInfo;                                                 // 0x0874(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseCameraLagSubstepping;                                 // 0x087C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x3];                                       // 0x087D(0x0003) MISSED OFFSET
	float                                              CameraLagMaxTimeStep;                                     // 0x0880(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraRotationLagSpeed;                                   // 0x0884(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    PreviousDesiredRot;                                       // 0x0888(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SmoothedViewRotation;                                     // 0x0894(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsSmoothingAimRotation;                                  // 0x08A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x7];                                       // 0x08A1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKilled;                                                 // 0x08A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FKSDeathInfo                                DeathInfo;                                                // 0x08B8(0x0028) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      InstantDeathDamageType;                                   // 0x08E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRadialMiss;                                              // 0x08E8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x7];                                       // 0x08E9(0x0007) MISSED OFFSET
	class AKSCharacterBase*                            LastCharacterToDamageMe;                                  // 0x08F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x18];                                      // 0x08F8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDeathStateChangedDel;                                   // 0x0910(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData28[0x38];                                      // 0x0920(0x0038) MISSED OFFSET
	class USphereComponent*                            HeadCollisionComponent;                                   // 0x0958(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      ZiplineMeshComponent;                                     // 0x0960(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      UplineMeshComponent;                                      // 0x0968(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class APlayerState*                                BackupPlayerState;                                        // 0x0970(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x10];                                      // 0x0978(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerStateChangedDel;                                  // 0x0988(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x18];                                      // 0x0998(0x0018) MISSED OFFSET
	TArray<struct FName>                               HeadBones;                                                // 0x09B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               LimbBones;                                                // 0x09C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, EHitLocationType>               CachedBoneToHitLocationType;                              // 0x09D0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               HeadshotPassthroughBones;                                 // 0x0A20(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x8];                                       // 0x0A30(0x0008) MISSED OFFSET
	struct FKSRevealInfo                               FriendlyVisibilityRevealParameters;                       // 0x0A38(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               AimedAtRevealParameters;                                  // 0x0A68(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               KilledByRevealParameters;                                 // 0x0A98(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              KilledByRevealTimeSeconds;                                // 0x0AC8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRevealed;                                                // 0x0ACC(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x3];                                       // 0x0ACD(0x0003) MISSED OFFSET
	struct FLinearColor                                CurrentRevealColor;                                       // 0x0AD0(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutlineZFadeMin;                                          // 0x0AE0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutlineZFadeMax;                                          // 0x0AE4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                SpawnImmuneOutlineColorEnemy;                             // 0x0AE8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FriendlyOutlineFadeDistanceMin;                           // 0x0AF8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FriendlyOutlineFadeDistanceMax;                           // 0x0AFC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReevaluateSilhouetteNextTick;                            // 0x0B00(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bForceSilhouette;                                         // 0x0B01(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EPlayerSilhouetteType                              ForcedSilhouetteType;                                     // 0x0B02(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bForcedFillSilhouette;                                    // 0x0B03(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bForcedMarkSilhouette;                                    // 0x0B04(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EPlayerSilhouetteType                              SilhouetteType;                                           // 0x0B05(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bFillSilhouette;                                          // 0x0B06(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bMarkSilhouette;                                          // 0x0B07(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EPlayerSilhouetteQualifier                         SilhouetteQualifier;                                      // 0x0B08(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData33[0x17];                                      // 0x0B09(0x0017) MISSED OFFSET
	bool                                               bSilhouetteComponentsDirty;                               // 0x0B20(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData34[0x7];                                       // 0x0B21(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 CachedSilhouetteComponents;                               // 0x0B28(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRootChanged;                                            // 0x0B38(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	struct FKSMantleInfo                               ReplicatedMantleInfo;                                     // 0x0B48(0x0044) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData35[0x4];                                       // 0x0B8C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMantleChanged;                                          // 0x0B90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData36[0x18];                                      // 0x0BA0(0x0018) MISSED OFFSET
	bool                                               CachedAimAssistVisibility;                                // 0x0BB8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData37[0x3];                                       // 0x0BB9(0x0003) MISSED OFFSET
	float                                              NextValidAimAssistVisibiltyTime;                          // 0x0BBC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCanEverBeConsideredForAimAssist;                         // 0x0BC0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData38[0x3];                                       // 0x0BC1(0x0003) MISSED OFFSET
	struct FName                                       InteractionState;                                         // 0x0BC4(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InteractionHeight;                                        // 0x0BCC(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InteractionTime;                                          // 0x0BD0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData39[0x34];                                      // 0x0BD4(0x0034) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSwimmingChangedDel;                                     // 0x0C08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSubmergedChangedDel;                                    // 0x0C18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBreathUpdate;                                           // 0x0C28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsSubmerged;                                             // 0x0C38(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData40[0x3];                                       // 0x0C39(0x0003) MISSED OFFSET
	float                                              MaximumLungCapacity;                                      // 0x0C3C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentLungCapacity;                                      // 0x0C40(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungCapacityRecoveryTime;                                 // 0x0C44(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyOnRoundSetup;                                     // 0x0C48(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      RoundCreated;                                             // 0x0C49(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData41[0x1E];                                      // 0x0C4A(0x001E) MISSED OFFSET
	bool                                               bIgnoreCollisionWithTeammates;                            // 0x0C68(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData42[0x7];                                       // 0x0C69(0x0007) MISSED OFFSET
	TMap<struct FName, struct FKSCharacterSocketInfo>  CharacterSockets;                                         // 0x0C70(0x0050) (CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEmoteStartedPlaying;                                    // 0x0CC0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEmoteStoppedPlaying;                                    // 0x0CD0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsSpawnImmune;                                           // 0x0CE0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData43[0xF];                                       // 0x0CE1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterBase");
		return ptr;
	}


	void UpdateSilhouette(float DeltaSeconds);
	void UpdateDebugHealthVisibility();
	void UnSubmerge(bool bClientSimulation);
	void Submerge(bool bClientSimulation);
	void StopSprint(bool bInterrupted);
	void StopRegenerationTimers();
	void StartSprint();
	class UCameraShake* StartCameraShakeFull(class UClass* ShakeClass, class APlayerCameraManager** OutShakeOwner);
	class UCameraShake* StartCameraShake(class UClass* ShakeClass);
	void ShowDebugLocation(bool bVisible);
	void SetSilhouetteQualifier(EPlayerSilhouetteQualifier InQualifier);
	void SetHealth(float NewHealth);
	void ResetHealthRegeneration();
	void ResetHealthRegenDelay();
	void ResetFreeFallState();
	void RemoveCameraShakeFull(class UCameraShake* CameraShake, class APlayerCameraManager* InShakeOwner);
	void RemoveCameraShake(class UCameraShake* CameraShake);
	void OverhealDecayTick();
	float Overheal(float OverhealValue, class AController* HealInstigator, class AActor* HealCauser);
	void OnTeamUpdated();
	void OnStopDefaultAim();
	void OnStopAimOverShoulder();
	void OnStopAimDownSights();
	void OnStopAimAlternate();
	void OnStartDefaultAim();
	void OnStartAimOverShoulder();
	void OnStartAimDownSights();
	void OnStartAimAlternate();
	void OnRep_Sprint();
	void OnRep_Silhouette();
	void OnRep_ReplicatedStun();
	void OnRep_ReplicatedAimState();
	void OnRep_ReplicatedAbilityMovement();
	void OnRep_PowerSlide();
	void OnRep_MantleInfo();
	void OnRep_LungeInfo();
	void OnRep_IsSubmerged();
	void OnRep_DeathState();
	void OnRep_CurrentOverheal();
	void OnRep_CurrentLungCapacity();
	void OnRep_BackupPlayerState();
	void OnLeaveTeam(class AKSTeamState* OldTeam);
	void OnJoinTeam(class AKSTeamState* NewTeam);
	void OnEndPowerSlide(EKSPowerSlideEndReason EndReason);
	void OnBeginPowerSlide();
	void NetMulticast_PlayNearMissEffects(const struct FVector& TraceStart, const struct FVector& TraceEnd, class UAkAudioEvent* WhizbyAudioEvent);
	void LockoutMovement(float Time);
	bool IsUnderwater();
	bool IsThermalDetectable();
	bool IsStunned();
	bool IsSprinting();
	bool IsPlayingEmote();
	bool IsNearMissOnCooldown();
	bool IsLunging();
	bool IsLocallyViewed();
	bool IsLaunched();
	bool IsInPowerSlide();
	bool IsInHardLandLockout();
	bool IsInAimTransition();
	bool IsDeadOrDestroyed();
	bool IsBot();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool IsAbilityMoving();
	void HealthRegenerationTick();
	void HealthRegenerationStopped(bool bFullyHealed);
	void HealthRegenerationStarted();
	void HealthRegenDelayTimerTick(float Seconds);
	void HealthRegenDelayTimerComplete();
	void HealthRegenDelayTimerActive(bool bActive);
	float Heal(float HealAmount, class AController* HealInstigator, class AActor* HealCauser);
	bool HasCharacterSocket(const struct FName& InSocketName);
	float GetZiplineAdjustHeight();
	class AActor* GetStartSpot();
	class AKSRevealManager* GetRevealManager();
	EKSCharacterAimMode GetReplicatedAimState();
	struct FTransform GetProjectileThrowTransform();
	struct FVector GetProjectileThrowLocation();
	float GetPowerSlideProgress();
	float GetPowerSlideAngle();
	EPlayerSilhouetteQualifier GetPlayerSilhouetteQualifier();
	struct FKSSpecialEffect GetNearMissSpecialEffect();
	float GetNearMissRange();
	struct FTransform GetMeleeThrowTransform();
	struct FVector GetMeleeThrowLocation();
	float GetMaximumLungCapacity();
	float GetMaxHealth();
	float GetLungRecoveryTime();
	EKSCharacterAimMode GetLastReplicatedAimState();
	class AKSPlayerState* GetKSPlayerState();
	class UKSCharacterMovementComponent* GetKSMovementComponent();
	class UKSCharacterAnimInst* GetKSCharacterAnimInst();
	class AKSCharacter* GetKSCharacter();
	class AKSPlayerState* GetKSBestPlayerState();
	class UKSAnimInstance* GetKSAnimInstance();
	struct FName GetInteractionState();
	bool GetImmediateDeathRagdoll();
	float GetHealthRegenDelayTime();
	float GetHealthPct();
	float GetHealth();
	struct FTransform GetGrenadeThrowTransform();
	struct FVector GetGrenadeThrowLocation();
	EKSDeathState GetDeathState();
	float GetCurrentOverheal();
	float GetCurrentLungCapacity();
	struct FVector GetCurrentDesiredMovementDirection();
	EKSCharacterAimMode GetCurrentAimState();
	struct FVector GetCurrentAccelDirection();
	struct FTransform GetCharacterSocketTransform(const struct FName& InSocketName);
	struct FRotator GetCharacterSocketRotator(const struct FName& InSocketName);
	struct FVector GetCharacterSocketLocation(const struct FName& InSocketName);
	class APlayerState* GetBestPlayerState();
	class APlayerState* GetBackupPlayerState();
	void ForceStartHealthRegeneration();
	void ForceSilhouette(bool bInForceSilhouette, EPlayerSilhouetteType InSilhouetteType, bool InFillSilhouette, bool InMarkSilhouette);
	void EndAbilityMovement();
	void DoStun(float StunDuration, bool FreezeInPlace);
	void DoHardLandAvoid();
	void DoHardLand(float LockoutDuration);
	bool CanViewDebugHealth();
	void BroadcastInstantInteraction(const struct FName& InInteractionState, float InInteractionHeight);
	void BroadcastHealthRegenerationStopped(bool bFullyHealed);
	void BroadcastHardLandAvoid();
	void BlueprintOnStopSwimming();
	void BlueprintOnStopSubmerged();
	void BlueprintOnStartSwimming();
	void BlueprintOnStartSubmerged();
	void BlueprintEmoteStoppedPlaying();
	void BlueprintEmoteStartedPlaying();
	void BeginDodgeRoll();
	void BeginAbilityMovement();
	bool AllowSprintingRightNow();
	bool AllowPowerSlideRightNow();
};


// Class Killstreak.KSCharacter
// 0x2950 (0x3640 - 0x0CF0)
class AKSCharacter : public AKSCharacterBase
{
public:
	unsigned char                                      UnknownData00[0x39];                                      // 0x0CF0(0x0039) MISSED OFFSET
	bool                                               bTapRadialButtonToUseLastSelectedItem;                    // 0x0D29(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xD6];                                      // 0x0D2A(0x00D6) MISSED OFFSET
	TArray<struct FName>                               ReleasedInputsOnOpenUI;                                   // 0x0E00(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenRadialMenu;                   // 0x0E10(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenEscapeMenu;                   // 0x0E20(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenScoreboard;                   // 0x0E30(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ExcludedReleasedInputsOnOpenMap;                          // 0x0E40(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ReleasedInputsOnCloseRadialMenu;                          // 0x0E50(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPossessedBy;                                            // 0x0E60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnUnpossessed;                                            // 0x0E70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerController*                         CachedKSPlayerController;                                 // 0x0E80(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0E88(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      InteractionType;                                          // 0x0E90(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSObjectiveInfo                            ObjectiveInfo;                                            // 0x0E98(0x00B0) (CPF_Net, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	class UKSAutoPickupComponent*                      AutoPickupComponent;                                      // 0x0F48(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bProcessingReverseFriendlyFireDamageEvent;                // 0x0F50(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x1F];                                      // 0x0F51(0x001F) MISSED OFFSET
	class UKSOutOfBoundsManager*                       OutOfBoundsManager;                                       // 0x0F70(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDamageAudioEvent;                                   // 0x0F78(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleJumpAudioEvent;                                     // 0x0F80(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleReviveAudioEvent;                                   // 0x0F88(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleReviveAudioEventEnd;                                // 0x0F90(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDownedAudioEvent;                                   // 0x0F98(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               RumbleDownedAudioEventEnd;                                // 0x0FA0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0FA8(0x0008) MISSED OFFSET
	float                                              MinimumFlinchHeight;                                      // 0x0FB0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumFlinchDamage;                                      // 0x0FB4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumFlinchHeight;                                      // 0x0FB8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumFlinchDamage;                                      // 0x0FBC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FlinchDuration;                                           // 0x0FC0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FlinchRecoveryRate;                                       // 0x0FC4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFlinchSnipersOnly;                                       // 0x0FC8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0FC9(0x0007) MISSED OFFSET
	TMap<class AKSPlayerState*, float>                 DamageRecord;                                             // 0x0FD0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DamageRecordResetTime;                                    // 0x1020(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x1024(0x0004) MISSED OFFSET
	struct FTimerHandle                                DamageRecordResetTimer;                                   // 0x1028(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSShotgunHitChangeList                     ReplicatedShotgunHits;                                    // 0x1030(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnNewShotgunHit;                                          // 0x10B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x50];                                      // 0x10C8(0x0050) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayHitFromPointDamageDel;                              // 0x1118(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayHitFromRadialDamageDel;                             // 0x1128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x50];                                      // 0x1138(0x0050) MISSED OFFSET
	float                                              KillCamHitRecordTime;                                     // 0x1188(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x34];                                      // 0x118C(0x0034) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLocalViewChanged;                                       // 0x11C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class APlayerController>>    LocalViewers;                                             // 0x11D0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FPostProcessSettings                        BlendableSettings;                                        // 0x11E0(0x0550) (CPF_Transient, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCanRemoveBackPackChanged;                               // 0x1730(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterFreeFallStartedDel;                            // 0x1740(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterFreeFallCompletedDel;                          // 0x1750(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x8];                                       // 0x1760(0x0008) MISSED OFFSET
	struct FText                                       RemoveBackpackInteractionPromptText;                      // 0x1768(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	float                                              SkyDiveMaxPitch;                                          // 0x1780(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SkyDiveMinPitch;                                          // 0x1784(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SkyDiveExitDistance;                                      // 0x1788(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SkyDiveExitThreshold;                                     // 0x178C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SkyDiveForceExitDistance;                                 // 0x1790(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPostSkyDiveDodgeRoll;                                    // 0x1794(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bLeftHandMantleIK;                                        // 0x1795(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRightHandMantleIK;                                       // 0x1796(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x1];                                       // 0x1797(0x0001) MISSED OFFSET
	struct FVector                                     LeftHandMantleIKLocation;                                 // 0x1798(0x000C) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     RightHandMantleIKLocation;                                // 0x17A4(0x000C) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LeftHandMantleIKAlpha;                                    // 0x17B0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RightHandMantleIKAlpha;                                   // 0x17B4(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFadeOutLeftHandMantleIK;                                 // 0x17B8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bFadeOutRightHandMantleIK;                                // 0x17B9(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x6];                                       // 0x17BA(0x0006) MISSED OFFSET
	TArray<struct FSmoothedComponentInfo>              SmoothedComponents;                                       // 0x17C0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UKSSmoothingComponent*>               RegisteredSmoothingComponents;                            // 0x17D0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x98];                                      // 0x17E0(0x0098) MISSED OFFSET
	class UCurveFloat*                                 SprintImpulseCurve;                                       // 0x1878(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintPressLeeway;                                        // 0x1880(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintLeewayExpire;                                       // 0x1884(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFacingVaultWall;                                         // 0x1888(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToAutoSprint;                                       // 0x1889(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoSprintTimerComplete;                                 // 0x188A(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x1];                                       // 0x188B(0x0001) MISSED OFFSET
	float                                              AutoSprintDelay;                                          // 0x188C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x8];                                       // 0x1890(0x0008) MISSED OFFSET
	float                                              LeftHandMantleIKOffset;                                   // 0x1898(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightHandMantleIKOffset;                                  // 0x189C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HandMantleIKFadeTime;                                     // 0x18A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MantleIKHandsToWallForwardOffset;                         // 0x18A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchCameraShiftInterpSpeed;                             // 0x18A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchCameraBoomLengthScale;                              // 0x18AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RiseFromCrouchDelayTime;                                  // 0x18B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x18B4(0x0004) MISSED OFFSET
	float                                              CameraInterpSpeed;                                        // 0x18B8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsingEmoteCamera;                                        // 0x18BC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x3];                                       // 0x18BD(0x0003) MISSED OFFSET
	float                                              CurrentEmoteCameraVertOffset;                             // 0x18C0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentEmoteCameraInterpSpeed;                            // 0x18C4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StandEmoteCameraVertOffset;                               // 0x18C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchEmoteCameraVertOffset;                              // 0x18CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProneEmoteCameraVertOffset;                               // 0x18D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StandEmoteCameraInterpSpeed;                              // 0x18D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchEmoteCameraInterpSpeed;                             // 0x18D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProneEmoteCameraInterpSpeed;                              // 0x18DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintCameraChangeDuration;                               // 0x18E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintOutCameraChangeDuration;                            // 0x18E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x48];                                      // 0x18E8(0x0048) MISSED OFFSET
	float                                              GamepadInput;                                             // 0x1930(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HasGamepadInput;                                          // 0x1934(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bZiplineActive;                                           // 0x1935(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x2];                                       // 0x1936(0x0002) MISSED OFFSET
	float                                              ZipLineShoulderCameraBoomLength;                          // 0x1938(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZipLineShoulderBoomLengthChangeTime;                      // 0x193C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        AbilityMovementMod;                                       // 0x1940(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZiplineMeshHeightAdjust;                                  // 0x1948(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SwimCameraBoomFloatHeight;                                // 0x194C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DrownDamagePeriod;                                        // 0x1950(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DrownPerTickDamage;                                       // 0x1954(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DrownDamageType;                                          // 0x1958(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x8];                                       // 0x1960(0x0008) MISSED OFFSET
	class UPGame_PositionHistoryComponent*             PositionHistoryComponent;                                 // 0x1968(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData20[0x8];                                       // 0x1970(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOutOfBoundsBeginDel;                                    // 0x1978(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsWarningEndDel;                               // 0x1988(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOutOfBoundsEndDel;                                      // 0x1998(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSOutOfBoundsInfo                          OutOfBoundsInfo;                                          // 0x19A8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bLocalOutOfBounds;                                        // 0x19B0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x7];                                       // 0x19B1(0x0007) MISSED OFFSET
	struct FPGame_ReplicatedTimer                      ReplicatedEMPLockoutTimer;                                // 0x19B8(0x0038) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x18];                                      // 0x19F0(0x0018) MISSED OFFSET
	bool                                               bIsEMPLocked;                                             // 0x1A08(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData23[0x7];                                       // 0x1A09(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEMPLocked;                                              // 0x1A10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEMPLockoutTick;                                         // 0x1A20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData24[0x18];                                      // 0x1A30(0x0018) MISSED OFFSET
	bool                                               bIsOnFire;                                                // 0x1A48(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData25[0x3];                                       // 0x1A49(0x0003) MISSED OFFSET
	float                                              CachedPrimaryWeaponFieldOfView;                           // 0x1A4C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSSmoothingComponent*                       CameraRootComponent;                                      // 0x1A50(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       MainCameraBoom;                                           // 0x1A58(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCameraComponent;                                      // 0x1A60(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       SprintCameraBoom;                                         // 0x1A68(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            SprintCameraComponent;                                    // 0x1A70(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       TransitionCameraBoom;                                     // 0x1A78(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            TransitionCameraComponent;                                // 0x1A80(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       ShoulderCameraBoom;                                       // 0x1A88(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            ShoulderCameraComponent;                                  // 0x1A90(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            FirstPersonCameraComponent;                               // 0x1A98(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       TabletCameraBoom;                                         // 0x1AA0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            TabletCameraComponent;                                    // 0x1AA8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       ActionCameraBoom1;                                        // 0x1AB0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            ActionCameraComponent;                                    // 0x1AB8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpringArmComponent*                       SwimCameraBoom;                                           // 0x1AC0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            SwimCameraComponent;                                      // 0x1AC8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            ActiveCameraComponent;                                    // 0x1AD0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x8];                                       // 0x1AD8(0x0008) MISSED OFFSET
	class UCameraComponent*                            PendingCameraComponent;                                   // 0x1AE0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x8];                                       // 0x1AE8(0x0008) MISSED OFFSET
	ECameraShoulder                                    CameraShoulder;                                           // 0x1AF0(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECameraShoulder                                    DesiredCameraShoulder;                                    // 0x1AF1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x2];                                       // 0x1AF2(0x0002) MISSED OFFSET
	float                                              ShoulderSwapProgress;                                     // 0x1AF4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ShoulderSwapTime;                                         // 0x1AF8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoShoulderSwapTime;                                     // 0x1AFC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentShoulderSwapTime;                                  // 0x1B00(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastShoulderSwapTimestamp;                                // 0x1B04(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastManualShoulderSwapLocation;                           // 0x1B08(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ShoulderSwapCooldownTime;                                 // 0x1B14(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ShoulderSwapBlendExponent;                                // 0x1B18(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NextShoulderSwapTime;                                     // 0x1B1C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x4];                                       // 0x1B20(0x0004) MISSED OFFSET
	float                                              AimDownSightsScopeInterpSpeed;                            // 0x1B24(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchAOSCamVertOffset;                                   // 0x1B28(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchAOSAimVertOffset;                                   // 0x1B2C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CrouchAOSCamVertOffsetBlendTime;                          // 0x1B30(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x34];                                      // 0x1B34(0x0034) MISSED OFFSET
	bool                                               bFocalPointMaintenanceEnabled;                            // 0x1B68(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMantainFocualPointOnCameraTransition;                    // 0x1B69(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x2];                                       // 0x1B6A(0x0002) MISSED OFFSET
	float                                              CameraFocualThreshold;                                    // 0x1B6C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumFocalPointMaintenanceAngle;                        // 0x1B70(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumFocalPointMaintenanceAngleLeaveADS;                // 0x1B74(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumFocalPointMaintenanceDistance;                     // 0x1B78(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    CameraTransitionRotationDelta;                            // 0x1B7C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    CameraTransitionRotationDeltaRemaining;                   // 0x1B88(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseAdvancedFocalPointTracking;                           // 0x1B94(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseFocalPointDoubleCheck;                                // 0x1B95(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x2];                                       // 0x1B96(0x0002) MISSED OFFSET
	float                                              FocalPointDoubleCheckAllowedBlockDistance;                // 0x1B98(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x4];                                       // 0x1B9C(0x0004) MISSED OFFSET
	struct FVector                                     RelativeFocalPoint;                                       // 0x1BA0(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    AppliedFocalPointCorrection;                              // 0x1BAC(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       MeshADSPitchPivotBoneName;                                // 0x1BB8(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimSnapThrottleTime;                                      // 0x1BC0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x14];                                      // 0x1BC4(0x0014) MISSED OFFSET
	class UKSAimAssistAnchorComponent*                 CachedSnapAnchor;                                         // 0x1BD8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NextValidAimSnapTime;                                     // 0x1BE0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData35[0x4];                                       // 0x1BE4(0x0004) MISSED OFFSET
	float                                              LockoutCameraCooldownSpeed;                               // 0x1BE8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x1C];                                      // 0x1BEC(0x001C) MISSED OFFSET
	struct FRotator                                    NonFocalPointRotation;                                    // 0x1C08(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    AppliedFocalPointYawRotation;                             // 0x1C14(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CameraPivotCurve;                                         // 0x1C20(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPivotCameraToActorNotLocation;                           // 0x1C28(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTrackTargetAfterPivotingToIt;                            // 0x1C29(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData37[0x36];                                      // 0x1C2A(0x0036) MISSED OFFSET
	class AActor*                                      CameraPivotTargetActor;                                   // 0x1C60(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AutoShoulderSwapExtent;                                   // 0x1C68(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapForwardCheckDist;                         // 0x1C74(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapRightCheckDist;                           // 0x1C78(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AutoShoulderSwapRightForwardCheckDist;                    // 0x1C7C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapTimeThreshold;                      // 0x1C80(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapWeaponFireTime;                     // 0x1C84(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LockedAutoShoulderSwapDistance;                           // 0x1C88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData38[0x14];                                      // 0x1C8C(0x0014) MISSED OFFSET
	EKSCharacterAimMode                                AimState;                                                 // 0x1CA0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSCharacterAimMode                                DesiredAimState;                                          // 0x1CA1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimPressed;                                              // 0x1CA2(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWasAimDownSightsWhenAimPressed;                          // 0x1CA3(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWasAimAlternateWhenAimPressed;                           // 0x1CA4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData39[0x3];                                       // 0x1CA5(0x0003) MISSED OFFSET
	float                                              AimHoldTime;                                              // 0x1CA8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimOverShoulderHoldTime;                                  // 0x1CAC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EKSMaterialHideType, class UMaterial*>        MaterialHideTypeMap;                                      // 0x1CB0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<int, EKSMaterialHideType>                     MaterialIndexesToHide;                                    // 0x1D00(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<int, class UMaterialInterface*>               HiddenMaterials;                                          // 0x1D50(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAimLocked;                                             // 0x1DA0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData40[0x7];                                       // 0x1DA1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAimLockedChangedDel;                                    // 0x1DA8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsCrosshairHidden;                                       // 0x1DB8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData41[0x7];                                       // 0x1DB9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCrosshairHiddenChangedDel;                              // 0x1DC0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData42[0x48];                                      // 0x1DD0(0x0048) MISSED OFFSET
	struct FGameplayTagContainer                       AvailableEquipPoints_New;                                 // 0x1E18(0x0020) (CPF_Edit, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_DuplicateTransient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSInitialInventoryItem>             InitialInventory;                                         // 0x1E38(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSInitialAmmo>                      InitialAmmo;                                              // 0x1E48(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                // 0x1E58(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDropAmmoOnDeath;                                         // 0x1E60(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData43[0x7];                                       // 0x1E61(0x0007) MISSED OFFSET
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDeath;                                 // 0x1E68(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDowned;                                // 0x1E88(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>               ActiveWeaponSlotTiers;                                    // 0x1EA8(0x0010) (CPF_ZeroConstructor, CPF_Deprecated, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FGameplayTagContainer>               GrenadeSlotTiers;                                         // 0x1EB8(0x0010) (CPF_ZeroConstructor, CPF_Deprecated, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSLootLockerItem>                   LootLockerInventory;                                      // 0x1EC8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                StartingActiveWeaponEquipPoint;                           // 0x1ED8(0x0008) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       MainSwapHandlerProfile;                                   // 0x1EE0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       GadgetSwapHandlerProfile;                                 // 0x1EE8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       MedpackSwapHandlerProfile;                                // 0x1EF0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       PassiveSwapHandlerProfile;                                // 0x1EF8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSwapHandlerProfile*                       QuickMeleeSwapHandlerProfile;                             // 0x1F00(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_PersistentInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              EmergencyWeaponAsset;                                     // 0x1F08(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData44[0x8];                                       // 0x1F10(0x0008) MISSED OFFSET
	struct FText                                       ObjectiveWeaponDropPrompt;                                // 0x1F18(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       ObjectiveWeaponDropProgressText;                          // 0x1F30(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DropObjectiveWeaponInteractTime;                          // 0x1F48(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData45[0x4];                                       // 0x1F4C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterStartedWeaponFireNativeDel;                    // 0x1F50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bSelfDestruct;                                            // 0x1F60(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData46[0x77];                                      // 0x1F61(0x0077) MISSED OFFSET
	TMap<struct FName, int>                            SubTypeComponentIndexMap;                                 // 0x1FD8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              MeleeHoldTime;                                            // 0x2028(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PrimaryTier;                                              // 0x202C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SecondaryTier;                                            // 0x2030(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MeleeTier;                                                // 0x2034(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponDropHoldTime;                                       // 0x2038(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponDoubleTapTime;                                      // 0x203C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastActiveWeaponFireTimestamp;                            // 0x2040(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData47[0x4];                                       // 0x2044(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActiveWeaponChangedDel;                                 // 0x2048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData48[0x18];                                      // 0x2058(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActiveGrenadeChangedDel;                                // 0x2070(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData49[0x18];                                      // 0x2080(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActiveMedPackChangedDel;                                // 0x2098(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData50[0x18];                                      // 0x20A8(0x0018) MISSED OFFSET
	struct FTimerHandle                                MeleeHoldTimer;                                           // 0x20C0(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DoubleTapTimer;                                           // 0x20C8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                DropHoldTimer;                                            // 0x20D0(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              WeaponSwapThrottleExpire;                                 // 0x20D8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              WeaponSwapThrottlePeriod;                                 // 0x20DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              QuickMeleeHoldTime;                                       // 0x20E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData51[0x4];                                       // 0x20E4(0x0004) MISSED OFFSET
	class AKSWeapon_Melee*                             CurrentQuickMeleeWeapon;                                  // 0x20E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bQuickMeleeHoldCompleted;                                 // 0x20F0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSwapOffQuickMeleeAfterFire;                              // 0x20F1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData52[0x1E];                                      // 0x20F2(0x001E) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStartFireFailed;                                        // 0x2110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bNoFire;                                                  // 0x2120(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData53[0x1F];                                      // 0x2121(0x001F) MISSED OFFSET
	bool                                               IsFireWeaponHeld;                                         // 0x2140(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsThrowGrenadeHeld;                                      // 0x2141(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               IsAimDownSightsHeld;                                      // 0x2142(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData54[0x5];                                       // 0x2143(0x0005) MISSED OFFSET
	struct FString                                     SwingMontageSection;                                      // 0x2148(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData55[0x10];                                      // 0x2158(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponInventoryChanged;                                 // 0x2168(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGadgetResupplied;                                       // 0x2178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeHoldStart;                                         // 0x2188(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeleeHoldEnd;                                           // 0x2198(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UKSWeaponComponent*                          ActiveWeaponComponent[0xB];                               // 0x21A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	uint16_t                                           ActiveEquipmentId[0xB];                                   // 0x2200(0x0002) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData56[0x12];                                      // 0x2216(0x0012) MISSED OFFSET
	struct FKSEquipmentContainer                       EquipmentContainer;                                       // 0x2228(0x0228) (CPF_Net, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	TMap<uint16_t, struct FKSPendingWeaponStateUpdates> PendingWeaponStateUpdates;                                // 0x2450(0x0050) (CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnEquipmentAddedDel;                                      // 0x24A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData57[0x18];                                      // 0x24B0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEquipmentRemovedDel;                                    // 0x24C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData58[0x18];                                      // 0x24D8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEquipmentBecomeActiveDel;                               // 0x24F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData59[0x18];                                      // 0x2500(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEquipmentEndActiveDel;                                  // 0x2518(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData60[0x18];                                      // 0x2528(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSpecialAmmoEvent;                                       // 0x2540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<EAmmoType, class UKSAmmoDropAsset*>           AmmoDropAssets;                                           // 0x2550(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSAmmoManager                              AmmoManager;                                              // 0x25A0(0x0130) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData61[0x18];                                      // 0x26D0(0x0018) MISSED OFFSET
	float                                              OutOfSightWeaponPickupRange;                              // 0x26E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WeaponPickupRange;                                        // 0x26EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            PickUpSphereComponent;                                    // 0x26F0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LabelPickupRange;                                         // 0x26F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData62[0x4];                                       // 0x26FC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemPickedUp;                                           // 0x2700(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<class AActor*, float>                         OutOfRangePickups;                                        // 0x2710(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData63[0x4];                                       // 0x2760(0x0004) MISSED OFFSET
	float                                              ReloadTapThreshold;                                       // 0x2764(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ContextualPressTime;                                      // 0x2768(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsToInteract;                                         // 0x276C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData64[0x3];                                       // 0x276D(0x0003) MISSED OFFSET
	float                                              Health;                                                   // 0x2770(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CachedMaxHealth;                                          // 0x2774(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DownedHealth;                                             // 0x2778(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RevivedHealth;                                            // 0x277C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ArmorHelmetLevel;                                         // 0x2780(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ArmorVestLevel;                                           // 0x2784(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ArmorDurabilityPercent;                                   // 0x2788(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentArmorDurability;                                   // 0x278C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHealthBonus;                                           // 0x2790(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMaxHealthBonus;                                        // 0x2794(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LocalMaxHealthBonus;                                      // 0x2798(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData65[0x4];                                       // 0x279C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMaxHealthBonusChanged;                                  // 0x27A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDowned;                                                  // 0x27B0(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData66[0x7];                                       // 0x27B1(0x0007) MISSED OFFSET
	class UKSTimerComponent*                           GiveUpTimer;                                              // 0x27B8(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GiveUpHoldTime;                                           // 0x27C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData67[0x4];                                       // 0x27C4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGiveUpTimerActive;                                      // 0x27C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGiveUpTimerTick;                                        // 0x27D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGiveUpAllowed;                                          // 0x27E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DownedImmuneTime;                                         // 0x27F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DownedImmuneTimeStamp;                                    // 0x27FC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData68[0x4];                                       // 0x2800(0x0004) MISSED OFFSET
	bool                                               bAllowGiveUp;                                             // 0x2804(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData69[0x3];                                       // 0x2805(0x0003) MISSED OFFSET
	float                                              BleedPeriod;                                              // 0x2808(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BleedDamage;                                              // 0x280C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      BleedDamageType;                                          // 0x2810(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData70[0x8];                                       // 0x2818(0x0008) MISSED OFFSET
	class AController*                                 DownInstigator;                                           // 0x2820(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DownDamageType;                                           // 0x2828(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AActor*                                      DownDamageCauser;                                         // 0x2830(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData71[0x60];                                      // 0x2838(0x0060) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterDownedChangedDel;                              // 0x2898(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                DownSpree;                                                // 0x28A8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData72[0x4];                                       // 0x28AC(0x0004) MISSED OFFSET
	TArray<class UAkAudioEvent*>                       DownSpreeSounds;                                          // 0x28B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultAssistDuration;                                    // 0x28C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData73[0x4];                                       // 0x28C4(0x0004) MISSED OFFSET
	TArray<struct FAssistTag>                          DownAssistTagQueue;                                       // 0x28C8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        DownAssists;                                              // 0x28D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AController*                                 KillInstigator;                                           // 0x28E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        EliminationAssists;                                       // 0x28F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class APlayerState*>                        PlayersWithEliminationCredit;                             // 0x2900(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData74[0x8];                                       // 0x2910(0x0008) MISSED OFFSET
	struct FText                                       ReviveInteractionProgressText;                            // 0x2918(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       ReviveInteractionPromptText;                              // 0x2930(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	class UCameraShake*                                InteractionCameraShake;                                   // 0x2948(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToRevive;                                             // 0x2950(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              bForceCrouchOnRevive;                                     // 0x2954(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReviveInfo                                 ReviveInfo;                                               // 0x2958(0x0030) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanMoveWhileRevivingOther;                               // 0x2988(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData75[0xF];                                       // 0x2989(0x000F) MISSED OFFSET
	class USphereComponent*                            ReviveRangeSphereComponent;                               // 0x2998(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData76[0x58];                                      // 0x29A0(0x0058) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       ActorTargetingMeForRevive;                                // 0x29F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStartReviveDel;                                         // 0x2A00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData77[0x18];                                      // 0x2A10(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStartReviveOtherDel;                                    // 0x2A28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData78[0x18];                                      // 0x2A38(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveInterruptedDel;                                   // 0x2A50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData79[0x18];                                      // 0x2A60(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveOtherInterruptedDel;                              // 0x2A78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData80[0x18];                                      // 0x2A88(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveCompletedDel;                                     // 0x2AA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData81[0x18];                                      // 0x2AB0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveOtherCompletedDel;                                // 0x2AC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData82[0x18];                                      // 0x2AD8(0x0018) MISSED OFFSET
	int                                                NumOngoingRemoteRevives;                                  // 0x2AF0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData83[0x24];                                      // 0x2AF4(0x0024) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShoulderSwapChanged;                                    // 0x2B18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UKSInteractionManager*                       InteractionManager;                                       // 0x2B28(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSInteractionManager*                       ReceivedInteractionManager;                               // 0x2B30(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       InteractionHoverTarget;                                   // 0x2B38(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHoverTargetPress;                                        // 0x2B40(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHoverTargetHold;                                         // 0x2B41(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData84[0x6];                                       // 0x2B42(0x0006) MISSED OFFSET
	class AActor*                                      InteractionTarget;                                        // 0x2B48(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsInInteraction;                                          // 0x2B50(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData85[0x7];                                       // 0x2B51(0x0007) MISSED OFFSET
	class UClass*                                      MostRecentInteractionType;                                // 0x2B58(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSInteractionResult                               MostRecentInteractionResult;                              // 0x2B60(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData86[0x3];                                       // 0x2B61(0x0003) MISSED OFFSET
	struct FVector                                     MostRecentInteractionStartLocation;                       // 0x2B64(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               InteractionFacesRotation;                                 // 0x2B70(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData87[0x7];                                       // 0x2B71(0x0007) MISSED OFFSET
	struct FKSInteractableCameraTransition             InteractionCameraTransition;                              // 0x2B78(0x0030) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DefaultInteractionType;                                   // 0x2BA8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InteractionDistance;                                      // 0x2BB0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxInteractionAngle;                                      // 0x2BB4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InteractionHoldTime;                                      // 0x2BB8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InteractionPriorityBaseModifier;                          // 0x2BBC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUncrouchAfterInteraction;                                // 0x2BC0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInteractionCrouchLock;                                   // 0x2BC1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData88[0x1E];                                      // 0x2BC2(0x001E) MISSED OFFSET
	struct FTimerHandle                                InstantInteractHandle;                                    // 0x2BE0(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InstantInteractCooldownTime;                              // 0x2BE8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData89[0x4];                                       // 0x2BEC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHoveredInteractableChanged;                             // 0x2BF0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractStart;                                          // 0x2C00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRemotePlayerInteractStart;                              // 0x2C10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractEnd;                                            // 0x2C20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRemotePlayerInteractEnd;                                // 0x2C30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractSuccess;                                        // 0x2C40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractFailed;                                         // 0x2C50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnInteractInterrupted;                                    // 0x2C60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargingActionStart;                                    // 0x2C70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargingActionEnd;                                      // 0x2C80(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BaseLocalDropLocation;                                    // 0x2C90(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData90[0x4];                                       // 0x2C9C(0x0004) MISSED OFFSET
	TMap<int, float>                                   TierToDropYawMap;                                         // 0x2CA0(0x0050) (CPF_Deprecated, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, float>                   EquipPointToDropYawMap;                                   // 0x2CF0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              AmmoDropYaw;                                              // 0x2D40(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DropLateralSpeed;                                         // 0x2D44(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DropLateralSpeedVariance;                                 // 0x2D48(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CompanionAmmoHeightShift;                                 // 0x2D4C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DropAngleVariance;                                        // 0x2D50(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData91[0x14];                                      // 0x2D54(0x0014) MISSED OFFSET
	bool                                               bInRagdoll;                                               // 0x2D68(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bInPreRagdoll;                                            // 0x2D69(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData92[0x1A];                                      // 0x2D6A(0x001A) MISSED OFFSET
	float                                              TryToStopRagdollInterval;                                 // 0x2D84(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RagdollFreezeSpeed;                                       // 0x2D88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData93[0x18];                                      // 0x2D8C(0x0018) MISSED OFFSET
	float                                              DeathDisplayLifespan;                                     // 0x2DA4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             DeathWidgetPoolName;                                      // 0x2DA8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseScreenSizeCutoff;                                     // 0x2DB8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData94[0x3];                                       // 0x2DB9(0x0003) MISSED OFFSET
	float                                              PlayerHoverRange;                                         // 0x2DBC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HoverMinScreenHeightPct;                                  // 0x2DC0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HoverMinScreenHeightPctADS;                               // 0x2DC4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseConeHover;                                            // 0x2DC8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData95[0x3];                                       // 0x2DC9(0x0003) MISSED OFFSET
	float                                              HoverConeAngle;                                           // 0x2DCC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSHoverConeScreenRadius;                                 // 0x2DD0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AlwaysHoverDistance;                                      // 0x2DD4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUnhoverWhenOccludedByHoveredCharacter;                   // 0x2DD8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData96[0xB];                                       // 0x2DD9(0x000B) MISSED OFFSET
	bool                                               bIsHovered;                                               // 0x2DE4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData97[0x3];                                       // 0x2DE5(0x0003) MISSED OFFSET
	float                                              CachedCameraFOV;                                          // 0x2DE8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   CachedViewPortSize;                                       // 0x2DEC(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              CachedHalfTanFOV;                                         // 0x2DF4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData98[0xE8];                                      // 0x2DF8(0x00E8) MISSED OFFSET
	bool                                               bGodMode;                                                 // 0x2EE0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData99[0x7];                                       // 0x2EE1(0x0007) MISSED OFFSET
	TArray<struct FKSFlashBangRecord>                  FlashBangRecords;                                         // 0x2EE8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData100[0x8];                                      // 0x2EF8(0x0008) MISSED OFFSET
	class UKSPlayerMod*                                FlashBangEffectMod;                                       // 0x2F00(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerModInstance*                        FlashBangEffectModInstance;                               // 0x2F08(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLightBombHitCount;                                      // 0x2F10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData101[0x8];                                      // 0x2F20(0x0008) MISSED OFFSET
	bool                                               bScrambled;                                               // 0x2F28(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMedPackPressed;                                          // 0x2F29(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData102[0x6];                                      // 0x2F2A(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStickDel;                                               // 0x2F30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMedPackFailed;                                          // 0x2F40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGrenadeFailed;                                          // 0x2F50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWeaponPickupInventoryFull;                              // 0x2F60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemPickupSuccess;                                      // 0x2F70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicatedActivatingMod;                                 // 0x2F80(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData103[0x7];                                      // 0x2F81(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModsUpdated;                                            // 0x2F88(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnActivatableModsUpdated;                                 // 0x2F98(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData104[0x18];                                     // 0x2FA8(0x0018) MISSED OFFSET
	bool                                               bRotationInputAllowsAimAssist;                            // 0x2FC0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData105[0x3];                                      // 0x2FC1(0x0003) MISSED OFFSET
	float                                              MinimumRotationInputForAimAssist;                         // 0x2FC4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData106[0x10];                                     // 0x2FC8(0x0010) MISSED OFFSET
	struct FHaulingInfo                                HaulerInfo;                                               // 0x2FD8(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowEnemyHauling;                                        // 0x2FE8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData107[0x7];                                      // 0x2FE9(0x0007) MISSED OFFSET
	struct FText                                       HaulEnemyInteractionPromptText;                           // 0x2FF0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       FriendlyCarrySocketName;                                  // 0x3008(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       EnemyCarrySocketName;                                     // 0x3010(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData108[0x10];                                     // 0x3018(0x0010) MISSED OFFSET
	struct FCarriedInfo                                CarriedInfo;                                              // 0x3028(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGamepadAbilityCycle;                                    // 0x3038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAbilityActivatedEvent;                                  // 0x3048(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAbilityUsedEvent;                                       // 0x3058(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData109[0x4];                                      // 0x3068(0x0004) MISSED OFFSET
	float                                              ChordDelay;                                               // 0x306C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              HoldDelay;                                                // 0x3070(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DamageForMaxForceFeedback;                                // 0x3074(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageForceFeedbackScale;                                 // 0x3078(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageForceFeedbackDuration;                              // 0x307C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDamageForceFeedbackUsesSmallMotors;                      // 0x3080(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData110[0x3];                                      // 0x3081(0x0003) MISSED OFFSET
	float                                              ForceFeedbackOnErrorMagnitude;                            // 0x3084(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForceFeedbackOnErrorDuration;                             // 0x3088(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LandingSpeedForMaxForceFeedback;                          // 0x308C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UForceFeedbackComponent*                     LandForceFeedbackComponent;                               // 0x3090(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        JumpForceFeedbackEffect;                                  // 0x3098(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        DownedForceFeedbackEffect;                                // 0x30A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UForceFeedbackEffect*                        BeingRevivedForceFeedbackEffect;                          // 0x30A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAIDifficultyComponent*                    DifficultyComponent;                                      // 0x30B0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAIObjectivePriorityComponent*             ObjectivePriorityComponent;                               // 0x30B8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAIItemPriorityComponent*                  ItemPriorityComponent;                                    // 0x30C0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAIItemPriorityComponent*                  TempItemPriorityComponent;                                // 0x30C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TScriptInterface<class UKSFootstepOverrideInterface>> ReplicatedFootstepOverrides;                              // 0x30D0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TScriptInterface<class UKSFootstepOverrideInterface>> AutonomousProxyFootstepOverrides;                         // 0x30E0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      MovingNavAreaClass;                                       // 0x30F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      StillNavAreaClass;                                        // 0x30F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                   // 0x3100(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NavModificationUpdateTimerPeriod;                         // 0x3108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData111[0xC];                                      // 0x310C(0x000C) MISSED OFFSET
	struct FName                                       DamagedHearingEventTag;                                   // 0x3118(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageForDefaultLoudness;                                 // 0x3120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       FireHearingEventTag;                                      // 0x3124(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FireRangeForDefaultLoudness;                              // 0x312C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       FootstepHearingEventTag;                                  // 0x3130(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementSpeedForDefaultLoudness;                          // 0x3138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TeamEventRange;                                           // 0x313C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData112[0xC];                                      // 0x3140(0x000C) MISSED OFFSET
	struct FName                                       BotName;                                                  // 0x314C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BotADSAccuracy;                                           // 0x3154(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRandomBotName;                                           // 0x3158(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBot;                                                     // 0x3159(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECharacterBehaviorState                            CurrentBehaviorState;                                     // 0x315A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData113[0x5];                                      // 0x315B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBehaviorStateChanged;                                   // 0x3160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSAkComponent*                              CharacterAkComponent;                                     // 0x3170(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UClass*                                      VOComponentClass;                                         // 0x3178(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSVOComponent*                              VOComponent;                                              // 0x3180(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UDataTable*>                          PossibleVOTables;                                         // 0x3188(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData114[0x4];                                      // 0x3198(0x0004) MISSED OFFSET
	struct FGameplayTag                                DownOtherVOEvent;                                         // 0x319C(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NameplateZOffset;                                         // 0x31A4(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentNameplateZOffset;                                  // 0x31A8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentNameplateAimZOffset;                               // 0x31AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NameplateAimZOffset;                                      // 0x31B0(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NameplateAimZOffsetBlendTime;                             // 0x31B4(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TargetNameplateAimZOffset;                                // 0x31B8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentNameplateCrouchZOffset;                            // 0x31BC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NameplateCrouchZOffset;                                   // 0x31C0(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NameplateCrouchZOffsetBlendTime;                          // 0x31C4(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TargetNameplateCrouchZOffset;                             // 0x31C8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSVehicleState                                    VehicleState;                                             // 0x31CC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData115[0x3];                                      // 0x31CD(0x0003) MISSED OFFSET
	class AKSVehicle*                                  CurrentVehicle;                                           // 0x31D0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData116[0x10];                                     // 0x31D8(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVehicleStateChanged;                                    // 0x31E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDestructibleSpeedOverlap;                               // 0x31F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoDrawDebugLines;                                        // 0x3208(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData117[0x3];                                      // 0x3209(0x0003) MISSED OFFSET
	struct FName                                       MuzzleBone;                                               // 0x320C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LeftElbowBone;                                            // 0x3214(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LeftWristBone;                                            // 0x321C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       RightElbowBone;                                           // 0x3224(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       RightWristBone;                                           // 0x322C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HiddenArmScale;                                           // 0x3234(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShowWeaponWhenArmVisible;                                // 0x3238(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData118[0x3];                                      // 0x3239(0x0003) MISSED OFFSET
	float                                              MaxDistancePenetrationCheck;                              // 0x323C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSArmVisibilityType                               LeftArmVisibility;                                        // 0x3240(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSArmVisibilityType                               RightArmVisibility;                                       // 0x3241(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData119[0x2];                                      // 0x3242(0x0002) MISSED OFFSET
	struct FName                                       PelvisBone;                                               // 0x3244(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData120[0x4];                                      // 0x324C(0x0004) MISSED OFFSET
	TArray<class UKSApparelAsset*>                     DefaultApparelSetup;                                      // 0x3250(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FAppliedApparelKey, class UKSApparelAsset*> AppliedApparelMap;                                        // 0x3260(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FAppliedApparelKey>      SlotToApparelKeyMap;                                      // 0x32B0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSApparelAsset*>                     ApparelAssets;                                            // 0x3300(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNoApparel;                                               // 0x3310(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData121[0x7];                                      // 0x3311(0x0007) MISSED OFFSET
	TArray<TWeakObjectPtr<class UKSApparelAsset>>      LocalApparelAssets;                                       // 0x3318(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bApparelAssetMapDirty;                                    // 0x3328(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData122[0x7];                                      // 0x3329(0x0007) MISSED OFFSET
	struct FTimerHandle                                ApparelTimeoutHandle;                                     // 0x3330(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ApparelTimeoutTime;                                       // 0x3338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstApparelApplicationSuccess;                          // 0x333C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData123[0x63];                                     // 0x333D(0x0063) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNewApparelApplicationFinishedDel;                       // 0x33A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	bool                                               bApparelInstancesAreLoaded;                               // 0x33B0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData124[0xF];                                      // 0x33B1(0x000F) MISSED OFFSET
	int                                                ApparelLockCount;                                         // 0x33C0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bApparelDirtiedAndLocked;                                 // 0x33C4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSCharacterGender                          Gender;                                                   // 0x33C5(0x0002) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSCharacterGender                          LocalGender;                                              // 0x33C7(0x0002) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData125[0x7];                                      // 0x33C9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGenderChangedDel;                                       // 0x33D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData126[0x18];                                     // 0x33E0(0x0018) MISSED OFFSET
	class USkinObjectManagerComponent*                 SkinsManager;                                             // 0x33F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            DefaultBodyApparelSkinObject;                             // 0x3400(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       SkinTagContainer;                                         // 0x3408(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FDataTableInfo>                      DefaultApparelSkinTables;                                 // 0x3428(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData127[0x18];                                     // 0x3438(0x0018) MISSED OFFSET
	bool                                               bUseCameraProximityFading;                                // 0x3450(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData128[0x3];                                      // 0x3451(0x0003) MISSED OFFSET
	float                                              CameraFadeStartDistance;                                  // 0x3454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraFadeEndDistance;                                    // 0x3458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       FadeAlphaParamName;                                       // 0x345C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LastCameraProximityAlpha;                                 // 0x3464(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, class UKSFXCurveComponent*>     ActiveFXCurveComponents;                                  // 0x3468(0x0050) (CPF_ExportObject, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	EKSEmotion                                         Emotion;                                                  // 0x34B8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSEmotion                                         LocalEmotion;                                             // 0x34B9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSEmotion                                         LastEmotion;                                              // 0x34BA(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData129[0x1];                                      // 0x34BB(0x0001) MISSED OFFSET
	float                                              EmotionFloat;                                             // 0x34BC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEmotionChangedDel;                                      // 0x34C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AKSProp_Physical>             CurrentEmotePhysicsProp;                                  // 0x34D0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSAnimationAuditComponent*                  AnimationAuditComponent;                                  // 0x34D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ADSBlurMID;                                               // 0x34E0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TimeToRepairArmor;                                        // 0x34E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DurabilityASecond;                                        // 0x34EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRepairAllArmorAtOnce;                                    // 0x34F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData130[0x7];                                      // 0x34F1(0x0007) MISSED OFFSET
	struct FText                                       ArmorRepairProgressText;                                  // 0x34F8(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       ArmorRepairPromptText;                                    // 0x3510(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanRepairArmor;                                          // 0x3528(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRepairableArmorEquipped;                                 // 0x3529(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsRepairingArmor;                                        // 0x352A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData131[0x5];                                      // 0x352B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRepairableArmorEquippedDel;                             // 0x3530(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnArmorInteractAvailableDel;                              // 0x3540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               NudgingActors;                                            // 0x3550(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSNudgeComponent*                           NudgeComponent;                                           // 0x3560(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponPropManagerComponent*               WeaponPropManagerComponent;                               // 0x3568(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkelPropManagerComponent*                   SkinnableSkelPropManagerComponent;                        // 0x3570(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStaticPropManagerComponent*                 SkinnableStaticPropManagerComponent;                      // 0x3578(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x3580(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData132[0x70];                                     // 0x35D0(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacter");
		return ptr;
	}


	void ViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void ViewedPawnInstigatedHeadshot(const struct FCombatEventInfo& DamageInfo);
	void ViewedPawnInstigatedDamage(const struct FCombatEventInfo& DamageInfo);
	void VehicleStateChanged(EKSVehicleState CurrentVehicleState);
	void UpdateNavModification();
	void UpdateMantleHands(EKSPlayerHand Hand, bool bEnable);
	void UpdateHoveredInteractable();
	void UpdateAmmo(EAmmoType AmmoType, int AmmoDelta);
	void UpdateAimStatus();
	void UnSelectToRevive(class AActor* Reviver);
	void UnregisterFootstepOverride(const TScriptInterface<class UKSFootstepOverrideInterface>& ToRemove);
	void UnlockShoulderSwap(bool ForceFullUnlock);
	void UnhideZiplinePulley();
	void UnhideUplineDevice();
	void UnHideADSMaterials();
	void TryToStopRagdoll();
	void TryToStopAiming(bool IsInterrupt);
	void TryToAimOverShoulder(bool bSkipUpdate);
	void TryToAimDownSights(bool bSkipUpdate);
	void TryToAimAlternate(bool bSkipUpdate);
	void ToggleSprint();
	void ToggleScopeZoomIndexUp();
	void ToggleScopeZoomIndexLoop();
	void ToggleScopeZoomIndexDown();
	void ToggleCrouch();
	void ToggleCarry();
	void ThrowGrenadeReleased();
	void ThrowGrenadePressed();
	void TagForDownAssist(class APlayerState* Assistant, float Duration);
	void SwapWeapon(class AKSWeapon* NextWeapon, bool bForce);
	void SwapToSecondary();
	void SwapToPrimary();
	void SwapToPreviousWeaponWithLoadedClip(bool bForce);
	void SwapToPreviousWeaponWithAmmo(bool bForce);
	void SwapToPreviousWeapon(bool bForce);
	void SwapToNextWeaponWithLoadedClip(bool bForce);
	void SwapToNextWeaponWithAmmo(bool bForce);
	void SwapToNextWeapon(bool bForce);
	void SwapToNextGrenade(bool bForce);
	void SwapToMelee();
	void SwapToMacGuffin();
	void SwapSeatsTimerComplete();
	void SwapSeatsReleased();
	void SwapSeatsPressed();
	void SwapGrenade(class AKSWeapon* NextWeapon, bool bForce);
	void SwapActiveGrenade();
	void StopKSEffect(const struct FName& InFXID);
	void StopFire();
	bool StopAnimEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	void StopAimDownSights();
	void StopActiveHaul();
	void StartLockoutCamera();
	class UKSFXCurveComponent* StartKSSpecialEffect(const struct FKSSpecialEffect& Effect, float PlayRate, bool bRestart);
	void StartHacking();
	bool StartFire();
	void SprintImpulseTimelineProgress(float Value);
	bool ShouldWeaponAutoFire();
	void SetupChords();
	void SetSelfDestruct(bool InSelfDestruct);
	void SetPrimaryHeatSource(class UKSHeatSourceComponent* InHeatSource);
	void SetOnFire(float Duration);
	void SetNoFire();
	void SetIsAimDownSightsHeld(bool bInIsAimDownSightsHeld);
	void SetInteractionFacesRotation(bool FacesRotation);
	void SetInteractionCameraTransition(const struct FKSInteractableCameraTransition& CameraTransition);
	void SetGodMode(bool InGodMode);
	void SetActorTargetingMeForRevive(class AActor* Reviver);
	void SetActiveCameraSimple(const struct FName& Tag, float InBlendTime);
	void SetActiveCamera(const struct FName& Tag, const struct FViewTargetTransitionParams& InBlendParams);
	void ServerTryToCarry(class AActor* CarryTarget);
	void ServerSwapToNextGrenade(bool bForce);
	void ServerStopGiveUpTimer();
	void ServerStopCarryChecked(class AActor* CarryTarget);
	void ServerStopCarry();
	void ServerStartGiveUpTimer();
	void ServerSetActiveWeaponToNone(int InIndex);
	void ServerRequestActivateAbilityRelease(int Ability, bool bIsGameModeAbility);
	void ServerRequestActivateAbility(int Ability, bool bIsGameModeAbility);
	void ServerGetInNextEmptySeat();
	void ServerGetInDriverSeat();
	void ServerExitVehicle();
	void ServerDropWeapon(class AKSWeapon* InWeapon);
	void ServerChangeShoulderCamera(ECameraShoulder InShoulder, bool bAuto, bool bUseAutoTiming);
	void ServerAbilityWeaponPrepareSwapTo(class AKSWeapon* Weapon, bool bIsGameModeAbility);
	void SelectToRevive(class AActor* Reviver);
	void RotateToFace(const struct FVector& Location);
	void ReviveOverlapStopped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void ReverseKSEffect(const struct FName& InFXID);
	void ResetKSEffectTime(const struct FName& InFXID);
	void ReportFootstepNoise(float Speed);
	void ReportFireNoise(float Range);
	void ReportDamageEvent(class AActor* Damager, float Damage, const struct FVector& OriginLocation, const struct FVector& HitLocation);
	void ReportDamagedNoise(float Damage);
	void ReplicateSpecialAmmoEvent(EAmmoType AmmoType, int AmmoDelta, const struct FName& EventName);
	bool RemoveWeaponFromInventory(class AKSWeapon* InWeapon);
	void RemoveSkinTag(const struct FGameplayTag& InSkinTag);
	void RemovePhysicalEmoteProp(class AKSProp_Physical* InProp);
	void RemoveParticleEffects(TArray<class UParticleSystemComponent*> ParticleSystems);
	void RemoveOutOfRangePickup(class AActor* OtherActor);
	bool RemoveModInstance(class UKSPlayerModInstance* ModInst, bool RemoveAll);
	bool RemoveMod(class UKSPlayerMod* Mod, bool RemoveAll);
	void RemoveEffectCurve(const struct FName& InFXID);
	void RemoveBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject);
	void RemoveBackpack();
	void RemoveActionRestriction(int ID);
	void RemotePlayerPickupItem(class UClass* ItemDropClass, class UKSItem* Item);
	void RemotePlayerInteractStart(float InteractDuration, class AActor* InteractTarget);
	void RemotePlayerInteractEnd(EKSInteractionResult Result, const struct FVector& InteractionLocation, class AActor* OldInteractTarget);
	void RemoteClientNotifyLand(const struct FHitResult& LandingHit);
	void Reload();
	void ReleaseGiveUp();
	void ReleaseCrouch();
	void ReleaseAllActiveInputs();
	void ReleaseActiveInputsOfType(EInputReleaseType InputReleaseType);
	void ReleaseActiveInputs(TArray<struct FName> InputsToRelease);
	void RegisterFootstepOverride(const TScriptInterface<class UKSFootstepOverrideInterface>& ToAdd);
	void ReevaluateNoFire(class UPrimitiveComponent* LeftOverlapper);
	void Reequip(const struct FGameplayTagQuery& ReequipWeaponTypesQuery, bool bDropLeftovers);
	void QuickMeleeHoldTimerComplete();
	bool QueryModsForAnimEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInst);
	void PrimaryWeaponFOVChanged(float NewFOV);
	void PrimarySprayDecalExpired(class UPoolableDecalComponent* InDecalComponent);
	void PressGiveUp();
	void PlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayHitFromRadialDamage(const struct FDamageEffect& Effect);
	void PlayHitFromPointDamage(const struct FDamageEffect& Effect);
	void PlayActionCameraSequence(const struct FName& SequenceName);
	void PersistentPlayerDataChanged();
	void OutOfBoundsWarningEnd();
	void OutOfBoundsOverlapEnd();
	void OutOfBoundsOverlapBegin(float WarningLength);
	void OnWeaponSwapSuccessful(class AKSWeapon* FromWeapon, class AKSWeapon* ToWeapon);
	void OnWeaponSwapFailed(class AKSWeapon* FromWeapon, class AKSWeapon* ToWeapon);
	void OnUnhovered(float ExtraTime);
	void OnStopAimDownSightsCheckpoint();
	void OnStartAimDownSightsCheckpoint();
	void OnReviveStart(class AKSCharacter* Reviver, float ReviveTime, bool Remote);
	void OnReviveInterrupt(class AKSCharacter* Reviver);
	void OnReviveComplete(class AKSCharacter* Reviver);
	void OnRep_VehicleState();
	void OnRep_StartingActiveWeaponEquipPoint();
	void OnRep_SelfDestruct();
	void OnRep_Scrambled();
	void OnRep_ReviveInfo();
	void OnRep_OutOfBoundsInfo();
	void OnRep_OnFire();
	void OnRep_ObjectiveState();
	void OnRep_IsInInteraction();
	void OnRep_Health();
	void OnRep_HaulingInfo();
	void OnRep_GiveUpTimer();
	void OnRep_Gender();
	void OnRep_EMPLockout();
	void OnRep_Emotion();
	void OnRep_Downed();
	void OnRep_CurrentBehaviorState();
	void OnRep_CarriedInfo();
	void OnRep_CameraShoulder();
	void OnRep_CameraPivotTargetActor();
	void OnRep_bRepairableArmorEquipped();
	void OnRep_Bot();
	void OnRep_bCanRepairArmor();
	void OnRep_ApparelAssets();
	void OnRep_AllowGiveUp();
	void OnRep_ActiveEquipmentId();
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void OnImmuneStart();
	void OnImmuneEnd();
	void OnHovered();
	void OnGrenadeClassLoaded(class UKSWeaponAsset_Grenade* pGrenadeWeaponAsset);
	void OnGenderChanged();
	void OnGadgetSwapped();
	void OnFlashEffectStarted();
	void OnFlashEffectEnded();
	void OnFlashBangHit(EFlashBangIntensity Intensity);
	void OnFieldOfViewModChange();
	void OnEndOutOfBounds();
	void OnEmotePropEndPlay(class AActor* InActor, TEnumAsByte<EEndPlayReason> Reason);
	void OnDeathDestroy();
	void OnDeathCleanup();
	void OnBeginOutOfBounds();
	void OnArmorRegenerationStart(float RegenerationTime);
	void OnArmorRegenerationInterrupt();
	void OnArmorRegenerationComplete();
	void OnArmorInteractStart(float InteractTime);
	void OnArmorInteractInterrupt();
	void OnArmorInteractComplete();
	void OnApparelTimeoutExpire();
	void NoseDiveCameraTransition(bool bEnterNoseDive, float AnimLength);
	void NativeJumpToSwingMontage(const struct FString& SwingMontageSectionName);
	void MoveRight(float Value);
	void MoveForward(float Value);
	void MeleeReleased();
	void MeleePressed();
	void MedPackReleased();
	void MedPackPressed();
	void LogShotgunHitData(const struct FShotgunHitData& HitData);
	void LockShoulderSwap();
	void KillIfDowned();
	void JumpToSwingMontage(const struct FString& SwingMontageSectionName);
	bool IsZipLining();
	bool IsUsingEmoteCamera();
	bool IsShoulderSwapLocked();
	bool IsRevivingAnotherPlayer(bool bCountRemoteRevives, class AKSCharacter** OutReviveTarget);
	bool IsRepairableArmorEquipped();
	bool IsPerformingAnInteraction();
	bool IsOutOfRangePickup(class AActor* OtherActor);
	bool IsOutOfBounds(float* RemainingTime);
	bool IsOnFire();
	bool IsLocallyHovered();
	bool IsLobby();
	bool IsInVehicle();
	bool IsInRagdoll();
	bool IsInLockoutCameraCooldown();
	bool IsInLockoutCamera();
	bool IsHaulingRightNow();
	bool IsDowned();
	bool IsCrosshairHidden();
	bool IsBlinded();
	bool IsBeingRevived(class AKSCharacter** Reviver, float* Progress);
	bool IsAnyEquippedWeaponTakingAction(class AKSWeapon* IgnoredWeapon);
	bool IsAimLocked();
	bool IsActiveWeapon(class AKSWeapon* InWeapon);
	void InterruptNonCharacterRevive();
	void InterruptAimDownSightsToggle(bool bReturnWhenComplete);
	void InterruptAimAlternateToggle(bool bReturnWhenComplete);
	void InstantRevive(class AKSCharacter* Reviver);
	void InputStopSprint();
	void InputStopFire();
	void InputStartSprint();
	void InputStartFire();
	bool InitRagdoll();
	void HideZiplinePulley();
	void HideUplineDevice();
	void HideADSMaterials();
	bool HasModAny(TArray<class UKSPlayerMod*> TestPlayerMods);
	bool HasMod(class UKSPlayerMod* TestPlayerMod);
	bool HasEquipPoint(const struct FGameplayTag& EquipPoint);
	void HandleDownEvent(const struct FCombatEventInfo& EventInfo, int ExpBonus);
	void GiveUpTimerTick(float Seconds);
	void GiveUpTimerComplete();
	void GiveUpTimerActive(bool bActive);
	bool GiveModInstance(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique, class UKSPlayerModInstance** Instance);
	bool GiveMod(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique);
	class AKSWeapon* GetWeaponByAsset(class UKSWeaponAsset* InAsset);
	class AKSWeapon* GetWeaponAtEquipPoint(const struct FGameplayTag& EquipPoint);
	class UKSVOComponent* GetVOComponent();
	struct FGameplayTagContainer GetValidWeaponPoints();
	struct FGameplayTagContainer GetUsedEquipPoints();
	bool GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties);
	struct FName GetSeatAimCameraTag();
	class AKSCharacter* GetReviver();
	struct FName GetReviveeOverrideMontage();
	class UKSHeatSourceComponent* GetPrimaryHeatSource();
	class USphereComponent* GetPickupSphere();
	class AKSWeapon* GetPendingMainWeapon();
	void GetOverrideByLocation(const struct FVector& WorldLocation, bool* outShouldOverride, struct FName* outOverrideName);
	class UKSInteractionType* GetMostRecentInteractionType();
	bool GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods);
	float GetMinimapZoomScale();
	float GetMaxHealthBonus();
	float GetMaxFlashBangIntensity();
	EKSArmVisibilityType GetLeftArmVisibility();
	bool GetIsInInteraction();
	class AActor* GetInteractionTarget();
	void GetHitPawnEffectOverride(class UParticleSystem** ParticleSystem);
	void GetHitHeadAudioEventOverride(class UAkAudioEvent** SoundEffect);
	void GetHitByAudioEventOverride(class UAkAudioEvent** SoundEffect);
	void GetHitBodyAudioEventOverride(class UAkAudioEvent** SoundEffect);
	float GetGiveUpTime();
	struct FKSCharacterGender GetGender();
	bool GetGameModeMods(TArray<class UKSModInst_Activated*>* OutMods);
	class UKSFXCurveComponent* GetFXCurveComponentByFXID(const struct FName& InFXID);
	float GetFlashBangIntensity();
	bool GetFieldOfViewFromMods(float* OutFov);
	class UKSEquipmentManagerComponent* GetEquipmentManagerComponent();
	class AKSEquipment* GetEquipmentAtEquipPoint(const struct FGameplayTag& EquipPoint);
	void GetDownedTransitionMontage(class UAnimMontage** OutAnimMontage);
	float GetDownedImmuneTime();
	ECameraShoulder GetDesiredCameraShoulder();
	TArray<struct FKSDamageHistory> GetDamageHistoryForController(class AController* DamageInstigator);
	class UKSVehicleSeatComponent* GetCurrentVehicleSeat();
	class AKSVehicle* GetCurrentVehicle();
	void GetCurrentReviveDuration(float* Duration, float* RemainingTime);
	struct FName GetCurrentCharacterEmotionAsName();
	ECameraShoulder GetCurrentCameraShoulder();
	int GetCurrentAbilityIndex();
	struct FGameplayTagContainer GetCompatibleEquipPoints(class UKSWeaponAsset* InWeaponAsset);
	class UKSAkComponent* GetCharacterAkComponent();
	TScriptInterface<class UKSCarriedInterface> GetCarriedObject();
	float GetCameraShoulderSwapProgress();
	class UMultiSkinObject* GetBodyApparelSkinObject();
	ECharacterBehaviorState GetBehaviorState();
	float GetBasePickupRange();
	void GetAvailableEquipPoints(struct FGameplayTagContainer* OutEquipPoints);
	float GetArmorDurability();
	class UMultiSkinObject* GetApparelSkinObjectByName(const struct FName& InSkinObjectName);
	int GetAmmoCount(EAmmoType AmmoType);
	void GetAllEquippedWeapons(TArray<class AKSWeapon*>* OutWeapons);
	float GetAimTransitionTime();
	class UKSWeaponComponent* GetActiveWeaponComponentForSubType(const struct FName& SubType);
	class UKSWeaponComponent* GetActiveWeaponComponentAtIndex(int Index);
	class UKSWeaponComponent* GetActiveWeaponComponent();
	class AKSWeapon* GetActiveWeapon();
	class AKSWeapon* GetActiveTemporary();
	bool GetActiveMods(TArray<class UKSPlayerMod*>* OutMods);
	class AKSWeapon* GetActiveMelee();
	class AKSWeapon* GetActiveMedPack();
	class AKSWeapon* GetActiveMainWeapon();
	class UKSWeaponAnimInstance* GetActiveKSWeaponAnimInst(int Index);
	class AKSWeapon* GetActiveGrenade();
	struct FGameplayTagContainer GetActiveGadgetPoints();
	struct FGameplayTagContainer GetActiveEquipPoints();
	struct FName GetActiveCameraTag();
	class UCameraComponent* GetActiveCamera();
	class AKSWeapon_Aimed* GetActiveAimedWeapon();
	bool GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods);
	class UKSModInst_Activated* GetAbilityMovementMod();
	void GamepadToggleSprint();
	void GamepadSwapPressed();
	void GamepadSwapMeleePressed();
	void GamepadSwapMacGuffinPressed();
	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
	void ForceToShoulder(ECameraShoulder ForcedShoulder);
	void ForceMainCameraBoomUpdate();
	void FinishHacking();
	int FindTierOfEquipPoint(const struct FGameplayTag& EquipPoint);
	TArray<int> FindAllTiersOfEquipPoint(const struct FGameplayTag& EquipPoint);
	void ExtinguishFire();
	void ExitVehiclePressed();
	void EventSetupCamerasForSpectator(bool Enabled);
	void EvaluateCameraProximityFade();
	void EndOutOfBounds();
	void EndLockoutCamera();
	void DrownDamageTick();
	void DropButtonReleased();
	void DropButtonPressed();
	void DropActiveWeapon();
	void DropActiveGrenade();
	void DownPlayer(class AController* EventInstigator, class UClass* DamageType, EHitLocationType HitLocationType, class AActor* DamageCauser, float DamageDealt);
	void DoSetOnFire();
	void DoExtinguishFire();
	bool DoesTransitionSupportFocalPoint(const struct FName& ActiveCamera, const struct FName& PendingCamera);
	void DetachViewTargetOnlyBPComponents();
	void DestructibleSpeedGateOverlappedEvent(const struct FVector& BreakingLocation, const struct FVector& BreakingDirection, const struct FVector& BreakingNormal);
	void DamageRecordReset();
	void CreditEliminationAssist(class APlayerState* Assistant);
	void CreditDownAssist(class APlayerState* Assistant);
	void ContextualPingRepeat();
	void ContextualPingPressed();
	void ContextualPingHoldRelease();
	void ContextualPingHold();
	void ContextualButtonReleased();
	void ContextualButtonPressed();
	void ContextualButtonHeldReleased();
	void ContextualButtonHeld();
	void CompleteNonCharacterRevive();
	void CloneCharacterMesh(class USkeletalMeshComponent* ClonedMesh);
	void ClientSwapTo(class AKSWeapon* InWeapon, bool bForce);
	void ClientSwapFrom(class AKSWeapon* InWeapon, bool bForce);
	void ClientStopInteractAcknowledge(unsigned char InInteractRequestId, EKSInteractionResult Result);
	void ClientNotifyStuck();
	void ClientInteractAcknowledge(unsigned char InInteractRequestId, bool bFailed, float InteractDuration, bool bRequiresManualInterrupt);
	void ClientBroadcastModEvent(const struct FName& ModEvent);
	void ClientAbilityActivated(int AbilityIndex, bool bIsGameModeAbility);
	void ClearMaxHealthBonus();
	void ClearAllApparel();
	void ClearActorTargetingMeForRevive();
	void ChangeShoulderCamera(ECameraShoulder InShoulder, bool bAuto);
	bool ChangeDifficulty(class UKSBTDifficulty* Difficulty);
	bool CanInteractWithTest(class AActor* InInteractionTarget, bool* bPress, bool* bHold);
	bool CanInteractWith(class AActor* InInteractionTarget);
	bool CanGiveUp();
	bool CanFireRightNow(bool bAltFire, bool bIgnoreNoFire, EKSAbilityUsageFailureType* OutAbilityFailureType);
	bool CanFireGrenadeNow(bool bBroadcastFeedback);
	void CancelBleed();
	bool CanCarryDownedAllies();
	bool CanBeRevivedBy(class AKSCharacter* Other, bool bIgnoreOverlap, class AKSWeapon* IgnoredWeapon);
	bool CanAimOverShoulderNow();
	bool CanAimDownSightsNow();
	bool CanAimAlternateNow();
	bool CanActiveWeaponCanToggleOutOfAimDownSightsNow();
	bool CanActiveWeaponCanToggleIntoAimDownSightsNow();
	bool CanActivateAbilityNow(class UKSModInst_Activated* Mod, bool bBroadcastFeedback);
	void CacheLatestHit(float Damage, class UClass* DamageTypeClass, float DamageImpulse, const struct FVector& RelativeImpactLocation, const struct FName& BoneName, class AActor* DamageCauser);
	void BroadcastWeaponComponentStateChange(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastWeaponComponentPostReload(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFiredFull(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FFullFireRepData& Data);
	void BroadcastWeaponComponentFiredAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFiredAimAndAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim, unsigned char AmmoInClip);
	void BroadcastWeaponComponentFired(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim);
	void BroadcastWeaponComponentEmptyFire(uint32_t BroadcastId, uint16_t nEquipmentId);
	void BroadcastWeaponComponentCurrentFireRateStateHasChanged(uint16_t nEquipmentId, EVariableFireRateState State, float Timestamp, float PostFireTime);
	void BroadcastWeaponComponentAmmoChange(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastTakeRadialDamage(const struct FDamageEffect& Effect);
	void BroadcastTakePointDamage(const struct FDamageEffect& Effect);
	void BroadcastSpecialAmmoEvent(EAmmoType AmmoType, int AmmoDelta, const struct FName& EventName);
	void BroadcastSkydiveSkipped();
	void BroadcastReviveStart(class AKSCharacter* Reviver, float ReviveTime, bool Remote);
	void BroadcastReviveInterrupt(class AKSCharacter* Reviver);
	void BroadcastReviveComplete(class AKSCharacter* Reviver);
	void BroadcastReliableWeaponComponentStateChange(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliableWeaponComponentPostReload(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFiredFull(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FFullFireRepData& Data);
	void BroadcastReliableWeaponComponentFiredAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFiredAimAndAmmo(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim, unsigned char AmmoInClip);
	void BroadcastReliableWeaponComponentFired(uint32_t BroadcastId, uint16_t nEquipmentId, const struct FAimData& Aim);
	void BroadcastReliableWeaponComponentEmptyFire(uint32_t BroadcastId, uint16_t nEquipmentId);
	void BroadcastReliableWeaponComponentAmmoChange(uint32_t BroadcastId, uint16_t nEquipmentId, unsigned char AmmoInClip);
	void BroadcastModEvent(const struct FName& ModEvent);
	void BroadcastGrenadeExplodeInHand(class UKSWeaponAsset_Grenade* pGrenadeWeaponAsset);
	void BroadcastGadgetResupplied();
	void BroadcastFlashBangHit(const struct FKSFlashBangRecord& Record);
	void BroadcastArmorRegenerationInterrupt();
	void BroadcastArmorRegenerationComplete();
	void BroadcastArmorInteractStart(float InteractTime);
	void BroadcastArmorInteractInterrupt();
	void BroadcastArmorInteractComplete(float RegenerationTime);
	bool BlueprintHandleDeath();
	void BeginOutOfBounds(float WarningLength);
	void BeginNonCharacterRevive(class AKSPlayerState* ReviveInstigator, float Duration, const struct FName& OverrideReviveeMontage);
	void BeginInstantRevive(class AKSCharacter* Reviver, float Duration, bool Guaranteed);
	void AutoSprintTimerComplete();
	bool AutoArmorRepair(class UKSArmorAsset* AssetToRepair);
	void AttachViewTargetOnlyBPComponents();
	void ApplyMaxHealthBonus(float Bonus, class AController* EventInstigator, class AActor* EventCauser);
	void ApplyLastHitImpulse(bool UpdateTargetRotation, bool AffectCapsule);
	void ApplyFlinchFromPointDamage(float Damage, class UClass* DamageTypeClass, const struct FVector& RelativeImpactLocation, const struct FVector& RelativeImpactNormal, const struct FName& BoneName, class AActor* DamageCauser);
	void ApplyCameraProximityFade(float Alpha);
	bool ApplyApparelAsset(class UKSApparelAsset* ApparelAsset);
	bool AnyActivatableModsActive();
	void AnnounceCharacterSelected(class UKSJobItem* pJobSelected);
	void AnimAuditStop();
	void AnimAuditStart();
	void AnimAuditResume();
	void AnimAuditClear();
	void AimDownSightsToggle();
	void AimDownSightsReleased();
	void AimDownSightsPressed();
	void AddSkinTag(const struct FGameplayTag& InSkinTag);
	void AddPhysicalEmoteProp(class AKSProp_Physical* InProp);
	TArray<class UParticleSystemComponent*> AddParticleEffects(TArray<struct FKSParticleSystemAttachment> ParticleSystemAttachments);
	void AddOutOfRangePickup(class AActor* OtherActor, float PickupDistance);
	void AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);
	int AddActionRestrictionForDuration(const struct FKSActionRestrictor& ActionRestrictor, float Duration);
	int AddActionRestriction(const struct FKSActionRestrictor& ActionRestrictor);
	bool ActivatableModAtIndexActive(int AbilityIndex, bool bIsGameModeAbility);
	void AbortFireAllWeapons();
	void AbilityChargeUpdated(class UKSPlayerMod_Activated* ChargingMod);
};


// Class Killstreak.KSCharacterAnimInst
// 0x0DB0 (0x10A0 - 0x02F0)
class UKSCharacterAnimInst : public UKSAnimInstance
{
public:
	bool                                               bEmoteMontagePlayingGlobal;                               // 0x02F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEmoteMontagePlayingLocal;                                // 0x02F1(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x02F2(0x0002) MISSED OFFSET
	float                                              EmoteMontageGlobalWeight;                                 // 0x02F4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EmoteMontageLocalWeight;                                  // 0x02F8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       EmoteSlotName;                                            // 0x02FC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                EmotePropRandomizerStoredInt;                             // 0x0304(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEmotePropRandomizerStaticSpawned;                        // 0x0308(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEmotePropRandomizerSkeletalSpawned;                      // 0x0309(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x030A(0x0002) MISSED OFFSET
	float                                              EmoteFastBlendMultiplier;                                 // 0x030C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              EmoteSlowBlendMultiplier;                                 // 0x0310(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSprayIsPlaying;                                          // 0x0314(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	int                                                CurrentMeshLOD;                                           // 0x0318(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Speed;                                                    // 0x031C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedXY;                                                  // 0x0320(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedZ;                                                   // 0x0324(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Forward;                                                  // 0x0328(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Right;                                                    // 0x032C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyLean;                                                 // 0x0330(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    BodyLeanRotator;                                          // 0x0334(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    HeadLeanRotator;                                          // 0x0340(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bEnableAnimMirroring;                                     // 0x034C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x034D(0x0003) MISSED OFFSET
	unsigned char                                      bCanTransitionDirections : 1;                             // 0x0350(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	bool                                               bEnableMovementImprovements;                              // 0x0354(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableDynamicLobbyPose;                                  // 0x0355(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0356(0x0002) MISSED OFFSET
	float                                              SprintImpulseAmount;                                      // 0x0358(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector2D                                   SprintLeftRightBodyLeanRange;                             // 0x035C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForwardRotate;                                            // 0x0364(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightRotate;                                              // 0x0368(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BackRotate;                                               // 0x036C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftRotate;                                               // 0x0370(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForwardRotatePostMirror;                                  // 0x0374(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightRotatePostMirror;                                    // 0x0378(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BackRotatePostMirror;                                     // 0x037C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftRotatePostMirror;                                     // 0x0380(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ForwardCrouchPelvicVector;                                // 0x0384(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ForwardCrouchFeetIKVector;                                // 0x0390(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BackCrouchPelvicVector;                                   // 0x039C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BackCrouchFeetIKVector;                                   // 0x03A8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LeftCrouchPelvicVector;                                   // 0x03B4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LeftCrouchFeetIKVector;                                   // 0x03C0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RightCrouchPelvicVector;                                  // 0x03CC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RightCrouchFeetIKVector;                                  // 0x03D8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForwardCrouchPelvicOffset;                                // 0x03E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForwardCrouchFeetIKOffset;                                // 0x03E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BackCrouchPelvicOffset;                                   // 0x03EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BackCrouchFeetIKOffset;                                   // 0x03F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftCrouchPelvicOffset;                                   // 0x03F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftCrouchFeetIKOffset;                                   // 0x03F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightCrouchPelvicOffset;                                  // 0x03FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightCrouchFeetIKOffset;                                  // 0x0400(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentAccelVectorLength;                                 // 0x0404(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSlowWalkSpeed;                                         // 0x0408(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxWalkSpeed;                                             // 0x040C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxADSWalkSpeed;                                          // 0x0410(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSprintSpeed;                                           // 0x0414(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxCrouchSpeed;                                           // 0x0418(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxADSCrouchSpeed;                                        // 0x041C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bShouldTransitionADSCrouch : 1;                           // 0x0420(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              CurSpeedFraction;                                         // 0x0424(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurMaxSpeed;                                              // 0x0428(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurSpeedScaling;                                          // 0x042C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoCheckFirstStepCurve;                                   // 0x0430(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0431(0x0003) MISSED OFFSET
	float                                              FirstStepTransitionAlpha;                                 // 0x0434(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedWarpingAlpha;                                        // 0x0438(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteMovementPitch;                                   // 0x043C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteMovementYaw;                                     // 0x0440(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteMovementForward;                                 // 0x0444(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteMovementLateral;                                 // 0x0448(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSkydiveTurnOverridesStrafe;                              // 0x044C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsNoseDiving;                                            // 0x044D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x2];                                       // 0x044E(0x0002) MISSED OFFSET
	float                                              ParachuteYawInterpSpeed;                                  // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachutePitchInterpSpeed;                                // 0x0454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteForwardInterpSpeed;                              // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteLateralInterpSpeed;                              // 0x045C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteForwardThreshold;                                // 0x0460(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bParachuteReady;                                          // 0x0464(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	float                                              ParachuteYawRotationFactor;                               // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastFreeFallMovementVector;                               // 0x046C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringRollState;                                       // 0x0478(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringPitchState;                                      // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        HitSpringYawState;                                        // 0x0488(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationAmountRoll;                                    // 0x0490(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationAmountPitch;                                   // 0x0494(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationAmountYaw;                                     // 0x0498(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationPitchMax;                                      // 0x049C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationRollMax;                                       // 0x04A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitRotationYawMax;                                        // 0x04A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     PelvisHitOffset;                                          // 0x04A8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SpineHitOffset;                                           // 0x04B4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    NeckHitOffset;                                            // 0x04C0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ArmHitOffset;                                             // 0x04CC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FHitReaction>                        QueuedHits;                                               // 0x04D8(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                HitReactionTimeScale;                                     // 0x04E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 HitReactionDamageScale;                                   // 0x04F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSHitReactionBlend;                                      // 0x04F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AOSHitReactionBlend;                                      // 0x04FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HipfireHitReactionBlend;                                  // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SimClientHitReactionBlend;                                // 0x0504(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentHitReactionBlend;                                  // 0x0508(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpineFireRotationLimit;                                   // 0x050C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NeckFireRotationLimit;                                    // 0x0510(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ClavicleFireRotationLimit;                                // 0x0514(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationPitchLimit;                           // 0x0518(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationYawLimit;                             // 0x051C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForearmFireRotationLimit;                                 // 0x0520(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        SpineFireSpringState;                                     // 0x0524(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        NeckFireSpringState;                                      // 0x052C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        ClavicleFireSpringState;                                  // 0x0534(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        UpperArmFireSpringState;                                  // 0x053C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        UpperArmFireYawSpringState;                               // 0x0544(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FFloatHitSpringState                        ForearmFireSpringState;                                   // 0x054C(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              SpineFireRotationAmountPitch;                             // 0x0554(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NeckFireRotationAmountPitch;                              // 0x0558(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ClavicleFireRotationAmountYaw;                            // 0x055C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationAmountPitch;                          // 0x0560(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpperArmFireRotationAmountYaw;                            // 0x0564(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ForarmFireRotationAmountPitch;                            // 0x0568(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SpineFireOffset;                                          // 0x056C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    NeckFireOffset;                                           // 0x0578(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ClavicleFireOffset;                                       // 0x0584(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    UpperArmFireOffset;                                       // 0x0590(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ForearmFireOffset;                                        // 0x059C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponFireAlpha;                                          // 0x05A8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponAdditiveAlpha;                                      // 0x05AC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRecoilProfile                              CurrentRecoilProfile;                                     // 0x05B0(0x01EC) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                FireImpulseCounter;                                       // 0x079C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsRecoiling;                                             // 0x07A0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBypassRecoiling;                                         // 0x07A1(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x6];                                       // 0x07A2(0x0006) MISSED OFFSET
	TMap<struct FName, class UKSCharacterAnimInst*>    SubAnimInstances;                                         // 0x07A8(0x0050) (CPF_BlueprintVisible, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanSwitchStartAnim;                                      // 0x07F8(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTriggerCustomPivot;                                      // 0x07F9(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActionDisablesLeftHandIKAlpha;                           // 0x07FA(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActionDisablesRightHandIKAlpha;                          // 0x07FB(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActionDisablesLeftHandGripOnly;                          // 0x07FC(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bActionDisablesRightHandGripOnly;                         // 0x07FD(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceDisableLHIK;                                        // 0x07FE(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceDisableRHIK;                                        // 0x07FF(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ADSRollValue;                                             // 0x0800(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     ADSBumpValue;                                             // 0x0804(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsNonComOffset;                                       // 0x0810(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsWeaponNonComOffset;                                    // 0x0811(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkinUseNonComOffset;                                     // 0x0812(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x1];                                       // 0x0813(0x0001) MISSED OFFSET
	float                                              EngHeadAdditiveAlpha;                                     // 0x0814(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTestGadgetAdditive;                                      // 0x0818(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               GadgetStartedRetrieve;                                    // 0x0819(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               GadgetFinishedRetrieve;                                   // 0x081A(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               GadgetStartedThrow;                                       // 0x081B(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               GadgetFinishedThrow;                                      // 0x081C(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x3];                                       // 0x081D(0x0003) MISSED OFFSET
	float                                              LeftHandIKAlpha;                                          // 0x0820(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftHandIKAlphaTarget;                                    // 0x0824(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftHandIKBlendSpeed;                                     // 0x0828(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightHandIKAlpha;                                         // 0x082C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightHandIKAlphaTarget;                                   // 0x0830(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightHandIKBlendSpeed;                                    // 0x0834(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlowIKBlendSpeed;                                         // 0x0838(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MediumIKBlendSpeed;                                       // 0x083C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FastIKBlendSpeed;                                         // 0x0840(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UplineIKAlpha;                                            // 0x0844(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UplineIKAlphaTarget;                                      // 0x0848(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NextLeftHandIKForceRequestId;                             // 0x084C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLeftHandIKForceOffFromRequests;                          // 0x0850(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0851(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData14[0x50];                                      // 0x0851(0x0050) UNKNOWN PROPERTY: LeftHandIkForceOffRequests
	bool                                               bLeftHandIKOffFromMainInstNotifyStates;                   // 0x08A8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x57];                                      // 0x08A9(0x0057) MISSED OFFSET
	float                                              FootIKAlpha;                                              // 0x0900(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FootIKAlphaTarget;                                        // 0x0904(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBeginZipline;                                           // 0x0908(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEndZipline;                                             // 0x0918(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ZiplineRootOffset;                                        // 0x0928(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AppliedADSRootTranslation;                                // 0x0934(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     DefaultADSRootTranslation;                                // 0x0940(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ForceZiplineMontage;                                      // 0x094C(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ApplyAimstoZiplineMontage;                                // 0x094D(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ZiplineMontageLHIKOverride;                               // 0x094E(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x1];                                       // 0x094F(0x0001) MISSED OFFSET
	float                                              ZiplineMontageLHIKAlpha;                                  // 0x0950(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ActionPreventsZiplineIntro;                               // 0x0954(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ForceZiplineLoop;                                         // 0x0955(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x2];                                       // 0x0956(0x0002) MISSED OFFSET
	struct FVector2D                                   ForwardRotateInputRange;                                  // 0x0958(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   ForwardRotateOutputRange;                                 // 0x0960(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   RightRotateInputRange;                                    // 0x0968(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   RightRotateOutputRange;                                   // 0x0970(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSMovementDirection                               MovementDirection;                                        // 0x0978(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSMovementDirection                               LocomotionStartDirection;                                 // 0x0979(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSMovementDirection                               LocomotionStopDirection;                                  // 0x097A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSMovementDirection                               LocomotionPivotDirection;                                 // 0x097B(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementDirectionRotate;                                  // 0x097C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MovementDirectionRotateOnStartOrStop;                     // 0x0980(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DirectionBlendSpeed;                                      // 0x0984(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0988(0x0004) MISSED OFFSET
	float                                              DirectionChangedBlendSpeed;                               // 0x098C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseLimitedMovement;                                      // 0x0990(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEngUseLimitedMovement;                                   // 0x0991(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bComUseLimitedMovement;                                   // 0x0992(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNonComUseLimitedMovement;                                // 0x0993(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZeroVelocity : 1;                                        // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZeroAcceleration : 1;                                    // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bJumping : 1;                                             // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bWasJumping : 1;                                          // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDisableUpperBodyLands : 1;                               // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bFalling : 1;                                             // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bInFreeFall : 1;                                          // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bInWingSuit : 1;                                          // 0x0994(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bReadyForFreeFall : 1;                                    // 0x0995(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bVaulting : 1;                                            // 0x0995(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsMantling : 1;                                          // 0x0995(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bMantleIsVault : 1;                                       // 0x0995(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCanInterruptMantle : 1;                                  // 0x0995(0x0001) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x2];                                       // 0x0996(0x0002) MISSED OFFSET
	float                                              TotalVaultDuration;                                       // 0x0998(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x4];                                       // 0x099C(0x0004) MISSED OFFSET
	class UAnimSequence*                               CurrentMantleSequence;                                    // 0x09A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FMantleConfig                               CurrentMantleConfig;                                      // 0x09A8(0x00A8) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              VaultStartTime;                                           // 0x0A50(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PreVaultWorldHeight;                                      // 0x0A54(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentVaultTime;                                         // 0x0A58(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0A5C(0x0004) MISSED OFFSET
	struct FInterpCurveFloat                           VaultTimeScaleCurve;                                      // 0x0A60(0x0018) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           VaultScaledVertCurve;                                     // 0x0A78(0x0018) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     MantleGrabLocation;                                       // 0x0A90(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MantleDistanceToTop;                                      // 0x0A9C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     MantleTowardsWallDir;                                     // 0x0AA0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMantleIKLeftHand;                                        // 0x0AAC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bMantleIKRightHand;                                       // 0x0AAD(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x2];                                       // 0x0AAE(0x0002) MISSED OFFSET
	float                                              MantleIKLeftHandAlpha;                                    // 0x0AB0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MantleIKRightHandAlpha;                                   // 0x0AB4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     MantleIKLeftHandLocation;                                 // 0x0AB8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     MantleIKRightHandLocation;                                // 0x0AC4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDodgeRolling : 1;                                        // 0x0AD0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0AD1(0x0003) MISSED OFFSET
	float                                              DodgeRollDuration;                                        // 0x0AD4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsInPowerSlide : 1;                                      // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAbilityMovement : 1;                                     // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZipLining : 1;                                           // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineBracing : 1;                                      // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineEnding : 1;                                       // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineIsUpline : 1;                                     // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bZipLineIntro : 1;                                        // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bStunned : 1;                                             // 0x0AD8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsBlinded : 1;                                           // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bHardLand : 1;                                            // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCrouching : 1;                                           // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bWantsToCrouch : 1;                                       // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bWasCrouchedBeforeRoll : 1;                               // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bSprinting : 1;                                           // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsInVehicle : 1;                                         // 0x0AD9(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x6];                                       // 0x0ADA(0x0006) MISSED OFFSET
	class UAnimSequence*                               VehicleIdle;                                              // 0x0AE0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsSwimming : 1;                                          // 0x0AE8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsSubmerged : 1;                                         // 0x0AE8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x3];                                       // 0x0AE9(0x0003) MISSED OFFSET
	struct FRotator                                    SwimSpineRotation;                                        // 0x0AEC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlphaMin;                                    // 0x0AF8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlphaMax;                                    // 0x0AFC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bUpdateMovement : 1;                                      // 0x0B00(0x0001) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCombat : 1;                                              // 0x0B00(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDead : 1;                                                // 0x0B00(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bDowned : 1;                                              // 0x0B00(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bKnockedBack : 1;                                         // 0x0B00(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsStopped : 1;                                           // 0x0B00(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x3];                                       // 0x0B01(0x0003) MISSED OFFSET
	struct FRotator                                    DownedRootFacing;                                         // 0x0B04(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnGoDown;                                                 // 0x0B10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bActivatingMod : 1;                                       // 0x0B20(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAnyModsActive : 1;                                       // 0x0B20(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x3];                                       // 0x0B21(0x0003) MISSED OFFSET
	bool                                               bEnableSprintAdditiveForAbilities;                        // 0x0B24(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x3];                                       // 0x0B25(0x0003) MISSED OFFSET
	struct FName                                       InteractionState;                                         // 0x0B28(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsReviving;                                              // 0x0B30(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x3];                                       // 0x0B31(0x0003) MISSED OFFSET
	float                                              IsInVehicleAlpha;                                         // 0x0B34(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IsInVehicleInverseAlpha;                                  // 0x0B38(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinZSpeedforJumpLand;                                     // 0x0B3C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCameraLockout : 1;                                 // 0x0B40(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCameraLockoutCooldown : 1;                         // 0x0B40(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x7];                                       // 0x0B41(0x0007) MISSED OFFSET
	float                                              CachedCameraLockoutAlpha;                                 // 0x0B48(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x4];                                       // 0x0B4C(0x0004) MISSED OFFSET
	class UAnimSequence*                               FallDown;                                                 // 0x0B50(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AdditiveLandsAlpha;                                       // 0x0B58(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDownedCosmetic;                                          // 0x0B5C(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWasRecentlyRevived;                                      // 0x0B5D(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasManuallyCanceledDownedCosmetic;                       // 0x0B5E(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x1];                                       // 0x0B5F(0x0001) MISSED OFFSET
	struct FVector                                     AccelDirection;                                           // 0x0B60(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocalAccelDirection;                                      // 0x0B6C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     PreviousLocalAccelDirection;                              // 0x0B78(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     Velocity;                                                 // 0x0B84(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocalVelocity;                                            // 0x0B90(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocalRelativeVelocity;                                    // 0x0B9C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FwdBackIntroLean;                                         // 0x0BA8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftRightIntroLean;                                       // 0x0BAC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IntroLeanMultiplier;                                      // 0x0BB0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IntroLeanSpeed;                                           // 0x0BB4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VelocityVsAccelDotProduct;                                // 0x0BB8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     FacingDirection;                                          // 0x0BBC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     FloorNormal;                                              // 0x0BC8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AccelRightDirection;                                      // 0x0BD4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     AccelNormDirection;                                       // 0x0BE0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlopeAngle;                                               // 0x0BEC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlopeAngleTarget;                                         // 0x0BF0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   SlopeAngleDirectional;                                    // 0x0BF4(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    SlopeAngleDirectionalRotation;                            // 0x0BFC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    PowerSlideSlopeAngleRotation;                             // 0x0C08(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              SlopeFeetAlpha;                                           // 0x0C14(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlopeFeetAlphaTarget;                                     // 0x0C18(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     FootHeightAdjustmentOnSlope;                              // 0x0C1C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     PelvisAdjustmentOnSlope;                                  // 0x0C28(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RootAdjustmentOnSlope;                                    // 0x0C34(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableFeetTilting;                                      // 0x0C40(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x3];                                       // 0x0C41(0x0003) MISSED OFFSET
	float                                              fSlopeInterpSpeed;                                        // 0x0C44(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSLocomotionState                                 LocomotionState;                                          // 0x0C48(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasLocomotionStartLocation;                               // 0x0C49(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x2];                                       // 0x0C4A(0x0002) MISSED OFFSET
	struct FVector                                     LocomotionStartLocation;                                  // 0x0C4C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStart;                                  // 0x0C58(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStartMax;                               // 0x0C5C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasLocomotionStopLocation;                                // 0x0C60(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData35[0x3];                                       // 0x0C61(0x0003) MISSED OFFSET
	struct FVector                                     LocomotionStopLocation;                                   // 0x0C64(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionStop;                                   // 0x0C70(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LocomotionStopBufferTime;                                 // 0x0C74(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LocomotionStopBufferExpireTime;                           // 0x0C78(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSuccessPivotCompleteThisFrame;                           // 0x0C7C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPivotLocation;                               // 0x0C7D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPrePivotLocation;                            // 0x0C7E(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasLocomotionPostPivotLocation;                           // 0x0C7F(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LocomotionPivotThreshold;                                 // 0x0C80(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPivotLocation;                                  // 0x0C84(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CachedLocomotionPivotLocation;                            // 0x0C90(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPivot;                                  // 0x0C9C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPivotMax;                               // 0x0CA0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPrePivotLocation;                               // 0x0CA4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPrePivot;                               // 0x0CB0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LocomotionPostPivotLocation;                              // 0x0CB4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromLocomotionPostPivot;                              // 0x0CC0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLocomotionStartUsesPivotDistance;                        // 0x0CC4(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasJumpStartLocation;                                     // 0x0CC5(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x2];                                       // 0x0CC6(0x0002) MISSED OFFSET
	struct FVector                                     JumpStartLocation;                                        // 0x0CC8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsSprintJumping;                                          // 0x0CD4(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsShortJumping;                                           // 0x0CD5(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData37[0x2];                                       // 0x0CD6(0x0002) MISSED OFFSET
	float                                              DistFromJumpStart;                                        // 0x0CD8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromJumpStartMax;                                     // 0x0CDC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ShortJumpThreshold;                                       // 0x0CE0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HasJumpLandLocation;                                      // 0x0CE4(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               JumpLandLocationOnGround;                                 // 0x0CE5(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData38[0x2];                                       // 0x0CE6(0x0002) MISSED OFFSET
	struct FVector                                     JumpLandLocation;                                         // 0x0CE8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     JumpLandLocationTarget;                                   // 0x0CF4(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              JumpLandLocationInterpSpeed;                              // 0x0D00(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData39[0x1C];                                      // 0x0D04(0x001C) MISSED OFFSET
	float                                              DistFromJumpLand;                                         // 0x0D20(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InitialDistFromJumpLand;                                  // 0x0D24(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromJumpLandTarget;                                   // 0x0D28(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistFromJumpLandInterpSpeed;                              // 0x0D2C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SmoothedVelocity;                                         // 0x0D30(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterp;                                   // 0x0D3C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SmoothedVelocitySpeedThreshold;                           // 0x0D40(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterpRate;                               // 0x0D44(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SmoothedVelocityInterpRateBelowThreshold;                 // 0x0D48(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideProgress;                                       // 0x0D4C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideAngle;                                          // 0x0D50(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    PowerSlideRotation;                                       // 0x0D54(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	EKSPowerSlideEndReason                             PowerSlideEndReason;                                      // 0x0D60(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPowerSlidingOnSlope;                                   // 0x0D61(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsLocallyViewed;                                         // 0x0D62(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               JumpLandLocationInWater;                                  // 0x0D63(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DesiredComponentYaw;                                      // 0x0D64(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bTurnInPlaceInProgress;                                   // 0x0D68(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData40[0x3];                                       // 0x0D69(0x0003) MISSED OFFSET
	float                                              TurnInPlaceTurnValue;                                     // 0x0D6C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentTurnInPlaceThreshold;                              // 0x0D70(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSTurnInPlaceAnimationVariant                     LastTurnInPlaceAnimationVariant;                          // 0x0D74(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData41[0x3];                                       // 0x0D75(0x0003) MISSED OFFSET
	float                                              TurnInPlaceMinThreshold;                                  // 0x0D78(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnInPlaceMaxOffset;                                     // 0x0D7C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRetriggerMinThreshold;                         // 0x0D80(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeedWithAcceleration;                 // 0x0D84(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeed90;                               // 0x0D88(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TurnInPlaceRecoverySpeed180;                              // 0x0D8C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    AppliedTurnInPlaceRotator;                                // 0x0D90(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    WorldTurnInPlaceRotator;                                  // 0x0D9C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData42[0x10];                                      // 0x0DA8(0x0010) MISSED OFFSET
	bool                                               bDisableTurnInPlaceCounterRotate;                         // 0x0DB8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData43[0x3];                                       // 0x0DB9(0x0003) MISSED OFFSET
	float                                              EnableCounterRotateBlendTime;                             // 0x0DBC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DisableCounterRotateBlendTime;                            // 0x0DC0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldSplitUpperBody;                                    // 0x0DC4(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableSplitUpperBodyForAbilities;                        // 0x0DC5(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableUpperBodyTurnInPlace;                             // 0x0DC6(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsLockedToWorldRotation;                                 // 0x0DC7(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               IsLockedToWorldRotationAlpha;                             // 0x0DC8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData44[0x3];                                       // 0x0DC9(0x0003) MISSED OFFSET
	struct FRotator                                    LockedWorldRotation;                                      // 0x0DCC(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData45[0x50];                                      // 0x0DD8(0x0050) UNKNOWN PROPERTY: WorldRotationLockIds
	unsigned char                                      NextWorldRotationLockId;                                  // 0x0E28(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData46[0x1F];                                      // 0x0E29(0x001F) MISSED OFFSET
	bool                                               bIsAimOverShoulder;                                       // 0x0E48(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsLeavingAOS;                                            // 0x0E49(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAimDownSights;                                         // 0x0E4A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData47[0x1];                                       // 0x0E4B(0x0001) MISSED OFFSET
	float                                              IsAimDownSightsAlpha;                                     // 0x0E4C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAimDownSightsFirstPerson;                              // 0x0E50(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData48[0x3];                                       // 0x0E51(0x0003) MISSED OFFSET
	float                                              IsAimDownSightsFirstPersonAlpha;                          // 0x0E54(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIs3PAimDownSights;                                       // 0x0E58(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData49[0x3];                                       // 0x0E59(0x0003) MISSED OFFSET
	struct FRotator                                    PreviousCachedAimRotation;                                // 0x0E5C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    CachedAimRotation;                                        // 0x0E68(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    DeltaAimRotation;                                         // 0x0E74(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ThirdPersonAppliedAimRotator;                             // 0x0E80(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYaw;                                        // 0x0E8C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYawInverted;                                // 0x0E90(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimYawCosmetic;                                // 0x0E94(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonEngagedAimYawCosmetic;                         // 0x0E98(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitch;                                      // 0x0E9C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitchInverted;                              // 0x0EA0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonAimPitchUpline;                                // 0x0EA4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonLean;                                          // 0x0EA8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonFwdLean;                                       // 0x0EAC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanAlpha;                                     // 0x0EB0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanMultiplier;                                // 0x0EB4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ComLeanMultiplier;                                        // 0x0EB8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NonComLeanMultiplier;                                     // 0x0EBC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EngagedLeanMultiplier;                                    // 0x0EC0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThirdPersonLeanSpeed;                                     // 0x0EC4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              YawDeltaMinimum;                                          // 0x0EC8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinPitchAngle;                                            // 0x0ECC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxPitchAngle;                                            // 0x0ED0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinYawAngle;                                              // 0x0ED4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxYawAngle;                                              // 0x0ED8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NormalYawInterpSpeed;                                     // 0x0EDC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZipLineYawInterpSpeed;                                    // 0x0EE0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZipLineYawInterpSpeedOver180;                             // 0x0EE4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentYawInterpSpeed;                                    // 0x0EE8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TargetYawInterpSpeed;                                     // 0x0EEC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NormalYawInterpAcceleration;                              // 0x0EF0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSBlendToCrouchSlotTime;                                 // 0x0EF4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ADSBlendToStandingSlotTime;                               // 0x0EF8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsReloading : 1;                                         // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsSwitchingWeapon : 1;                                   // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsUsingItem : 1;                                         // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsUsingAbility : 1;                                      // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsRetrievingWeapon : 1;                                  // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsHacking : 1;                                           // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileCrouching : 1;                            // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandMelee : 1;                                     // 0x0EFC(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileIdle : 1;                                 // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileSprinting : 1;                            // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileMoving : 1;                               // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachHandWhileZiplining : 1;                            // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bForceAttachHandIfNotNonCom : 1;                          // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAttachRightHand : 1;                                     // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bWeaponScale : 1;                                         // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bRightPropBScale : 1;                                     // 0x0EFD(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bLeftPropBScale : 1;                                      // 0x0EFE(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bAimsDisabled : 1;                                        // 0x0EFE(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bMantlePlaying : 1;                                       // 0x0EFE(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsPreRagdoll : 1;                                        // 0x0EFE(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bIsRagdoll : 1;                                           // 0x0EFE(0x0001) (CPF_BlueprintVisible, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData50[0x1];                                       // 0x0EFF(0x0001) MISSED OFFSET
	float                                              LeftPropBScaleAlpha;                                      // 0x0F00(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RightPropBScaleAlpha;                                     // 0x0F04(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreeFallAlpha;                                            // 0x0F08(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BlindedAlpha;                                             // 0x0F0C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TabletScaleAlpha;                                         // 0x0F10(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HolsterLockAlpha;                                         // 0x0F14(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PropLockAlpha;                                            // 0x0F18(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LeftHolsterLockAlpha;                                     // 0x0F1C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    DebugDesiredAimDifference;                                // 0x0F20(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUsingZipLineOver180InterpSpeed;                          // 0x0F2C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData51[0x3];                                       // 0x0F2D(0x0003) MISSED OFFSET
	struct FRotator                                    FirstPersonAppliedAimRotator;                             // 0x0F30(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     FirstPersonAppliedBreathStepTranslation;                  // 0x0F3C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonBreathSpeed;                                   // 0x0F48(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonBreathHeight;                                  // 0x0F4C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonStepSpeedStanding;                             // 0x0F50(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonStepSpeedCrouching;                            // 0x0F54(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonStepHeight;                                    // 0x0F58(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FirstPersonStepMinSpeed;                                  // 0x0F5C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    FirstPersonLaggingAimRotator;                             // 0x0F60(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              Normal1PAimInterpSpeed;                                   // 0x0F6C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentAimPitchSway;                                      // 0x0F70(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentAimPitchSwayOffset;                                // 0x0F74(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentAimYawSway;                                        // 0x0F78(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentAimYawSwayOffset;                                  // 0x0F7C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NormalLeanAndSwayInterpSpeed;                             // 0x0F80(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData52[0xC];                                       // 0x0F84(0x000C) MISSED OFFSET
	float                                              ADSBreathingTime;                                         // 0x0F90(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              ADSSteppingTime;                                          // 0x0F94(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bScaleOutWeapon;                                          // 0x0F98(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData53[0x3];                                       // 0x0F99(0x0003) MISSED OFFSET
	float                                              WeaponScaleAlpha;                                         // 0x0F9C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               WeaponScaleLeftPropOnly;                                  // 0x0FA0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               WeaponScaleRightPropOnly;                                 // 0x0FA1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUnarmed;                                                 // 0x0FA2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMelee;                                                   // 0x0FA3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bQuickMelee;                                              // 0x0FA4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsUsingMedPen;                                           // 0x0FA5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableMeleeLowerBody;                                    // 0x0FA6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMeleeAim;                                                // 0x0FA7(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMeleeNoAim;                                              // 0x0FA8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData54[0x3];                                       // 0x0FA9(0x0003) MISSED OFFSET
	float                                              MeleeLowerBodyDuration;                                   // 0x0FAC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSMovementDirection                               MeleeLowerBodyDirection;                                  // 0x0FB0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsUsingTestLocomotion;                                   // 0x0FB1(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECombatState                                       TestCombatState;                                          // 0x0FB2(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECombatState                                       CombatState;                                              // 0x0FB3(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECombatState                                       InitialCombatState;                                       // 0x0FB4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECombatState                                       DefaultCombatState;                                       // 0x0FB5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData55[0x2];                                       // 0x0FB6(0x0002) MISSED OFFSET
	float                                              CombatStateCooldownTime;                                  // 0x0FB8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TestCombatStateCooldownTime;                              // 0x0FBC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponCombatStateCooldownTime;                            // 0x0FC0(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData56[0x4];                                       // 0x0FC4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCombatStateChanged;                                     // 0x0FC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                CombatStateCooldownTimer;                                 // 0x0FD8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                TestCombatStateCooldownTimer;                             // 0x0FE0(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                EngHeadAdditiveAlphaTimer;                                // 0x0FE8(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCooldownBlocked;                                         // 0x0FF0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData57[0x3];                                       // 0x0FF1(0x0003) MISSED OFFSET
	float                                              EngagedBlendTime;                                         // 0x0FF4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ComBlendTime;                                             // 0x0FF8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NonComBlendTime;                                          // 0x0FFC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LeftHandAdditiveReloadOverrideDisableBlendTime;           // 0x1000(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDownedIdleToCrawlLoop;                                   // 0x1004(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDownedCrawlLoopToIdle;                                   // 0x1005(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBlink;                                                // 0x1006(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsBlinking;                                              // 0x1007(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EyeBlinkAlpha;                                            // 0x1008(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToNextBlink;                                          // 0x100C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumTimeBetweenBlinks;                                 // 0x1010(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumTimeBetweenBlinks;                                 // 0x1014(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EyeBlinkSpeed;                                            // 0x1018(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData58[0x4];                                       // 0x101C(0x0004) MISSED OFFSET
	struct FTimerHandle                                BlinkTimer;                                               // 0x1020(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSEmotion                                         Emotion;                                                  // 0x1028(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData59[0x3];                                       // 0x1029(0x0003) MISSED OFFSET
	float                                              EmotionAnimTime;                                          // 0x102C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAnimationEvent;                                         // 0x1030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData60[0x10];                                      // 0x1040(0x0010) MISSED OFFSET
	bool                                               bIsNonComIdle;                                            // 0x1050(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayingMirrorTransition;                                 // 0x1051(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAnimMirrorDelay;                                         // 0x1052(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDisableMirrorPose;                                       // 0x1053(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsMirroredPoseCosmetic;                               // 0x1054(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData61[0x3];                                       // 0x1055(0x0003) MISSED OFFSET
	float                                              PoseMirrorAlphaCosmetic;                                  // 0x1058(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MirrorInterpSpeed;                                        // 0x105C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MirrorInterpSpeedEngaged;                                 // 0x1060(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ShoulderSwapProgress;                                     // 0x1064(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ECameraShoulder                                    CurrentShoulderCosmetic;                                  // 0x1068(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData62[0x7];                                       // 0x1069(0x0007) MISSED OFFSET
	struct FBoneMirrorConfig                           BoneMirrorConfig;                                         // 0x1070(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	ECameraShoulder                                    CurrentShoulder;                                          // 0x1090(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWantsMirroredPose;                                       // 0x1091(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData63[0x2];                                       // 0x1092(0x0002) MISSED OFFSET
	float                                              PoseMirrorAlpha;                                          // 0x1094(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData64[0x8];                                       // 0x1098(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterAnimInst");
		return ptr;
	}


	void UpdateTurnInPlace(float DeltaSeconds);
	void UpdateTestCombatState(ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	void UpdatePostMirrorRotateValues();
	void UpdateCombatState(ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	void UpdateCachedPivotLocation();
	void UnplantRightHand();
	void UnplantLeftHand();
	void UnhideWeapon();
	void UnhideMag();
	void UnhideGadget();
	void TryToTriggerTurnInPlaceAnimation(EKSTurnInPlaceAnimationVariant AnimationVariant, float DelayTime);
	class AKSCharacterBase* TryGetKSCharacterBase();
	void TriggerDisableAims(bool bShouldDisable);
	void TriggerCustomPivot();
	void SwitchWeaponNative(class UKSWeaponComponent* Weapon);
	void SwitchWeaponIKNative(class UKSWeaponComponent* Weapon);
	void StopFire();
	void StopEmote();
	void StartRevivee();
	void StartFire();
	void ShoulderCharge();
	void SetMaxSpeedValues(class UKSWeaponAsset* WeaponAsset);
	void ReviveMesh(class UAnimMontage* ReviveMontage, bool bIsInAir);
	void RetrieveEnd();
	void RetrieveBegin();
	void RequestNewCombatState(ECombatState NewCombatState, bool bBlockCooldown, bool bForce);
	int RequestLeftHandIKForceOff();
	bool ReleaseWorldRotationLock(unsigned char InLockId);
	bool PopLeftHandIKForceOffRequest(int RequestID);
	void PlayRecoilProfile(const struct FRecoilProfile& RecoilProfile);
	void OnTestCombatStateCooldown();
	void OnShoulderChanged();
	void OnMovementDirectionChanged(EKSMovementDirection OldDirection, EKSMovementDirection NewDirection);
	void OnCombatStateCooldown();
	void LocomotionStop(const struct FVector& StopLocation);
	void LocomotionStart(const struct FVector& StartLocation);
	void LocomotionPrePivot();
	void LocomotionPivotCheckpoint();
	void LocomotionPivot(const struct FVector& PivotLocation);
	void LocomotionJumpStart(const struct FVector& StartLocation);
	void LocomotionJumpLand(const struct FVector& LandLocation);
	unsigned char LockToCurrentInWorldRotation();
	bool IsLeftHandIKForcedOff();
	void HideWeapon();
	void HideMag();
	void HideGadget();
	TArray<struct FBoneReference> GetUnpairedMirrorBones();
	TArray<struct FBoneMirrorPair> GetPairedMirrorBones();
	EKSMovementDirection GetMovementDirectionFromLocalAcceleration(const struct FVector& NormalizedLocalAccel, bool bGetOppositeDirection);
	ECombatState GetCombatState();
	static float FloatSpringInterp(float Current, float Target, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass, struct FFloatHitSpringState* SpringState);
	void EventStopSwimming();
	void EventStopSubmerge();
	void EventStartSwimming();
	void EventStartSubmerge();
	void EventStartInteraction(const struct FName& NewInteractState, float NewInteractHeight, float NewInteractTime);
	void EventPlayHitReactionAnimation(const struct FName& AttackDirection, bool bWillReturnDamage);
	void EventPlayFireAnimation();
	bool EventPlayDeathAnimation();
	void EventEndZipLineEnding();
	void EventEndZipLineBrace();
	void EventEndZipLine();
	void EventEndVault();
	void EventEndStun();
	void EventEndPowerSlide(EKSPowerSlideEndReason EndReason);
	void EventEndInteraction(const struct FName& OldInteractState);
	void EventEndHardLand();
	void EventEndActivatingMod();
	void EventEndAbilityMovement();
	void EventDoZipLineEnding();
	void EventDoZipLineBrace();
	void EventDoZipLine();
	void EventDoVault(float InMantleHeight, bool bInVault, float InVaultDrop, float InUpDuration, float InAcrossDuration, float InDownDuration, const struct FName& InMantleName);
	void EventDoStun();
	void EventDoPowerSlide();
	void EventDoHardLandAvoid();
	void EventDoHardLand();
	void EventDoGoDown();
	void EventDoDodgeRoll(float Duration, const struct FVector2D& Direction);
	void EventDoActivatingMod();
	void EventDoAbilityMovement();
	void EventActivatedModExpired();
	void EndRevivee();
	void EnableAims();
	void EmoteMontageLostAllLocalWeight();
	void EmoteMontageLostAllGlobalWeight();
	void DoResetCustomPivot();
	void DodgeRollExpire();
	void DisableAims();
	bool CheckCanSpray();
	bool CheckCanEmote();
	bool CanUseCombatState(ECombatState TestState);
	void CancelDownedCosmetic();
	void BroadcastOnGoDown();
	void BroadcastAnimationEvent(const struct FName& EventName);
	void BlinkEyes();
	void AttemptTestCombatStateCooldown();
	void AttemptCombatStateCooldown();
	void AnimMirrorDelayEnd();
	void AdditiveRetrieveEnd();
	void AdditiveRetrieveBegin();
};


// Class Killstreak.KSCharacterCameraShake
// 0x0020 (0x0180 - 0x0160)
class UKSCharacterCameraShake : public UCameraShake
{
public:
	class AKSCharacterBase*                            AttachedCharacter;                                        // 0x0160(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0168(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterCameraShake");
		return ptr;
	}


	void StopShakeOnViewTargetChanged(class APlayerController* NewController);
	void StopShakeOnActorDestroyed(class AActor* DestroyedActor);
	void StopShakeDynamic();
	void OnAimStateChanged(EKSCharacterAimMode NextAimState);
};


// Class Killstreak.KSCharacterCapsuleComponent
// 0x0010 (0x0460 - 0x0450)
class UKSCharacterCapsuleComponent : public UCapsuleComponent
{
public:
	bool                                               bBeingCarried;                                            // 0x0450(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ECollisionEnabled>                     UncarriedCollisionEnabled;                                // 0x0451(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xE];                                       // 0x0452(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterCapsuleComponent");
		return ptr;
	}

};


// Class Killstreak.KSCharacterMovementComponent
// 0x0590 (0x0BA0 - 0x0610)
class UKSCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0610(0x0018) MISSED OFFSET
	float                                              LastNetUpdateTime;                                        // 0x0628(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxProxyForwardPredictionTime;                            // 0x062C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0630(0x0002) MISSED OFFSET
	bool                                               bCanEverSkipProxyPrediction;                              // 0x0632(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0633(0x0001) MISSED OFFSET
	int                                                SkipProxyPredictionLOD;                                   // 0x0634(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SkipProxySkydivePredictionDist;                           // 0x0638(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSkipProxyPredictionAfterSkydive;                         // 0x063C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x063D(0x0003) MISSED OFFSET
	struct FFindFloorResult                            LastFloor;                                                // 0x0640(0x0094) (CPF_Transient, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0xC];                                       // 0x06D4(0x000C) MISSED OFFSET
	float                                              SlowToCrouchTime;                                         // 0x06E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x06E4(0x0008) MISSED OFFSET
	float                                              PostCrouchSlowTime;                                       // 0x06EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x8];                                       // 0x06F0(0x0008) MISSED OFFSET
	float                                              CrouchCooldownTime;                                       // 0x06F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TeaBagPreventionCrouchCooldownTime;                       // 0x06FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0700(0x0004) MISSED OFFSET
	struct FVector                                     SimulatedProxyVelocity;                                   // 0x0704(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanEverPowerSlide;                                       // 0x0710(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0711(0x0003) MISSED OFFSET
	float                                              PowerSlideTurnFrictionMinAngle;                           // 0x0714(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideTurnFrictionMaxAngle;                           // 0x0718(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumStartPowerSlideSpeed;                              // 0x071C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumPowerSlideSpeed;                                   // 0x0720(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideInitialSpeedBoost;                              // 0x0724(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideLockoutTime;                                    // 0x0728(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumPowerSlideTime;                                    // 0x072C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideMaxStepHeight;                                  // 0x0730(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0xC];                                       // 0x0734(0x000C) MISSED OFFSET
	struct FInterpCurveFloat                           PowerSlideTurnDecelerationCurve;                          // 0x0740(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           PowerSlideDecelerationCurve;                              // 0x0758(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PowerSlideResistDeceleration;                             // 0x0770(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x14];                                      // 0x0774(0x0014) MISSED OFFSET
	float                                              FallAimForgivenessPeriod;                                 // 0x0788(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FallAimForgivenessEndTime;                                // 0x078C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinWalkingAcceleration;                                   // 0x0790(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSprintingSpeed;                                        // 0x0794(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxWalkSpeedProne;                                        // 0x0798(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimOverShoulderSpeedModifier;                             // 0x079C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimDownSightsSpeedModifier;                               // 0x07A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HaulingSpeedModifier;                                     // 0x07A4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              StrafingSpeedFactor;                                      // 0x07A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReverseSpeedFactor;                                       // 0x07AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bWantsToSprint : 1;                                       // 0x07B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSprintIsHeld : 1;                                        // 0x07B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSprintIsToggledOn : 1;                                   // 0x07B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSprintInterrupted : 1;                                   // 0x07B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bIsJumping : 1;                                           // 0x07B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowSprintingRightNow : 1;               // 0x07B0(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowPowerSlideRightNow : 1;              // 0x07B0(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x3];                                       // 0x07B1(0x0003) MISSED OFFSET
	float                                              CachedWeaponWalkSpeedModifier;                            // 0x07B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReducedJumpZVelocity;                                     // 0x07B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ReducedJumpHeightWindow;                                  // 0x07BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bSprinting : 1;                                           // 0x07C0(0x0001) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0xF];                                       // 0x07C1(0x000F) MISSED OFFSET
	float                                              MinHardLandingHeight;                                     // 0x07D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HardLandingLockoutTime;                                   // 0x07D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreefallLandingLockoutTime;                               // 0x07D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSCharacterAimMode                                AimState;                                                 // 0x07DC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x3];                                       // 0x07DD(0x0003) MISSED OFFSET
	class AKSCharacterBase*                            KSCharacterOwner;                                         // 0x07E0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSprintingSwimSpeed;                                    // 0x07E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSubmergedSwimSpeed;                                    // 0x07EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwimSurfaceAcceleration;                                  // 0x07F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwimSubmergedAcceleration;                                // 0x07F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDownedSwimSpeed;                                       // 0x07F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwimStrafingSpeedFactor;                                  // 0x07FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwimReverseSpeedFactor;                                   // 0x0800(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSwimZSpeed;                                            // 0x0804(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SwimZAcceleration;                                        // 0x0808(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SurfaceSwimDepth;                                         // 0x080C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SubmergedSwimDepth;                                       // 0x0810(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              HardMaxSwimDepth;                                         // 0x0814(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FallSpeedWaterDeflectionFactor;                           // 0x0818(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CrouchToSwimDepth;                                        // 0x081C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FMantleConfig>                       MantleConfigs;                                            // 0x0820(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0830(0x0010) MISSED OFFSET
	float                                              m_fLedgeGrabDistance;                                     // 0x0840(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fSprintLedgeGrabDistance;                               // 0x0844(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fLedgeGrabbableWallZ;                                   // 0x0848(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fMaxLedgeCheckHeight;                                   // 0x084C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fMinLedgeCheckHeight;                                   // 0x0850(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fSwimHeightBoost;                                       // 0x0854(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fLedgeGrabbableZ;                                       // 0x0858(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultZSpeed;                                           // 0x085C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fEnhancedZSpeed;                                        // 0x0860(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultLateralSpeed;                                     // 0x0864(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultFacingThreshold;                                  // 0x0868(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultVerticalCheckInterval;                            // 0x086C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultHeadClearance;                                    // 0x0870(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fMantleDownDistance;                                    // 0x0874(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultForwardDistance;                                  // 0x0878(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fMantleMaxDistance;                                     // 0x087C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     m_vMantleLaunchVelocity;                                  // 0x0880(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fVaultErrorForgiveness;                                 // 0x088C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MantleStepHeightProxy;                                    // 0x0890(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireJumpForVault;                                     // 0x0894(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0895(0x0003) MISSED OFFSET
	float                                              MaximumVelocityPreserveHeight;                            // 0x0898(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumSpeedForFromJumpMantles;                           // 0x089C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowMantleEarlyOutOnFire;                               // 0x08A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRestrictVaultingIntoCrouch;                              // 0x08A1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x2];                                       // 0x08A2(0x0002) MISSED OFFSET
	float                                              VaultFromGroundTraceHeightAdjust;                         // 0x08A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x38];                                      // 0x08A8(0x0038) MISSED OFFSET
	bool                                               bVaultDebugPrinting;                                      // 0x08E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x7];                                       // 0x08E1(0x0007) MISSED OFFSET
	struct FMantleConfig                               CurrentMantleConfig;                                      // 0x08E8(0x00A8) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData19[0x38];                                      // 0x0990(0x0038) MISSED OFFSET
	struct FInterpCurveFloat                           MantleClothSimCurve;                                      // 0x09C8(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData20[0x10];                                      // 0x09E0(0x0010) MISSED OFFSET
	float                                              m_fPostSprintLockoutTime;                                 // 0x09F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              m_fRemainingPostSprintLockoutTime;                        // 0x09F4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FreeFallClearanceHeight;                                  // 0x09F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinFreeFallSpeedZ;                                        // 0x09FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DefaultFreeFallSpeedZ;                                    // 0x0A00(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFreeFallSpeedZ;                                        // 0x0A04(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinFreeFallForwardSpeed;                                  // 0x0A08(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DefaultFreeFallForwardSpeed;                              // 0x0A0C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFreeFallForwardSpeed;                                  // 0x0A10(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxDiveForwardSpeed;                                      // 0x0A14(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFreeFallLateralSpeed;                                  // 0x0A18(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFreeFallLateralAcceleration;                           // 0x0A1C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxFreeFallReverseAcceleration;                           // 0x0A20(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FreeFallAirControl;                                       // 0x0A24(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FreeFallDelay;                                            // 0x0A28(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bInFreeFall;                                              // 0x0A2C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWingsuitHasBeenDisabled;                                 // 0x0A2D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x2];                                       // 0x0A2E(0x0002) MISSED OFFSET
	float                                              FreeFallBrakingAcceleration;                              // 0x0A30(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FreeFallDiveThresholdAngle;                               // 0x0A34(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FreeFallDiveForwardInputThreshold;                        // 0x0A38(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bWantsToEndFreeFallEarly;                                 // 0x0A3C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData22[0x13];                                      // 0x0A3D(0x0013) MISSED OFFSET
	bool                                               bIsFreeFallDiving;                                        // 0x0A50(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0A51(0x0003) MISSED OFFSET
	struct FRotator                                    LastYawRotation;                                          // 0x0A54(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              FreeFallYawAccumDeltaTime;                                // 0x0A60(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreeFallYawTotalDeltaTime;                                // 0x0A64(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreeFallDelayProgress;                                    // 0x0A68(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       FreeFallHeightActor;                                      // 0x0A6C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseFreeFallStartHeight;                                  // 0x0A74(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x3];                                       // 0x0A75(0x0003) MISSED OFFSET
	float                                              FreeFallNetSmoothTime;                                    // 0x0A78(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostFreeFallNetSmoothTimeRecoveryRate;                    // 0x0A7C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x1];                                       // 0x0A80(0x0001) MISSED OFFSET
	bool                                               bWingsuitControls;                                        // 0x0A81(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData26[0x2];                                       // 0x0A82(0x0002) MISSED OFFSET
	float                                              WingsuitGlideDragCoefficient;                             // 0x0A84(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WingsuitDiveDragCoefficient;                              // 0x0A88(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WingsuitGlideSurfaceArea;                                 // 0x0A8C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WingsuitDiveSurfaceArea;                                  // 0x0A90(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bCachedCharacterAllowDodgeRollRightNow : 1;               // 0x0A94(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bStartDodgeRoll : 1;                                      // 0x0A94(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData27[0x3];                                       // 0x0A95(0x0003) MISSED OFFSET
	bool                                               bWantsToDodgeRollOnLanding;                               // 0x0A98(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShouldDodgeRollOnLanding;                                // 0x0A99(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData28[0x2];                                       // 0x0A9A(0x0002) MISSED OFFSET
	float                                              MaxDodgeRollSpeed;                                        // 0x0A9C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DodgeRollDistance;                                        // 0x0AA0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDodgeRollFromAimDownSights;                           // 0x0AA4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x3];                                       // 0x0AA5(0x0003) MISSED OFFSET
	float                                              DodgeRollCooldownTime;                                    // 0x0AA8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x4];                                       // 0x0AAC(0x0004) MISSED OFFSET
	float                                              DodgeRollForgivenessPeriod;                               // 0x0AB0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DodgeRollForgivenessEndTime;                              // 0x0AB4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x14];                                      // 0x0AB8(0x0014) MISSED OFFSET
	float                                              DodgeRollAcceleration;                                    // 0x0ACC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BrakingDecelerationPostDodgeRoll;                         // 0x0AD0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEnableBrakingDecelerationPostDodgeRoll;                  // 0x0AD4(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x3];                                       // 0x0AD5(0x0003) MISSED OFFSET
	struct FInterpCurveFloat                           DodgeRollVelocityCurve;                                   // 0x0AD8(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           DodgeRollClothSimCurve;                                   // 0x0AF0(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCharacterAllowLungeRightNow : 1;                   // 0x0B08(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData33[0x3];                                       // 0x0B09(0x0003) MISSED OFFSET
	float                                              CurrentLungeDistance;                                     // 0x0B0C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxLungeDistance;                                         // 0x0B10(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x4];                                       // 0x0B14(0x0004) MISSED OFFSET
	class AActor*                                      LungeTarget;                                              // 0x0B18(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentLungeDuration;                                     // 0x0B20(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxLungeDuration;                                         // 0x0B24(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeAcceleration;                                        // 0x0B28(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxLungeSpeed;                                            // 0x0B2C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeStopLateralDistance;                                 // 0x0B30(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeStopVerticalDistance;                                // 0x0B34(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeAirControl;                                          // 0x0B38(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData35[0x1C];                                      // 0x0B3C(0x001C) MISSED OFFSET
	class USplineComponent*                            FlightRecoverySplineComponent;                            // 0x0B58(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x4];                                       // 0x0B60(0x0004) MISSED OFFSET
	float                                              FlightRecoverySpeed;                                      // 0x0B64(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      bCachedCharacterAllowAbilityMoveRightNow : 1;             // 0x0B68(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      bStartAbilityMovement : 1;                                // 0x0B68(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData37[0x7];                                       // 0x0B69(0x0007) MISSED OFFSET
	unsigned char                                      bCachedCharacterAllowZipLineRightNow : 1;                 // 0x0B70(0x0001) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData38[0x7];                                       // 0x0B71(0x0007) MISSED OFFSET
	bool                                               bZiplineEndsEnforceDirection;                             // 0x0B78(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowDodgeRollIntoZipline;                               // 0x0B79(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireJumpForZipline;                                   // 0x0B7A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireDownwardMovementToZipline;                        // 0x0B7B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowZiplineReverseViaDodgeRoll;                         // 0x0B7C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData39[0x3];                                       // 0x0B7D(0x0003) MISSED OFFSET
	float                                              ZiplineAcceleration;                                      // 0x0B80(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData40[0x1];                                       // 0x0B84(0x0001) MISSED OFFSET
	bool                                               bEnableFriendlyNudging;                                   // 0x0B85(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData41[0x6];                                       // 0x0B86(0x0006) MISSED OFFSET
	float                                              MaxEmoteInterruptDistance;                                // 0x0B8C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxEmoteMovingInterruptDistance;                          // 0x0B90(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CachedMaxEmoteInteruptDistance;                           // 0x0B94(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bClientManuallyShoulderSwappedNearby;                     // 0x0B98(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData42[0x7];                                       // 0x0B99(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterMovementComponent");
		return ptr;
	}


	void ResetPostFireSprintLockout();
	bool IsZipLining();
	bool IsStandingStill();
	bool IsSprintingWithVelocity();
	bool IsSprinting();
	bool IsInPowerSlide();
	bool IsFlightRecovery();
	bool IsDowned();
	bool IsDodgeRolling();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool GetWantsToSprint();
	bool GetWantsToPowerSlide();
	float GetProratedMaxSpeed();
	struct FVector FindPointAboveWater(const struct FVector& TestPoint);
	void ClientAdjustPositionVault(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, const struct FVector& NewPreVaultLocation, float NewLastEvalTime);
	void ClientAdjustPositionDodgeRoll(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, float NewDodgeDuration, float NewDodgeDirection);
};


// Class Killstreak.KSSkeletalMeshComponent
// 0x0050 (0x0D70 - 0x0D20)
class UKSSkeletalMeshComponent : public USkinnableMergedMeshComponent
{
public:
	bool                                               bForceTextureResidentFlagOnAllTextures;                   // 0x0D20(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0D21(0x0017) MISSED OFFSET
	float                                              TeleportDistanceDeltaThreshold;                           // 0x0D38(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0D3C(0x001C) MISSED OFFSET
	bool                                               bEnableDedicatedServerRequiredBones;                      // 0x0D58(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0D59(0x0007) MISSED OFFSET
	TArray<struct FName>                               RequiredDedicatedServerBoneNames;                         // 0x0D60(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSkeletalMeshComponent");
		return ptr;
	}


	void SetTeleportDistanceDeltaThreshold(float Threshold);
	void SetForceTextureResidentFlag(bool bEnable);
	float GetTeleportDistanceDeltaThreshold();
	bool GetForceTextureResidentFlag();
};


// Class Killstreak.KSCharacterSkeletalMeshComponent
// 0x0080 (0x0DF0 - 0x0D70)
class UKSCharacterSkeletalMeshComponent : public UKSSkeletalMeshComponent
{
public:
	TMap<struct FName, class UPhysicsAsset*>           ChildPhysicsAssetMap;                                     // 0x0D70(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSChildPhysicsAssetKeywords>        ChildPhysicsAssetKeywords;                                // 0x0DC0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBasePhysicsAssetChanged;                                 // 0x0DD0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0DD1(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UPhysicsAsset>                LastBasePhysAssetFromMesh;                                // 0x0DD4(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0DDC(0x0004) MISSED OFFSET
	TArray<struct FChildBodyCollisionProfileCache>     PreRegistrationChildCollisionCache;                       // 0x0DE0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterSkeletalMeshComponent");
		return ptr;
	}

};


// Class Killstreak.KSCharacterSocketComponent
// 0x0010 (0x0220 - 0x0210)
class UKSCharacterSocketComponent : public USceneComponent
{
public:
	EKSSocketOffsetType                                OffsetType;                                               // 0x0210(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSSocketCrouchHandling                            CrouchingHandlingType;                                    // 0x0211(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0212(0x0002) MISSED OFFSET
	struct FVector                                     AdditiveCrouchOffset;                                     // 0x0214(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCharacterSocketComponent");
		return ptr;
	}

};


// Class Killstreak.KSCheatComponent
// 0x0048 (0x00F8 - 0x00B0)
class UKSCheatComponent : public UPGame_CheatComponent
{
public:
	float                                              WeaponStatDisplayTime;                                    // 0x00B0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DifficultyLevelsDisplayTime;                              // 0x00B4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoCooldown : 1;                                        // 0x00B8(0x0001) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoEnergyUsage : 1;                                     // 0x00B8(0x0001) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_bNoDamageTaken : 1;                                     // 0x00B8(0x0001) (CPF_Net, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_CanViewHealth : 1;                                      // 0x00B8(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_CanViewLocation : 1;                                    // 0x00B8(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      r_HudVisible : 1;                                         // 0x00B8(0x0001) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	TArray<struct FString>                             CachedWeaponStats;                                        // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              WeaponDisplayStartTime;                                   // 0x00D0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<struct FString>                             CachedDifficultyLevels;                                   // 0x00D8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              DifficultyLevelsDisplayStartTime;                         // 0x00E8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   BaseDrawPosition;                                         // 0x00EC(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCheatComponent");
		return ptr;
	}


	void WarpZ(float Z);
	void WarpToSpawn();
	void Warp(float X, float Y, float Z);
	void ToggleWeaponDebug();
	void ToggleHud();
	void ToggleGamepadAimDebug();
	void ToggleBotsPaused();
	void ToggleAimAssistStrengthDebug();
	void TestPreviewActor(int PositionIndex, const struct FString& JobName, const struct FString& SkinName);
	void TakeDamage(const struct FString& WeaponName, float Amount, bool Head);
	void Suicide();
	void Spectate();
	void Spawn(const struct FString& BotName, int TeamNum, int Count, float Offset);
	void ShowWeaponStats();
	void ShowMMR();
	void ShowLocation(bool Visible);
	void ShowKillCamWorld(float Duration);
	void ShowHealth(bool Visible);
	void ShowDifficulties();
	void ShowBots(bool Show);
	void SetTimeLeft(float Seconds);
	void SetTeam(int Team);
	void SetGroundSpeed(float Speed);
	void SetDifficulty(int TeamNumber, int DifficultyIndex);
	void SetBotsPaused(bool bShouldPause);
	void ServerWarpZ(float Z);
	void ServerWarpToSpawn();
	void ServerWarp(float X, float Y, float Z);
	void ServerToggleHud();
	void ServerTakeDamage(const struct FString& WeaponName, float Amount, bool Head);
	void ServerSuicide();
	void ServerSpectate();
	void ServerSpawn(const struct FString& BotName, int TeamNum, int Count, float Offset);
	void ServerShowMMR();
	void ServerShowLocation(bool Visible);
	void ServerShowHealth(bool Visible);
	void ServerShowDifficulties();
	void ServerShowBots(bool Show);
	void ServerSetTimeLeft(float Seconds);
	void ServerSetTeam(int Team);
	void ServerSetGroundSpeed(float Speed);
	void ServerSetDifficulty(int TeamNumber, int DifficultyIndex);
	void ServerSetBotsPaused(bool bShouldPause, bool bShouldToggle);
	void ServerRemoveFromLoadout(const struct FString& ItemName);
	void ServerRemoveAllMods();
	void ServerQuickEndGame(class AKSTeamState* WinningTeam);
	void ServerProjectileRepVis(bool bEnable, float Lifetime);
	void ServerInvisMe(bool Invis);
	void ServerInstantReplay(float TimeToReplay, float Duration);
	void ServerInfiniteAmmo(bool Infinite);
	void ServerGod();
	void ServerGiveKSPoints(int Amount);
	void ServerGiveAsync(const struct FString& ItemName);
	void ServerGiveAllKSPoints(int Amount);
	void ServerGive(const struct FString& ItemName);
	void ServerEnableTeamSurrender(class AKSTeamState* Team);
	void ServerEnableKillCam();
	void ServerDrop(const struct FString& ItemName);
	void ServerDisableAFKTimer();
	void ServerCharReset();
	void ServerChangeCash(int CashDelta);
	void ServerBotGodMode(bool Enable);
	void ServerAttach(const struct FString& AttachmentName);
	void ServerAdjustDifficulty(int Amount);
	void ServerAddToLoadout(const struct FString& ItemName);
	void ServerAddAttachmentToLoadout(const struct FString& ItemName, const struct FString& AttachmentName);
	void RemoveFromLoadout(const struct FString& ItemName);
	void RemoveAllMods();
	void QuickEndGame(bool bWin);
	void QEG(bool bWin);
	void ProjectileReplicationVisualization(bool bEnable, float Lifetime);
	void OnRep_HudVisible();
	void OnRep_CanViewLocation();
	void OnRep_CanViewDebugHealth();
	void NextPerfCaptureCamera();
	void InvisMe(bool Invis);
	void InstantReplay(float TimeToReplay, float Duration);
	void InfiniteAmmo(bool Infinite);
	void God();
	void GiveSkin(const struct FString& SkinName);
	void GiveKSPoints(int Amount);
	void GiveAsync(const struct FString& ItemName);
	void GiveAllKSPoints(int Amount);
	void Give(const struct FString& ItemName);
	void EnableTeamSurrender();
	void EnableSound();
	void EnableKillCam();
	void Drop(const struct FString& ItemName);
	void DownSelf();
	void DisableSound();
	void DisableAFKTimer();
	void DevHackRequestLateJoinForPIE();
	void DebugThreatLevels(bool Show);
	void Communicate(const struct FString& CommunicationName);
	void ClientShowMMR(float MMR);
	void CharReset();
	void ChangeCash(int CashDelta);
	void BotGodMode(bool Enable);
	void Attach(const struct FString& AttachmentName);
	void AdjustDifficulty(int Amount);
	void AddToLoadout(const struct FString& ItemName);
	void AddAttachmentToLoadout(const struct FString& ItemName, const struct FString& AttachmentName);
};


// Class Killstreak.KSCheatComponent_Lobby
// 0x0000 (0x00B0 - 0x00B0)
class UKSCheatComponent_Lobby : public UPGame_CheatComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCheatComponent_Lobby");
		return ptr;
	}


	void TestPreviewActor(int PositionIndex, const struct FString& JobName, const struct FString& SkinName);
	void TestEmote(int PositionIndex, const struct FString& EmoteName);
};


// Class Killstreak.KSJobSelectPreviewActor
// 0x0228 (0x0448 - 0x0220)
class AKSJobSelectPreviewActor : public AInfo
{
public:
	TWeakObjectPtr<class UKSPersistentPlayerData>      OwningPersistantPlayerData;                               // 0x0220(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      LobbyCharacterClass;                                      // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSLobbyCharacter*                           ChildLobbyCharacter;                                      // 0x0230(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ModelViewerDelay;                                         // 0x0238(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EJobSelectionState                                 JobSelectionState;                                        // 0x023C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2B];                                      // 0x023D(0x002B) MISSED OFFSET
	TArray<struct FName>                               SkinPreloadBundles;                                       // 0x0268(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                PositionIndex;                                            // 0x0278(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOffsetCharacterByCapsuleHeight;                          // 0x027C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bKeepActiveJobVisibleWhileLoading;                        // 0x027D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x027E(0x0002) MISSED OFFSET
	class USceneComponent*                             BaseComponent;                                            // 0x0280(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                JobModelViewerTimer;                                      // 0x0288(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSJobItem*                                  ActiveJobItem;                                            // 0x0290(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSSkinBundle*                               ActiveSkinBundle;                                         // 0x0298(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, class UKSItem*>               ActiveFullSkinMap;                                        // 0x02A0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UKSJobItem>                   QueuedJob;                                                // 0x02F0(0x0028) (CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UKSSkinBundle>                QueuedSkin;                                               // 0x0318(0x0028) (CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EKSJobSelectPreviewLoadState                       CachedState;                                              // 0x0340(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bHideChildCharacter;                                      // 0x0341(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x1E];                                      // 0x0342(0x001E) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJobPreviewStateChangedDel;                              // 0x0360(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataSetDel;                             // 0x0370(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0380(0x0018) MISSED OFFSET
	class UKSJobItem*                                  JobFromLoadout;                                           // 0x0398(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, class UKSItem*>               PendingFullSkinMap;                                       // 0x03A0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, struct FPreviewActorPropSkinInfo> PropsAndSkins;                                            // 0x03F0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0440(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectPreviewActor");
		return ptr;
	}


	void SetPersistantPlayerData(class UKSPersistentPlayerData* PersistantPlayerData);
	void SetModelViewerDelay(float Timer);
	void SetJobToQueuedId();
	void SetJobAndSkin(TSoftObjectPtr<class UKSJobItem> InJobItem, TSoftObjectPtr<class UKSSkinBundle> InSkinItem);
	void SetJob(TSoftObjectPtr<class UKSJobItem> InJobItem);
	void SetHoveredJob(int JobId, int SkinId, EJobSelectionState InJobSelectionState);
	void SetCharacterHidden(bool bShouldHide);
	void PreLobbyCharacterDestroy();
	void PostLobbyCharacterSpawned();
	bool IsLockedIn();
	bool HasQueuedJob();
	class UKSSkinBundle* GetSkinBundle();
	EKSJobSelectPreviewLoadState GetPreviewLoadState();
	int GetPositionIndex();
	class UKSPersistentPlayerData* GetPersistantPlayerData();
	class AKSLobbyCharacter* GetLobbyCharacter();
	class UKSJobItem* GetJobItem();
	bool GetCharacterShouldBeHidden();
	struct FText GetCharacterName();
	struct FString GetCharacterFriendlySearchName();
	void CheatSetJobAndSkin(TSoftObjectPtr<class UKSJobItem> InJobItem, TSoftObjectPtr<class UKSSkinBundle> InSkinItem);
	void CheatClearJob();
	void CallShowLobbyCharacterFromEnablingCinematic(const struct FString& CinematicSubLevelName);
	void CallHideLobbyCharacterFromDisablingCinematic(const struct FString& CinematicSubLevelName);
	void BlueprintStateChanged(EKSJobSelectPreviewLoadState PreviousState);
};


// Class Killstreak.KSCinematicCharacterManager
// 0x0010 (0x0458 - 0x0448)
class AKSCinematicCharacterManager : public AKSJobSelectPreviewActor
{
public:
	class AKSCinematicSequenceManager*                 CinematicSequenceManager;                                 // 0x0448(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSCinematicCharacterType                          CinematicCharacterType;                                   // 0x0450(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireCharacterToBeVisibleToCountAsLoaded;              // 0x0451(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0452(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCinematicCharacterManager");
		return ptr;
	}


	bool VerifyCinematicCharacterLoaded();
	void OnNewCharacterTimeDilationSet(float NewDilation);
	void OnCharacterSpawned(class AKSCharacter* SpawnedCharacter);
	class AKSCharacter* GetCinematicCharacter();
};


// Class Killstreak.KSCinematicDataContainer
// 0x0050 (0x0080 - 0x0030)
class UKSCinematicDataContainer : public UDataAsset
{
public:
	TMap<struct FName, struct FKSCinematicData>        CinematicDatas;                                           // 0x0030(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCinematicDataContainer");
		return ptr;
	}


	struct FName GetDefaultCameraTag(const struct FName& CinematicName);
	struct FString GetCinematicSubLevelName(const struct FName& CinematicName);
	struct FText GetCinematicDisplayName(const struct FName& CinematicName);
	TArray<struct FString> GetAllCinematicSubLevelNames();
};


// Class Killstreak.KSCinematicSequenceManager
// 0x0028 (0x0248 - 0x0220)
class AKSCinematicSequenceManager : public AActor
{
public:
	class ALevelSequenceActor*                         SequenceActor;                                            // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class ULevelSequence*                              Sequence;                                                 // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCinematicCharacterManager*>        CinematicCharacterHandles;                                // 0x0230(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      CinematicCharacterClass;                                  // 0x0240(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCinematicSequenceManager");
		return ptr;
	}


	bool VerifyAllCinematicCharactersLoaded();
	void SetCinematicCharactersTimeDilation(float NewDilation);
	void SetCinematicCharactersFromWinningTeam();
	void SetCinematicCharactersFromPlayerTeam();
	bool PlaySequence(bool bRequireCharactersLoaded);
	class ULevelSequence* GetSequence();
	TArray<class AKSCharacter*> GetCinematicCharacters();
	TArray<class AKSCinematicCharacterManager*> GetCinematicCharacterManagers();
};


// Class Killstreak.KSTeamCinematicSequenceManager
// 0x0068 (0x02B0 - 0x0248)
class AKSTeamCinematicSequenceManager : public AKSCinematicSequenceManager
{
public:
	bool                                               bUseDebugTeamSize;                                        // 0x0248(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	TMap<int, class ULevelSequence*>                   SequenceList;                                             // 0x0250(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class ULevelSequence*                              DefaultLevelSequence;                                     // 0x02A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DebugTeamSize;                                            // 0x02A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTeamCinematicSequenceManager");
		return ptr;
	}

};


// Class Killstreak.KSCircleDeadZoneFilter
// 0x0008 (0x0040 - 0x0038)
class UKSCircleDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	float                                              DeadZoneRadius;                                           // 0x0038(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CardinalDeadZoneHalfWidth;                                // 0x003C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCircleDeadZoneFilter");
		return ptr;
	}

};


// Class Killstreak.KSWeaponTargetingModule
// 0x0108 (0x0130 - 0x0028)
class UKSWeaponTargetingModule : public UObject
{
public:
	struct FTargetingModuleTickFunction                TargetingTick;                                            // 0x0028(0x0030) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	int                                                TargetingIndex;                                           // 0x0058(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       ModeKey;                                                  // 0x005C(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0064(0x000C) MISSED OFFSET
	struct FTransform                                  OverriddenOriginTransform;                                // 0x0070(0x0030) (CPF_BlueprintVisible, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  OverriddenOriginTransformOffset;                          // 0x00A0(0x0030) (CPF_BlueprintVisible, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bOverrideOriginTransform;                                 // 0x00D0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCookTimeAffectsVisuals;                                  // 0x00D1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00D2(0x0002) MISSED OFFSET
	struct FName                                       AimPostProcessCookTimeParameterName;                      // 0x00D4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	class UMaterialInterface*                          AimPostProcessMaterial;                                   // 0x00E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    AimPostProcessMaterialInstance;                           // 0x00E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              OverriddenWeaponAsset;                                    // 0x00F0(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSWeaponTargetingModule*>            ChildTargetingModules;                                    // 0x00F8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitScanRange;                                             // 0x0108(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0xC];                                       // 0x010C(0x000C) MISSED OFFSET
	class UKSWeaponComponent*                          OwningWeaponComponent;                                    // 0x0118(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSCharacter*                                OwningCharacter;                                          // 0x0120(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponTargetingModule");
		return ptr;
	}


	void UpdateOverriddenOriginTransformOffset(const struct FTransform& NewOverriddenOriginTransformOffset);
	void UpdateOverriddenOriginTransform(const struct FTransform& NewOverriddenOriginTransform);
	void UpdateCachedHoveredActor(class AActor* NewCachedHoveredActor);
	void TickTargeting(float DeltaSeconds);
	bool ShouldShowPath();
	void SetShowPath(bool bNewShowPath);
	void SetParentTargetingModule(class UKSWeaponTargetingModule* NewParentTargetingModule);
	void SetOverrideOriginTransform(bool bNewOverrideOriginTransform);
	void SetOverriddenWeaponAsset(class UKSWeaponAsset* NewOverriddenWeaponAsset);
	void SetAimPostProcessMaterialInstance(class UMaterialInstanceDynamic* NewAimPostProcessMaterialInstance);
	void LookForHoveredActors();
	bool IsTargetingModeEnabled();
	bool IsAimedAtFriendly();
	bool IsAimedAtEnemy();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	int GetTargetingIndex();
	class AKSCharacter* GetOwningCharacter();
	struct FTransform GetOverriddenOriginTransform();
	struct FTransform GetOriginTransform();
	struct FName GetModeKey();
	class UMaterialInstanceDynamic* GetAimPostProcessMaterialInstance();
	class UMaterialInterface* GetAimPostProcessMaterial();
	void ExitTargetingMode();
	void EnterTargetingMode();
	class UKSWeaponTargetingModule* AddChildTargetingModule(class UKSWeaponAsset* NewTargetingModuleWeaponAsset, int ChildTargetingIndex, bool bUsesOverrideOriginTransform, class UMaterialInstanceDynamic* SharedAimPostProcessMaterialInstance);
};


// Class Killstreak.KSProjectileTargetingModule
// 0x0270 (0x03A0 - 0x0130)
class UKSProjectileTargetingModule : public UKSWeaponTargetingModule
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET
	float                                              ProjectileSimFrequency;                                   // 0x0138(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSimTime;                                               // 0x013C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              InitialStrideTime;                                        // 0x0140(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	class UStaticMesh*                                 ArcTemplate;                                              // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>                  ArcSegmentMaterials;                                      // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       FirstSegmentScalarParameterName;                          // 0x0160(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ArcColorParameterName;                                    // 0x0168(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ArcCookParameterName;                                     // 0x0170(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PostProcessStopLocationParameterName;                     // 0x0178(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       PostProcessRadiusParameterName;                           // 0x0180(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPostProcessParameterIndexed;                             // 0x0188(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSProjectileTargetingHitComponentType             ImpactComponentType;                                      // 0x0189(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSProjectileTargetingHitComponentType             BounceComponentType;                                      // 0x018A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x018B(0x0001) MISSED OFFSET
	struct FVector                                     ImpactComponentSize;                                      // 0x018C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     BounceComponentSize;                                      // 0x0198(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	class UMaterialInterface*                          ImpactComponentMaterial;                                  // 0x01A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInterface*                          BounceComponentMaterial;                                  // 0x01B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ImpactColorParameterName;                                 // 0x01B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ImpactCookParameterName;                                  // 0x01C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       BounceColorParameterName;                                 // 0x01C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       BounceCookParameterName;                                  // 0x01D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ImpactMesh;                                               // 0x01D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 BounceMesh;                                               // 0x01E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ESplineMeshAxis>                       SplineMeshAxisType;                                       // 0x01E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	struct FVector2D                                   ArcSegmentScale;                                          // 0x01EC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                BounceCount;                                              // 0x01F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxSegmentsPerBounceArc;                                  // 0x01F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET
	class UClass*                                      TargetingDetailsWidgetClass;                              // 0x0200(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class USplineMeshComponent*>                ArcComponent;                                             // 0x0208(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    ImpactMaterialInstance;                                   // 0x0218(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    BounceMaterialInstance;                                   // 0x0220(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>            ArcSegmentMaterialInstances;                              // 0x0228(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             ImpactComponent;                                          // 0x0238(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     BounceComponents;                                         // 0x0240(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UWidgetComponent*                            TargetingDetailsWidgetComponent;                          // 0x0250(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSTargetingDetailsWidget*                   TargetingDetailsWidget;                                   // 0x0258(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSWeaponAsset_WithProjectile*               ProjectileAsset;                                          // 0x0260(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSProjectile*                               ProjectileCDO;                                            // 0x0268(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0270(0x0010) MISSED OFFSET
	struct FPredictProjectilePathResult                CachedPredictedPathResults;                               // 0x0280(0x00B8) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              PredictedGrenadePathArcLength;                            // 0x0338(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x64];                                      // 0x033C(0x0064) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectileTargetingModule");
		return ptr;
	}


	class UKSWeaponAsset_WithProjectile* GetWeaponAsset_WithProjectile();
	struct FName GetInstancedPostProcessStopLocationParameterName();
	struct FName GetInstancedPostProcessRadiusParameterName();
};


// Class Killstreak.KSGrenadeTargetingModule
// 0x0050 (0x03F0 - 0x03A0)
class UKSGrenadeTargetingModule : public UKSProjectileTargetingModule
{
public:
	struct FLinearColor                                FuseWarningColor;                                         // 0x03A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLinearColor                                FuseSafeColor;                                            // 0x03B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FuseWarningStartTime;                                     // 0x03C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	class UKSWeaponAsset_Grenade*                      GrenadeAsset;                                             // 0x03C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x20];                                      // 0x03D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGrenadeTargetingModule");
		return ptr;
	}


	class UKSWeaponAsset_Grenade* GetWeaponAsset_Grenade();
};


// Class Killstreak.KSClusterGrenadeTargetingModule
// 0x0000 (0x03F0 - 0x03F0)
class UKSClusterGrenadeTargetingModule : public UKSGrenadeTargetingModule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSClusterGrenadeTargetingModule");
		return ptr;
	}

};


// Class Killstreak.KSCombatLogVisualizer
// 0x0050 (0x0280 - 0x0230)
class AKSCombatLogVisualizer : public APGame_CombatLogVisualizer
{
public:
	TMap<struct FString, struct FCharacterArray>       Characters;                                               // 0x0230(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCombatLogVisualizer");
		return ptr;
	}

};


// Class Killstreak.KSRadialMenuItem
// 0x0068 (0x0298 - 0x0230)
class UKSRadialMenuItem : public UKSItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0230(0x0008) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       RadialMenuItemInstanceClass;                              // 0x0238(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSoftDataTableInfo>                  AssetDataTables;                                          // 0x0260(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UKSJobItem>>           JobAllowList;                                             // 0x0270(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GlobalRadialMenuItemCooldownTime;                         // 0x0280(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ERadialMenuItemInterruptNotifyBehaviorType         InterruptNotifyBehavior;                                  // 0x0284(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0285(0x0003) MISSED OFFSET
	float                                              RadialMenuItemIsPlayingTimeout;                           // 0x0288(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSRadialMenuItemInterruptRules             InterruptRules;                                           // 0x028C(0x0004) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockPawnRotationWhilePlaying;                            // 0x0290(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSEmotion                                         Emotion;                                                  // 0x0291(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0292(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRadialMenuItem");
		return ptr;
	}


	bool ShouldPreventPlay(EKSRadialMenuItemInterruptReason InReason);
	bool ShouldInterrupt(EKSRadialMenuItemInterruptReason InReason);
	bool IsJobAllowed(TSoftObjectPtr<class UKSJobItem> Item);
	bool IsAllowedForAllJobs();
	TSoftObjectPtr<class UClass> GetRadialMenuItemInstanceClass();
	bool GetLockPawnRotationWhilePlaying();
	struct FGameplayTag GetGameplayTagBase();
	EKSEmotion GetEmotionToApply();
	struct FString GetCosmeticSlotString();
	EMercCosmeticSlot GetCosmeticSlot();
	TArray<TSoftObjectPtr<class UKSJobItem>> GetAllowedJobs();
};


// Class Killstreak.KSCommunication
// 0x0008 (0x02A0 - 0x0298)
class UKSCommunication : public UKSRadialMenuItem
{
public:
	EPingType                                          PingType;                                                 // 0x0298(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EPingMessage                                       PingMessage;                                              // 0x0299(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x029A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCommunication");
		return ptr;
	}

};


// Class Killstreak.KSRadialMenuItemInstance
// 0x0008 (0x02C8 - 0x02C0)
class AKSRadialMenuItemInstance : public AKSEquipment
{
public:
	class UKSRadialMenuItem*                           RadialMenuItemAsset;                                      // 0x02C0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRadialMenuItemInstance");
		return ptr;
	}


	void ServerPlayRadialMenuItem();
	void ServerForceStopRadialMenuItem();
	bool PlayRadialMenuItem(bool bForcePlayRadialMenuItem, EKSRadialMenuItemInterruptReason* OutInterruptReason);
	void OnRep_RadialMenuItemAsset();
	bool IsThrottled();
	bool IsManagingRadialMenuItemLocally();
	class UKSRadialMenuItem* GetRadialMenuItemAsset();
	class AKSCharacter* GetActiveCharacterOwner();
	void ForceStopRadialMenuItem();
	void DoRadialMenuItem();
	bool CanPlayRadialMenuItemNow(EKSRadialMenuItemInterruptReason* OutInterruptReason);
};


// Class Killstreak.KSCommunicationInstance
// 0x0000 (0x02C8 - 0x02C8)
class AKSCommunicationInstance : public AKSRadialMenuItemInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCommunicationInstance");
		return ptr;
	}

};


// Class Killstreak.KSControllerInterface
// 0x0000 (0x0028 - 0x0028)
class UKSControllerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSControllerInterface");
		return ptr;
	}


	void RecordDamageDealt(float ProratedDamage, float ActualDamage, class UDamageType* DamageType, class AActor* DamagedActor, class AActor* DamageCauser);
	void OnTeamUpdated();
	void OnSideUpdated();
	class AKSTeamState* GetTeam();
	int GetSkinLevel();
	int GetSkinId();
	int GetSideNum();
	class AKSPlayerState* GetKSPlayerState();
	class AKSCharacterBase* GetKSCharacter();
	class AController* GetController();
	class UKSCheatComponent* GetCheatComponent();
	int GetBotId();
};


// Class Killstreak.KSControlPoint
// 0x01A8 (0x0528 - 0x0380)
class AKSControlPoint : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0380(0x0010) MISSED OFFSET
	EKSPOIState                                        POIState;                                                 // 0x0390(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	struct FKSObjectiveInfo                            ObjectiveInfo;                                            // 0x0398(0x00B0) (CPF_Net, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnCapturedDelegate;                                       // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUncapturedDelegate;                                     // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnContestedDelegate;                                      // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUncontestedDelegate;                                    // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCapturingTeamChangedDelegate;                           // 0x0488(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScorePeriodElapsedDelegate;                             // 0x0498(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FKSControlPointSettings                     ControlPointSettings;                                     // 0x04A8(0x0030) (CPF_Edit, CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                OwningTeam;                                               // 0x04D8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                CapturingTeam;                                            // 0x04E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CaptureProgress;                                          // 0x04E8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ScoreUpdatePeriod;                                        // 0x04EC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      NumTeamMembersCapturing;                                  // 0x04F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04F1(0x0003) MISSED OFFSET
	float                                              SimulatedProgressRate;                                    // 0x04F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SimulatedTimeUntilScore;                                  // 0x04F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FavoredSide;                                              // 0x04FC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHideLocked;                                              // 0x0500(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 RegisteredPawnOverlapComponents;                          // 0x0508(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSCharacterBase*>                    OverlappingPawns;                                         // 0x0518(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSControlPoint");
		return ptr;
	}


	void UpdateControlPointSettings(const struct FKSControlPointSettings& NewSettings);
	void ResetScoreProgress();
	void RemovePrimitiveToPawnOverlapCheck(class UPrimitiveComponent* InPrimitive);
	void OnRep_OwningTeam();
	void OnRep_ObjectiveInfo();
	void OnRep_GenericCaptureProgress();
	void OnRep_CapturingTeam();
	void OnOwningTeamChanged(class AKSTeamState* NewTeam);
	void OnObjectiveTimerTickEvent(float Time);
	void OnObjectiveTimerCompleteEvent();
	void OnObjectiveTimerActiveEvent(bool Active);
	void OnObjectiveStateChangedEvent();
	void OnObjectiveInactiveEvent();
	void OnObjectiveActiveEvent();
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnCapturingTeamChanged(class AKSTeamState* NewTeam);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	float GetUpdateRateForControlPoint();
	float GetScorePeriodForControlPoint();
	class AKSTeamState* GetOwningTeam();
	class AKSTeamState* GetCapturingTeam();
	bool CheckIfPointCausesSuddenDeath();
	void BroadcastPointUncaptured();
	void BroadcastPointScored();
	void BroadcastPointCaptured();
	void AddPrimitiveToPawnOverlapCheck(class UPrimitiveComponent* InPrimitive);
};


// Class Killstreak.KSCosmeticStateReplicator
// 0x0058 (0x0278 - 0x0220)
class AKSCosmeticStateReplicator : public AInfo
{
public:
	struct FScriptMulticastDelegate                    OnCosmeticCountUpdate;                                    // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCosmeticEvent;                                          // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	int                                                OriginalOwnerPlayerId;                                    // 0x0240(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	class UKSItem*                                     AssociatedCosmeticItem;                                   // 0x0248(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UActorComponent>              OwningCosmeticInst;                                       // 0x0250(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CosmeticOwningActor;                                      // 0x0258(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECosmeticStateTriggerType                          CosmeticTriggerType;                                      // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECosmeticStateSimulationType                       CosmeticSimulationType;                                   // 0x0261(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0262(0x0002) MISSED OFFSET
	float                                              LooseLifespan;                                            // 0x0264(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CsrId;                                                    // 0x0268(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CosmeticTriggerCount;                                     // 0x026C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                LocalTriggerCount;                                        // 0x0270(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPendingRestoration;                                      // 0x0274(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0275(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCosmeticStateReplicator");
		return ptr;
	}


	void TriggerCosmetic(bool Reverse);
	void SyncProgressionWithAuthority();
	void SetStoredProgression(int NewValue);
	void OnRep_CsrId();
	void OnRep_CosmeticTriggerCount();
	void OnRep_CosmeticOwningActor();
	bool IsPendingRestoration();
	int GetStoredProgression();
	int GetCsrId();
	void BroadcastCosmeticEvent();
	void AdjustStoredProgression(int Delta);
};


// Class Killstreak.KSCosmeticRep_WeaponAttachment
// 0x0028 (0x02A0 - 0x0278)
class AKSCosmeticRep_WeaponAttachment : public AKSCosmeticStateReplicator
{
public:
	class UKSAttachCosmeticInst_Reactive*              OwningWrapInstance;                                       // 0x0278(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              OwningEquipmentId;                                        // 0x0280(0x0004) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0284(0x0004) MISSED OFFSET
	class UKSWeaponAttachmentInstance*                 OwningFunctionalAttachment;                               // 0x0288(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0290(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCosmeticRep_WeaponAttachment");
		return ptr;
	}


	void PreUpdateOwningWrapInstance();
	void OnRep_OwningFunctionalAttachment();
	void OnRep_OwningEquipmentId();
	void OnOwningWrapInstanceUpdated();
	void OnOwningEquipmentCreated(class UKSEquipmentCosmeticComponent* NewEquipmentCosmetic);
	void OnOwningCosmeticInitialized(class UKSWeaponAttachmentCosmeticInst* InitializedCosmetic);
	void OnFunctionalInstCreateCosmetic(class UKSWeaponAttachmentCosmeticInst* NewAttachCosmetic);
};


// Class Killstreak.KSCustomApparelComponent
// 0x0020 (0x00D0 - 0x00B0)
class UKSCustomApparelComponent : public UActorComponent
{
public:
	bool                                               bLinkLocalSkinObjectToBodyApparel;                        // 0x00B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x00B8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSApparelAsset_CustomComponent*             ApparelAsset;                                             // 0x00C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UMultiSkinObject*                            SkinObject;                                               // 0x00C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSCustomApparelComponent");
		return ptr;
	}


	class UMultiSkinObject* GetSkinObject();
	class AKSCharacter* GetCharacterOwner();
	class UKSApparelAsset_CustomComponent* GetApparelAsset();
	void BlueprintPlayAbilityCosmetics();
	void BlueprintFinishedInitialization();
};


// Class Killstreak.KSDamageable
// 0x0000 (0x0028 - 0x0028)
class UKSDamageable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageable");
		return ptr;
	}


	void ReportDamageByInstigator(const struct FCombatEventInfo& DamageInfo);
	EHitLocationType GetHitLocationTypeFromBoneName(const struct FName& BoneName);
	bool DoesBoneAllowHeadshotPassthrough(const struct FName& BoneName);
};


// Class Killstreak.KSDamageTypeBase
// 0x00F8 (0x0138 - 0x0040)
class UKSDamageTypeBase : public UDamageType
{
public:
	EDamageCategory                                    DamageCategory;                                           // 0x0040(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UParticleSystem*                             HitPawnEffect;                                            // 0x0048(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitBodyAudioEvent;                                        // 0x0050(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitHeadAudioEvent;                                        // 0x0058(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitResistedAudioEvent;                                    // 0x0060(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitReducedAudioEvent;                                     // 0x0068(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByAudioEvent;                                          // 0x0070(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByResistedAudioEvent;                                  // 0x0078(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HitByReducedAudioEvent;                                   // 0x0080(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FKSSpecialEffect                            HitSpecialEffect;                                         // 0x0088(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FName                                       EffectAttachPointName;                                    // 0x00D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPreProcessResistable;                                    // 0x00E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRequiresDamageForDebuffs;                                // 0x00E1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUIDisplayable;                                           // 0x00E2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bClientPredictable;                                       // 0x00E3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bHideDamageDirection;                                     // 0x00E4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCountTowardsTrackedFriendlyFireDamage;                   // 0x00E5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoFriendlyDamageWithReverseFriendlyFire;                 // 0x00E6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00E7(0x0001) MISSED OFFSET
	TArray<class UKSPlayerMod*>                        DebuffsAppliedOnDamage;                                   // 0x00E8(0x0010) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchDuration;                                           // 0x00F8(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchRecoveryRate;                                       // 0x00FC(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchMinHeightBody;                                      // 0x0100(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchMaxHeightBody;                                      // 0x0104(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchMinHeightHead;                                      // 0x0108(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FlinchMaxHeightHead;                                      // 0x010C(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       DamageTags;                                               // 0x0110(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	float                                              ImpulseMagnitudePerDamage;                                // 0x0130(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeBase");
		return ptr;
	}


	bool PreProcessDamageEffects(class AActor* DamagedActor, const struct FKSDamageEventInfo& DamageEventInfo, class AController* EventInstigator, class AActor* DamageCauser, float* Damage);
	void PostProcessDamageEffects(class AActor* DamagedActor, float AttemptedDamage, float ActualDamage, const struct FKSDamageEventInfo& DamageEventInfo, class AController* EventInstigator, class AActor* DamageCauser, bool IsKillEvent);
	static void GetDefaultObjectPropertiesFromDamageType(class UClass* DamageTypeClass, class UParticleSystem** OutHitPawnEffect, class UAkAudioEvent** OutHitBodyAudioEvent, class UAkAudioEvent** OutHitHeadAudioEvent, class UAkAudioEvent** OutHitByAudioEvent);
};


// Class Killstreak.KSDamageTypeDisperse
// 0x0000 (0x0138 - 0x0138)
class UKSDamageTypeDisperse : public UKSDamageTypeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeDisperse");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeEMP
// 0x0008 (0x0140 - 0x0138)
class UKSDamageTypeEMP : public UKSDamageTypeBase
{
public:
	float                                              EMPDuration;                                              // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeEMP");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeFire
// 0x0008 (0x0140 - 0x0138)
class UKSDamageTypeFire : public UKSDamageTypeBase
{
public:
	float                                              FireDuration;                                             // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeFire");
		return ptr;
	}

};


// Class Killstreak.KSFlashSource
// 0x0000 (0x0028 - 0x0028)
class UKSFlashSource : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFlashSource");
		return ptr;
	}


	class UCurveFloat* GetFlashCurve(EFlashBangIntensity Intensity);
	EFlashBangIntensity DetermineFlashIntensity(class AKSCharacter* FlashedCharacter);
};


// Class Killstreak.KSDamageTypeFlashBang
// 0x0008 (0x0140 - 0x0138)
class UKSDamageTypeFlashBang : public UKSDamageTypeBase
{
public:
	float                                              EffectiveAngle;                                           // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeFlashBang");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeMaxHealth
// 0x0000 (0x0138 - 0x0138)
class UKSDamageTypeMaxHealth : public UKSDamageTypeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeMaxHealth");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeReverseFriendly
// 0x0000 (0x0138 - 0x0138)
class UKSDamageTypeReverseFriendly : public UKSDamageTypeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeReverseFriendly");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeSonar
// 0x0008 (0x0140 - 0x0138)
class UKSDamageTypeSonar : public UKSDamageTypeBase
{
public:
	bool                                               bRevealOnly;                                              // 0x0138(0x0001) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0139(0x0003) MISSED OFFSET
	float                                              RevealDuration;                                           // 0x013C(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeSonar");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeStuck
// 0x0000 (0x0138 - 0x0138)
class UKSDamageTypeStuck : public UKSDamageTypeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeStuck");
		return ptr;
	}

};


// Class Killstreak.KSDamageTypeStun
// 0x0008 (0x0140 - 0x0138)
class UKSDamageTypeStun : public UKSDamageTypeBase
{
public:
	float                                              StunDuration;                                             // 0x0138(0x0004) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDamageTypeStun");
		return ptr;
	}

};


// Class Killstreak.KSDefaultAimTargetingModule
// 0x0020 (0x0150 - 0x0130)
class UKSDefaultAimTargetingModule : public UKSWeaponTargetingModule
{
public:
	struct FVector                                     WallMarkerWorldLocation;                                  // 0x0130(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimedAtEnemy;                                            // 0x013C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimedAtFriendly;                                         // 0x013D(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x013E(0x0002) MISSED OFFSET
	class UKSWeaponAsset_WithProjectile*               ProjWeaponAsset;                                          // 0x0140(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDefaultAimTargetingModule");
		return ptr;
	}


	bool IsWallMarkerActive(struct FVector* WallLocation);
	bool IsCurrentlyBlocked();
};


// Class Killstreak.KSMapPoint
// 0x0038 (0x0258 - 0x0220)
class AKSMapPoint : public AActor
{
public:
	struct FGameplayTagContainer                       MapPointTypes;                                            // 0x0220(0x0020) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<int>                                        ValidSides;                                               // 0x0240(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldCrouch;                                            // 0x0250(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0251(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMapPoint");
		return ptr;
	}


	bool ShouldCrouch();
	bool MatchesTags(const struct FGameplayTagContainer& InMapPointTypes);
	bool MatchesTag(const struct FGameplayTag& InMapPointType);
	bool IsFriendly(class AActor* InActor);
	bool IsAvailable(class AActor* InActor);
	bool IsActive();
};


// Class Killstreak.KSDefensePoint
// 0x0020 (0x0278 - 0x0258)
class AKSDefensePoint : public AKSMapPoint
{
public:
	class AKSObjectiveBase*                            RelevantObjective;                                        // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              AssignedDefenders;                                        // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDefensePoint");
		return ptr;
	}


	void RelevantObjectiveUpdated(class AKSObjectiveBase* Objective);
	struct FVector GetTargetDefensePoint();
};


// Class Killstreak.KSDeployable
// 0x0000 (0x0028 - 0x0028)
class UKSDeployable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDeployable");
		return ptr;
	}


	bool ShouldSetFriendlyOutlineOnRegister();
	bool ShouldNotAffectTargetingReticle();
	bool ShouldDisablePingTargeting();
	bool ShouldDisablePingOutline();
	void SetOutlineColor(bool Enabled, const struct FKSOutlineParameters& OutlineParams, int Color);
};


// Class Killstreak.KSDestroyableHazard
// 0x0000 (0x0028 - 0x0028)
class UKSDestroyableHazard : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDestroyableHazard");
		return ptr;
	}

};


// Class Killstreak.KSDestroyableHazardComponent
// 0x0020 (0x00D0 - 0x00B0)
class UKSDestroyableHazardComponent : public UActorComponent
{
public:
	float                                              MinPerceptionValue;                                       // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxPerceptionValue;                                       // 0x00B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RandomizedPerceptionValue;                                // 0x00B8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldReactWithEMP;                                       // 0x00BC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldReactWithGunshot;                                   // 0x00BD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00BE(0x0002) MISSED OFFSET
	TArray<TSoftObjectPtr<class AActor>>               ActorsSeenBy;                                             // 0x00C0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDestroyableHazardComponent");
		return ptr;
	}


	bool ShouldFireAt();
	bool ShouldEMP();
};


// Class Killstreak.KSDestructibleBase
// 0x0170 (0x0390 - 0x0220)
class AKSDestructibleBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	bool                                               bRenderTrueCollisionUntilDestruction;                     // 0x0228(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0229(0x0007) MISSED OFFSET
	class USceneComponent*                             SceneRoot;                                                // 0x0230(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UDestructibleComponent*                      VisualMesh;                                               // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TrueCollision;                                            // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBoxComponent*                               SpeedOverlap;                                             // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowDestructibleMeshSimulation;                         // 0x0250(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowPlayerToWalkOnSurface;                              // 0x0251(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAllowDestructionAudio;                                   // 0x0252(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0253(0x0005) MISSED OFFSET
	class UAkAudioEvent*                               DefaultDestructionEvent;                                  // 0x0258(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSpawnBreakParticleAtActorLocation;                       // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	class UParticleSystem*                             BreakParticles;                                           // 0x0268(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UParticleSystem*                             ImpactParticles;                                          // 0x0270(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UParticleSystem*                             FakeHitDecalParticle;                                     // 0x0278(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      CharacterSpeedOverlapCameraShake;                         // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDestructibleDestroyed;                                  // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              MaxHealth;                                                // 0x0298(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              Health;                                                   // 0x029C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LocalHealth;                                              // 0x02A0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bResetOnRoundChange;                                      // 0x02A4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowsWeaponPenetration;                                 // 0x02A5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBreakWithSpeed;                                       // 0x02A6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllProjectilesInstantBreak;                              // 0x02A7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedBreakThreshold;                                      // 0x02A8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTransparentDestructible;                                 // 0x02AC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x02AD(0x0003) MISSED OFFSET
	TMap<EDamageCategory, float>                       DamageTypeMultipliers;                                    // 0x02B0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              BreakingDamage;                                           // 0x0300(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BreakingImpulse;                                          // 0x0304(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseRadialDestruction;                                    // 0x0308(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0309(0x0003) MISSED OFFSET
	float                                              BreakingRadius;                                           // 0x030C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ImpactImpulseOffset;                                      // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreCharacterVerticalSpeed;                            // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	float                                              BadDestroyCheckTime;                                      // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EventlessDestroyWaitTime;                                 // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               MeshDestroyed;                                            // 0x0320(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0321(0x0007) MISSED OFFSET
	class UPhysicalMaterial*                           PhysicalMaterialOverride;                                 // 0x0328(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UDestructibleMesh*                           MeshAsset;                                                // 0x0330(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitLocation;                                          // 0x0338(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitDirection;                                         // 0x0344(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LastHitNormal;                                            // 0x0350(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            FakeHitDecals;                                            // 0x0360(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x10];                                      // 0x0370(0x0010) MISSED OFFSET
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x0380(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDestructibleBase");
		return ptr;
	}


	void UndoBadDestroy();
	void SpeedGateOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool ShouldProjectilesInstantBreak();
	void SetupPreBroken();
	void ResetDestructible();
	int PostDestructionEvent(class UAkAudioEvent* InEvent);
	void OnRoundChange(const struct FRoundInitState& RoundInitState);
	void OnRep_Health();
	void OnDestructionChange(bool Destroyed, bool bInitialSetup);
	void OnDamageEvent(float NewHealth, const struct FVector& HitLocation, const struct FVector& HitDirection, const struct FVector& HitNormal, bool FromServer);
	float GetMaxHealth();
	float GetCurrentHealth();
	void BlueprintPrepareKillCamPlayback();
};


// Class Killstreak.KSDispersible
// 0x0000 (0x0028 - 0x0028)
class UKSDispersible : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDispersible");
		return ptr;
	}


	void Disperse(TArray<class USceneComponent*> HitComponents);
};


// Class Killstreak.KSDistanceOptimizationComponent
// 0x0040 (0x00F0 - 0x00B0)
class UKSDistanceOptimizationComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    DistanceOptimizationChangedDelegate;                      // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bAlwaysDisableOnServer;                                   // 0x00C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              ActiveDistance;                                           // 0x00C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CurrentDistance;                                          // 0x00C8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TArray<class UActorComponent*>                     ComponentsToControl;                                      // 0x00D0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class AActor*>                              ActorsToControl;                                          // 0x00E0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDistanceOptimizationComponent");
		return ptr;
	}


	bool IsCloseEnough();
	void DistanceOptimizationChangedDelegate__DelegateSignature(bool bShouldBeActive);
	void AddComponents(TArray<class UActorComponent*> InComponents);
	void AddComponent(class UActorComponent* InComponent);
	void AddActor(class AActor* Actor);
};


// Class Killstreak.KSDropLocation
// 0x0020 (0x0278 - 0x0258)
class AKSDropLocation : public AKSMapPoint
{
public:
	class AKSWayPointSet*                              WayPointSet;                                              // 0x0258(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ReverseWayPointSetDirection;                              // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	float                                              FlightDistanceModifier;                                   // 0x0264(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreefallXYDistance;                                       // 0x0268(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FreefallHeight;                                           // 0x026C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropLocation");
		return ptr;
	}


	bool ShouldReverseWayPointSetDirection();
	void IncrementSelectionCount();
	void HandleRoundSetup(const struct FRoundInitState& RoundInitState);
	class AKSWayPointSet* GetWayPointSet();
	TArray<int> GetValidSides();
	struct FVector GetTargetDropLocation();
	int GetNumTimesSelected();
	float GetFreefallXYDistance();
	float GetFreefallHeight();
	float GetFlightDistanceModifier();
};


// Class Killstreak.KSDropOffZone
// 0x00A8 (0x0428 - 0x0380)
class AKSDropOffZone : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0380(0x0010) MISSED OFFSET
	EKSPOIState                                        POIState;                                                 // 0x0390(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0391(0x0003) MISSED OFFSET
	int                                                Team;                                                     // 0x0394(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FlipTeam;                                                 // 0x0398(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bActivated;                                               // 0x039C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	struct FName                                       PointAreaComponentTag;                                    // 0x03A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 PointAreaComponents;                                      // 0x03A8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionManager*                       CurrentInteractionManager;                                // 0x03B8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                CurrentInteractor;                                        // 0x03C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentInteractionProgress;                               // 0x03C8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                MacGuffinEquipPoint;                                      // 0x03CC(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DropOffDuration;                                          // 0x03D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DropOffProgressText;                                      // 0x03D8(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DropOffPrompt;                                            // 0x03F0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       DropOffInteractionMode;                                   // 0x0408(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0410(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0418(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropOffZone");
		return ptr;
	}


	void TeamUpdated();
	void ResetZone();
	void OnRep_Team();
	void OnRep_Activated();
	void ActivateZone();
	void Activated(bool bActive);
};


// Class Killstreak.KSDropRuleComponent
// 0x0068 (0x0118 - 0x00B0)
class UKSDropRuleComponent : public UKSGameRuleComponent
{
public:
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDeath;                                 // 0x00B0(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSRandomDropEntry>                  RandomDeathDropList;                                      // 0x00D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       WeaponSlotsToDropOnDowned;                                // 0x00E0(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSRandomDropEntry>                  RandomDownDropList;                                       // 0x0100(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerDropLifetime;                                       // 0x0110(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropRuleComponent");
		return ptr;
	}


	void OnPlayerDowned(const struct FCombatEventInfo& EventInfo, int ExpBonus);
	void OnPlayerDeath(const struct FCombatEventInfo& EventInfo);
	float GetPlayerDropLifetime();
};


// Class Killstreak.KSDropshipBase
// 0x0150 (0x0370 - 0x0220)
class AKSDropshipBase : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                         // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             SharedRoot;                                               // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        PlaneBase;                                                // 0x0230(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        EnvironmentStaticMesh;                                    // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        NoFireZone;                                               // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        OutOfBoundsVolume;                                        // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DoorCollider;                                             // 0x0250(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             DropshipInteriorRoot;                                     // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipInteriorGeometry;                                 // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipInteriorLights;                                   // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             DropshipExteriorRoot;                                     // 0x0270(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipExteriorGeometry;                                 // 0x0278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        FreeFallHeightMarker;                                     // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        PlayerShopZone;                                           // 0x0288(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipExitZone;                                         // 0x0290(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        DropshipModZone;                                          // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_01;                                         // 0x02A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_02;                                         // 0x02A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_03;                                         // 0x02B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_04;                                         // 0x02B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_05;                                         // 0x02C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_06;                                         // 0x02C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_07;                                         // 0x02D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        KSPlayerStart_08;                                         // 0x02D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UChildActorComponent*                        BotFactory;                                               // 0x02E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBoxComponent*                               PlayerDetectionVolume;                                    // 0x02E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSDistanceOptimizationComponent*            KSDistanceOptimization;                                   // 0x02F0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DropshipSideNumber;                                       // 0x02F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOutOfBoundsEnabled;                                      // 0x02FC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02FD(0x0003) MISSED OFFSET
	float                                              OutOfBoundsMaxScale;                                      // 0x0300(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutOfBoundsInitialScale;                                  // 0x0304(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutOfBoundsStartSeconds;                                  // 0x0308(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDoorOpen;                                                // 0x030C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCloaked;                                                 // 0x030D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x030E(0x0002) MISSED OFFSET
	TArray<class APlayerStart*>                        InitialPlayerStarts;                                      // 0x0310(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropshipInterior*                         DropshipInteriorVar;                                      // 0x0320(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropshipLights*                           DropshipInteriorLightsVar;                                // 0x0328(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropshipExterior*                         DropshipExteriorVar;                                      // 0x0330(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0338(0x0020) MISSED OFFSET
	bool                                               bShouldReverseWayPointSetDirection;                       // 0x0358(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0359(0x0007) MISSED OFFSET
	class AKSWayPointSet*                              WayPointSet;                                              // 0x0360(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSBotDefinitionCollection*                  BotSpawnCollection;                                       // 0x0368(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropshipBase");
		return ptr;
	}


	void ValidateDoor();
	void UpdateDoorRotation(float DoorRotation, float AdditionalInteriorMeshRotation1, float AdditionalInteriorMeshRotation2, float AdditionalExteriorMeshRotation1, float AdditionalExteriorMeshRotation2);
	void UpdateDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalInteriorMeshLocation1, const struct FVector& AdditionalInteriorMeshLocation2, const struct FVector& AdditionalExteriorMeshLocation1, const struct FVector& AdditionalExteriorMeshLocation2);
	void UncloakDropship();
	void StopOpenDoorTimeline();
	void StopCloseDoorTimeline();
	void StopChildActorTimelines();
	void StartCheckPlayersInDropshipTimer();
	void SetupPlayerStarts();
	void SetupDoorAfterDelay();
	void SetupBots();
	void SetOutOfBoundsScale(float NewScale);
	void SetOpenDoorTimelineTime(float NewTime);
	void SetEnvironment(bool bOpen);
	void Server_StartCheckPlayersInDropshipTimer();
	void Server_SetupDoor();
	void Server_OpenDoor();
	void ResetTimers();
	void ResetTimelinesAndTimers();
	void ResetSFX();
	void PlayOpenDoorTimeline();
	void PlayCloseDoorTimeline();
	void OpenDoor();
	void NetMulticast_PlayOpenDoorTimeline();
	void NetMulticast_PlayCloseDoorTimeline();
	void NetMulticast_OpenDoor();
	void NetMulticast_HandlePhaseChanged(const struct FName& NewPhaseName, const struct FName& PreviousPhaseName);
	bool IsDoorOpen();
	bool IsCloaked();
	void InitializeDropship();
	void HandleUnlockPhase();
	void HandleSelectionPhase();
	void HandleRoundInProgess();
	void HandlePrepareRound();
	void HandlePostSelectionPhase();
	void HandlePostSelectionCinematicPhase();
	void HandlePostRound();
	void HandleOvertimeInProgress();
	void HandleHackedPhase();
	float GetRemainingTimeUntilPlayOpenDoorTimeline();
	float GetRemainingTimeUntilDoorOpens();
	float GetOpenDoorTimelineLength();
	int GetDropshipSideNumber();
	void CloseDoor();
	void CloakDropship();
	void CheckPlayersInDropship();
	void BindDelegates();
	void AssignPlayerStartsSideNum();
};


// Class Killstreak.KSDropShipExitVolume
// 0x0008 (0x0270 - 0x0268)
class AKSDropShipExitVolume : public APhysicsVolume
{
public:
	float                                              YawDirection;                                             // 0x0268(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropShipExitVolume");
		return ptr;
	}

};


// Class Killstreak.KSDropShipExitZone
// 0x0008 (0x0228 - 0x0220)
class AKSDropShipExitZone : public AActor
{
public:
	float                                              YawDirection;                                             // 0x0220(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0224(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropShipExitZone");
		return ptr;
	}


	void ActorLeavingZone(class AActor* Other);
	void ActorEnteredZone(class AActor* Other);
};


// Class Killstreak.KSDropshipExterior
// 0x0058 (0x0278 - 0x0220)
class AKSDropshipExterior : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                         // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                               // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     StartingDoorLocation;                                     // 0x0230(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation1;                                    // 0x023C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation2;                                    // 0x0248(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingDoorRotator;                                      // 0x0254(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator1;                                     // 0x0260(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator2;                                     // 0x026C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropshipExterior");
		return ptr;
	}


	void UpdateExteriorDoorRotation(float DoorRotation, float AdditionalMeshRotation1, float AdditionalMeshRotation2);
	void UpdateExteriorDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalMeshLocation1, const struct FVector& AdditionalMeshLocation2);
	void UncloakExterior();
	void StopExteriorTimelines();
	void SetupExteriorSFX();
	void SetStartingValues();
	void ResetExteriorSFX();
	void CloakExterior();
};


// Class Killstreak.KSDropshipInterior
// 0x0058 (0x0278 - 0x0220)
class AKSDropshipInterior : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                         // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                               // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     StartingDoorLocation;                                     // 0x0230(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation1;                                    // 0x023C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     StartingMeshLocation2;                                    // 0x0248(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingDoorRotator;                                      // 0x0254(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator1;                                     // 0x0260(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    StartingMeshRotator2;                                     // 0x026C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropshipInterior");
		return ptr;
	}


	void UpdateInteriorDoorRotation(float DoorRotation, float AdditionalMeshRotation1, float AdditionalMeshRotation2);
	void UpdateInteriorDoorLocation(const struct FVector& AdditionalDoorLocation, const struct FVector& AdditionalMeshLocation1, const struct FVector& AdditionalMeshLocation2);
	void StopInteriorTimelines();
	void SetVisibleAndShouldTick(bool bVisible, bool bShouldTick);
	void SetupInteriorSFX();
	void SetStartingValues();
	void ResetInteriorSFX();
	void OnGateDown();
	void OnDoorOpen();
	void OnDoorFullyOpen();
};


// Class Killstreak.KSDropshipLights
// 0x0010 (0x0230 - 0x0220)
class AKSDropshipLights : public AActor
{
public:
	class USceneComponent*                             DefaultSceneRoot;                                         // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             SharedRoot;                                               // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropshipLights");
		return ptr;
	}


	void StopLoopingLightsTimeline();
	void StopExitLightsTimeline();
	void StopDimLightsTimeline();
	void SetVisibleAndShouldTick(bool bVisible, bool bShouldTick);
	void ResetAllLights();
	void PlayLoopingLightsTimeline();
	void PlayExitLightsTimeline();
	void PlayDimLightsTimeline();
};


// Class Killstreak.KSDropShipLocation
// 0x0030 (0x0250 - 0x0220)
class AKSDropShipLocation : public AActor
{
public:
	class UClass*                                      DropShopClass;                                            // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LootSiteGroup;                                            // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	class AActor*                                      SpawnedDropShip;                                          // 0x0230(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBillboardComponent*                         GameEndSpawn;                                             // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBillboardComponent*                         GameEndTarget;                                            // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UBillboardComponent*                         GameStartLocation;                                        // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDropShipLocation");
		return ptr;
	}


	void OnDropShipSpawned();
};


// Class Killstreak.KSDynamicMaskComponent
// 0x0040 (0x00F0 - 0x00B0)
class UKSDynamicMaskComponent : public UActorComponent
{
public:
	class UTextureRenderTarget2D*                      DynamicMaskRenderTarget;                                  // 0x00B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                TargetDimPixels;                                          // 0x00B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                EmptyColor;                                               // 0x00BC(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                FillColor;                                                // 0x00CC(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	class USceneComponent*                             ConversionBasisComponent;                                 // 0x00E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WorldToTargetScaleX;                                      // 0x00E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              WorldToTargetScaleY;                                      // 0x00EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSDynamicMaskComponent");
		return ptr;
	}


	void Wipe();
	struct FColor GetColorAtPosition(const struct FVector2D& Position);
	void DrawDodecagon(const struct FVector2D& Position, float Radius);
	void DrawBox(const struct FVector2D& Position, const struct FVector2D& Dimensions);
	struct FVector2D ConvertToTargetFromWorld(const struct FVector& WorldSpace);
};


// Class Killstreak.KSEasyAntiCheatSettings
// 0x0068 (0x00A0 - 0x0038)
class UKSEasyAntiCheatSettings : public UDeveloperSettings
{
public:
	uint16_t                                           AbilityEACWeaponTypeId;                                   // 0x0038(0x0002) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	TArray<struct FWeaponTypeToAntiCheatId>            WeaponTypeToAntiCheatId;                                  // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, uint16_t>                WeaponTypeToAntiCheatIdMap;                               // 0x0050(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEasyAntiCheatSettings");
		return ptr;
	}

};


// Class Killstreak.KSEmote
// 0x0058 (0x02F0 - 0x0298)
class UKSEmote : public UKSRadialMenuItem
{
public:
	bool                                               bFlushKeysOnPlay;                                         // 0x0298(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0299(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       EmoteCosmeticComponentClass;                              // 0x02A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EEmoteCameraPositionType                           EmoteCameraPosition;                                      // 0x02C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02C9(0x0007) MISSED OFFSET
	TArray<struct FName>                               ApparelObjectsToInfluence;                                // 0x02D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FSoftObjectPath>                     WeaponPropsToPreload;                                     // 0x02E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmote");
		return ptr;
	}


	TSoftObjectPtr<class UClass> GetEmoteCosmeticClass();
	EEmoteCameraPositionType GetEmoteCameraPosition();
};


// Class Killstreak.KSEmoteCosmeticComponent
// 0x0178 (0x0290 - 0x0118)
class UKSEmoteCosmeticComponent : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      PawnRotationLockId;                                       // 0x0118(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	int                                                EmotionInstanceId;                                        // 0x011C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0120(0x0030) MISSED OFFSET
	class UKSEmote*                                    EmoteAsset;                                               // 0x0150(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	uint16_t                                           PlayTicker;                                               // 0x0158(0x0002) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x6];                                       // 0x015A(0x0006) MISSED OFFSET
	class UMultiSkinObject*                            SkinObject;                                               // 0x0160(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDynamicSkinTable*                           SkinTable;                                                // 0x0168(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0xA0];                                      // 0x0170(0x00A0) MISSED OFFSET
	bool                                               bIsInitialized;                                           // 0x0210(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsPlaying;                                               // 0x0211(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bShouldLoop;                                              // 0x0212(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0213(0x0001) MISSED OFFSET
	struct FVector                                     LastEmotePlayedLocation;                                  // 0x0214(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	struct FKSEmoteInterruptTickFunction               InterruptTick;                                            // 0x0228(0x0030) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x28];                                      // 0x0258(0x0028) MISSED OFFSET
	TArray<class UKSEmoteCosmeticSubInstance*>         SubInstances;                                             // 0x0280(0x0010) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteCosmeticComponent");
		return ptr;
	}


	void OnRep_PlayTicker();
	void OnRep_EmoteAsset();
	void OnInitialize();
	void MarkStopped();
	void MarkPlaying();
	bool IsPlaying();
	bool IsInitialized();
	class UMultiSkinObject* GetSkinObject();
	class UKSEmote* GetEmoteAsset();
	void BlueprintPlayEmote();
	void BlueprintInterruptEmote(EKSRadialMenuItemInterruptReason Reason);
	class UKSEmoteCosmeticSubInstance* AddEmoteCosmeticSubInstance(class UClass* SubInstanceClass);
};


// Class Killstreak.KSEmoteCosmeticComponent_Spray
// 0x0038 (0x02C8 - 0x0290)
class UKSEmoteCosmeticComponent_Spray : public UKSEmoteCosmeticComponent
{
public:
	int                                                StatTrackingNumber;                                       // 0x0290(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x34];                                      // 0x0294(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteCosmeticComponent_Spray");
		return ptr;
	}


	void OnRep_UpdateStatTrackingNumber();
	void NetMulticastPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
	void BlueprintUpdateStatTrackingNumber(int NewStatTrackingNumber);
	void BlueprintPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
};


// Class Killstreak.KSEmoteCosmeticSubInstance
// 0x0000 (0x0028 - 0x0028)
class UKSEmoteCosmeticSubInstance : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteCosmeticSubInstance");
		return ptr;
	}


	void StartEmoteCameraChange();
	void MarkOwnerStopped();
	bool IsOwnerDeadOrDestroyed();
	bool IsLocallyViewed();
	bool IsLocallyManaged();
	class UMultiSkinObject* GetSkinObject();
	class UKSEmoteCosmeticComponent* GetOwningEmoteCosmeticComponent();
	class UKSCharacterAnimInst* GetCharAnimInstance();
	class AKSCharacter* GetCharacterOwner();
	class USkeletalMeshComponent* GetCharacterMesh();
	void EndEmoteCameraChange();
	void BlueprintStopped();
	void BlueprintOnUnregister();
	void BlueprintOnRegister();
	void BlueprintInterrupt(EKSRadialMenuItemInterruptReason Reason);
};


// Class Killstreak.KSEmoteCosmeticSubInstance_Play
// 0x0010 (0x0038 - 0x0028)
class UKSEmoteCosmeticSubInstance_Play : public UKSEmoteCosmeticSubInstance
{
public:
	float                                              MinimumEmoteLoopDuration;                                 // 0x0028(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x002C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteCosmeticSubInstance_Play");
		return ptr;
	}


	bool GetShouldLoop();
	void BlueprintPlayEmote();
};


// Class Killstreak.KSEmoteCosmeticSubInstance_Spray
// 0x0010 (0x0048 - 0x0038)
class UKSEmoteCosmeticSubInstance_Spray : public UKSEmoteCosmeticSubInstance_Play
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteCosmeticSubInstance_Spray");
		return ptr;
	}


	void SetPrimarySprayDecalForOwner(class UPoolableDecalComponent* InDecalComponent);
	void BlueprintUpdateStatTrackingNumber(int NewStatTrackingNumber);
	void BlueprintPlaySpray(const struct FVector& SprayLocation, const struct FRotator& SprayRotation, class UPrimitiveComponent* SprayTarget);
};


// Class Killstreak.KSEmoteInstance
// 0x0000 (0x02C8 - 0x02C8)
class AKSEmoteInstance : public AKSRadialMenuItemInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteInstance");
		return ptr;
	}


	class UKSEmoteCosmeticComponent* GetEmoteCosmeticComponent();
};


// Class Killstreak.KSEmoteMusicManager
// 0x0040 (0x0260 - 0x0220)
class AKSEmoteMusicManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0220(0x0028) MISSED OFFSET
	float                                              MaxAudibleEmoteDistance;                                  // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x14];                                      // 0x024C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteMusicManager");
		return ptr;
	}


	void RemovePlayingMusic(class UAkComponent* Sound);
	void AddPlayingMusic(class UAkComponent* Sound);
};


// Class Killstreak.KSEmoteMusicManagerOwner
// 0x0000 (0x0028 - 0x0028)
class UKSEmoteMusicManagerOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteMusicManagerOwner");
		return ptr;
	}


	class AKSEmoteMusicManager* GetEmoteMusicManager();
};


// Class Killstreak.KSEmoteMusicManagerStatics
// 0x0000 (0x0028 - 0x0028)
class UKSEmoteMusicManagerStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteMusicManagerStatics");
		return ptr;
	}


	static class AKSEmoteMusicManager* GetEmoteMusicManager(class UObject* WorldContextObject);
};


// Class Killstreak.KSEmoteTestManager
// 0x0068 (0x0288 - 0x0220)
class AKSEmoteTestManager : public AActor
{
public:
	class UKSAssetQueryHelperComponent*                SkinAssetQueryComponent;                                  // 0x0220(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSAssetQueryHelperComponent*                EmoteAssetQueryComponent;                                 // 0x0228(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bStartOnBeginPlay;                                        // 0x0230(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAutoDisableTick;                                         // 0x0231(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0232(0x0006) MISSED OFFSET
	class UKSEmote*                                    DefaultEmote;                                             // 0x0238(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UKSSkinBundle*>                       RequestedSkinBundles;                                     // 0x0240(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRequestedSkinsOnly;                                      // 0x0250(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	TArray<class AKSBotFactory*>                       BotFactories;                                             // 0x0258(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                SkinArrayIdx;                                             // 0x0268(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                EmoteArrayIdx;                                            // 0x026C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSEmoteInstance*>                    EmoteInstances;                                           // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEmotesNeedPlay;                                          // 0x0280(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0281(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmoteTestManager");
		return ptr;
	}


	void start();
	void RestartCurrentEmote();
	void OnSkinApplied(class AKSCharacter* Character, class UKSSkinBundle* Skin);
	void OnEmoteApplied(class AKSCharacter* Character, class UKSEmote* Emote);
	void ApplyNextSkins();
	void ApplyNextEmote();
};


// Class Killstreak.KSEmotionComponentOwner
// 0x0000 (0x0028 - 0x0028)
class UKSEmotionComponentOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmotionComponentOwner");
		return ptr;
	}


	float GetEmotionFloat();
	EKSEmotion GetEmotion();
};


// Class Killstreak.KSEmotionComponent
// 0x0188 (0x0238 - 0x00B0)
class UKSEmotionComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEmotionChanged;                                         // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TScriptInterface<class UKSEmotionComponentOwner>   EmotionComponentOwner;                                    // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)
	TMap<int, EKSEmotion>                              EmotionInstances;                                         // 0x00D0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	int                                                TopInstanceId;                                            // 0x0120(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EKSEmotion                                         TopEmotionEnum;                                           // 0x0124(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	int                                                NextEmotionId;                                            // 0x0128(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x54];                                      // 0x012C(0x0054) MISSED OFFSET
	TArray<struct FKSEmoteConversionEntry>             ConversionEntries;                                        // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, EKSEmotion>                     EmotionNameToEnumMap;                                     // 0x0190(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	TMap<EKSEmotion, struct FName>                     EmotionEnumToNameMap;                                     // 0x01E0(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0230(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEmotionComponent");
		return ptr;
	}


	bool RemoveEmotionById(int InstanceId);
	int RemoveEmotion(EKSEmotion InEmotion);
	TScriptInterface<class UKSEmotionComponentOwner> GetEmotionComponentOwner();
	EKSEmotion GetCurrentEmotion();
	void AddEmotionInternal(EKSEmotion Emotion, int ID);
	int AddEmotionForDuration(EKSEmotion InEmotion, float Duration);
	int AddEmotion(EKSEmotion InEmotion);
	int AddAndRemoveEmotion(EKSEmotion InEmotion, int InInstanceID);
};


// Class Killstreak.KSEncounterManager
// 0x0170 (0x0390 - 0x0220)
class AKSEncounterManager : public AActor
{
public:
	TArray<class UKSBotEncounter*>                     BotEncounters;                                            // 0x0220(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBotDeath;                                               // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaveFinished;                                           // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBotSpawned;                                             // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bPermaRevealFill;                                         // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPermaRevealMark;                                         // 0x0261(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPreferHiddenPlayerStarts;                                // 0x0262(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x95];                                      // 0x0263(0x0095) MISSED OFFSET
	float                                              fAutoSpawnScoreRate;                                      // 0x02F8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02FC(0x0008) MISSED OFFSET
	float                                              fAutoSpawnScore;                                          // 0x0304(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x88];                                      // 0x0308(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEncounterManager");
		return ptr;
	}


	int SpawnQueuedBots(int nCount);
	void RemoveQueuedBots(int nCount);
	void PerformAutomaticSpawns(float fScoreBudget);
	void OnSpawnedBotDestroyed(class AActor* DestroyedActor);
	void OnSpawnedBotDeath(class AKSAIController* DeadBot);
	bool IsPlayerStartUnseen(class APlayerStart* PlayerStart);
	bool IsBotQueueEmpty();
	void IncreaseCurrentAutoSpawnScore(float fPercent);
	int GetWaveActiveBotCount(const struct FName& EncounterName, int WaveNumber);
	int GetNumHumanPlayers();
	float GetNextBotSpawnCost();
	TArray<class AKSPlayerState*> GetHumanPlayers();
	int GetEncounterActiveBotCount(const struct FName& EncounterName);
	int GetActiveBotCount();
	class UKSBotEncounter* FindEncounter(const struct FName& nmEncounter);
	int EnqueueEncounterWave(const struct FName& nmEncounter, TArray<class APlayerStart*> SpawnLocations, class AKSWayPointSet* Waypoints);
	void EnableAutoSpawn(float fAverageSpawnPeriod, int nSpawnGroupMin, int nSpawnGroupMax);
	void DisableAutoSpawn();
	void ClearQueuedBots();
	bool CanSpawnNextBot();
	bool CanSpawnBotNow(const struct FName& Encounter, int WaveNumber);
	int AdvanceWave(const struct FName& EncounterName);
};


// Class Killstreak.KSEncounterWave
// 0x00A0 (0x00D0 - 0x0030)
class UKSEncounterWave : public UDataAsset
{
public:
	class UDataTable*                                  SpawnTable;                                               // 0x0030(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<int, int>                                     nMaxSpawnsPerPlayer;                                      // 0x0038(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Config, CPF_NativeAccessSpecifierPublic)
	struct FKSRevealInfo                               WaveRevealParameters;                                     // 0x0088(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEncounterWave");
		return ptr;
	}


	float GetCostToSpawn(const struct FName& nmTableRowName);
	TArray<struct FName> ChooseNSpawnTableRows(int nCount);
};


// Class Killstreak.KSEnforcedEquipmentRuleComponent
// 0x0148 (0x01F8 - 0x00B0)
class UKSEnforcedEquipmentRuleComponent : public UKSGameRuleComponent
{
public:
	TMap<class UDataTable*, struct FGameplayTag>       ItemTables;                                               // 0x00B0(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<class UKSItem*, struct FGameplayTag>          ChosenEquipment;                                          // 0x0100(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0150(0x0050) UNKNOWN PROPERTY: EquippedPlayerIds
	unsigned char                                      UnknownData01[0x50];                                      // 0x01A0(0x0050) UNKNOWN PROPERTY: EquippedPlayers
	class AKSEnforcedEquipmentState*                   EnforcedEquipmentState;                                   // 0x01F0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnforcedEquipmentRuleComponent");
		return ptr;
	}

};


// Class Killstreak.KSEnforcedEquipmentState
// 0x0020 (0x0240 - 0x0220)
class AKSEnforcedEquipmentState : public AInfo
{
public:
	TArray<class UKSItem*>                             EnforcedItems;                                            // 0x0220(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEnforcedItemsUpdated;                                   // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnforcedEquipmentState");
		return ptr;
	}


	void OnRep_EnforcedItems();
};


// Class Killstreak.KSEnvironmentVolumeActor
// 0x0020 (0x0240 - 0x0220)
class AKSEnvironmentVolumeActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	struct FName                                       EnvironmentTag;                                           // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UEnvironmentTrackerComponent*>        ContainedEnvironmentTrackers;                             // 0x0230(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnvironmentVolumeActor");
		return ptr;
	}


	void UpdateEnvironmentTag(const struct FName& NewTag);
};


// Class Killstreak.KSEnvQueryContext_Character
// 0x0008 (0x0030 - 0x0028)
class UKSEnvQueryContext_Character : public UEnvQueryContext
{
public:
	struct FName                                       BlackboardKeyName;                                        // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnvQueryContext_Character");
		return ptr;
	}

};


// Class Killstreak.KSEnvQueryContext_Teammates
// 0x0000 (0x0028 - 0x0028)
class UKSEnvQueryContext_Teammates : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnvQueryContext_Teammates");
		return ptr;
	}

};


// Class Killstreak.KSEnvQueryTest_CharacterTrace
// 0x00E0 (0x02D8 - 0x01F8)
class UKSEnvQueryTest_CharacterTrace : public UEnvQueryTest
{
public:
	struct FEnvTraceData                               TraceData;                                                // 0x01F8(0x0030) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAIDataProviderBoolValue                    TraceFromContext;                                         // 0x0228(0x0038) (CPF_Edit, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ItemHeightOffset;                                         // 0x0260(0x0038) (CPF_Edit, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_AdvancedDisplay, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAIDataProviderFloatValue                   ContextHeightOffset;                                      // 0x0298(0x0038) (CPF_Edit, CPF_DisableEditOnInstance, CPF_ContainsInstancedReference, CPF_AdvancedDisplay, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      Context;                                                  // 0x02D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEnvQueryTest_CharacterTrace");
		return ptr;
	}

};


// Class Killstreak.KSEquipmentContainerOwner
// 0x0000 (0x0028 - 0x0028)
class UKSEquipmentContainerOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipmentContainerOwner");
		return ptr;
	}

};


// Class Killstreak.KSEquipmentManagerComponent
// 0x0168 (0x0218 - 0x00B0)
class UKSEquipmentManagerComponent : public UActorComponent
{
public:
	TMap<struct FGameplayTag, class AKSEquipment*>     EquippedInventory;                                        // 0x00B0(0x0050) (CPF_Edit, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0100(0x0050) MISSED OFFSET
	TArray<class AKSEquipment*>                        SlotlessInventory;                                        // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       MultiUseEquipPoints;                                      // 0x0160(0x0020) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TScriptInterface<class UKSEquipmentManagerOwner>   EquipmentManagerOwner;                                    // 0x0180(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEquipmentAddedDel;                                      // 0x0190(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x01A0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEquipmentRemovedDel;                                    // 0x01B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x40];                                      // 0x01C8(0x0040) MISSED OFFSET
	float                                              EmoteCooldownExpireTime;                                  // 0x0208(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              QuipCooldownExpireTime;                                   // 0x020C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              CommunicationCooldownExpireTime;                          // 0x0210(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              RadialMenuItemCooldownExpireTime;                         // 0x0214(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipmentManagerComponent");
		return ptr;
	}


	void SetEquipmentContainerOwner(const TScriptInterface<class UKSEquipmentContainerOwner>& InEquipmentContainerOwner);
	class AKSEquipment* GetEquipmentByEquipPoint(const struct FGameplayTag& InEquipPoint);
};


// Class Killstreak.KSEquipmentManagerOwner
// 0x0000 (0x0028 - 0x0028)
class UKSEquipmentManagerOwner : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEquipmentManagerOwner");
		return ptr;
	}

};


// Class Killstreak.KSEscapePoint
// 0x0020 (0x0240 - 0x0220)
class AKSEscapePoint : public AActor
{
public:
	class UBoxComponent*                               EscapeOverlapComponent;                                   // 0x0220(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
	struct FName                                       ObjectiveEventName;                                       // 0x0230(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ObjectiveEventLoudness;                                   // 0x0238(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToNotifyBots;                                         // 0x023C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEscapePoint");
		return ptr;
	}


	void OnEscapeOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEscapeOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifyBots();
};


// Class Killstreak.KSEventChallengesManager
// 0x0038 (0x0248 - 0x0210)
class UKSEventChallengesManager : public UKSActivityManagerBase
{
public:
	struct FScriptMulticastDelegate                    OnEventChallengeActivitiesReady;                          // 0x0210(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelectedChallengeChanged;                               // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               EventChallengesReady;                                     // 0x0230(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0231(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEventChallengesManager");
		return ptr;
	}


	static bool ShouldDisplayBuyThroughEvent();
	bool SetSelectedEventChallenge(class UKSActivityInstance* ActivityInstance);
	bool IsPremiumChallengeInstance(class UKSActivityInstance* ActivityInstance);
	bool IsPremiumChallenge(class UKSActivity* Activity);
	bool GetSortedEventChallenges(class AKSPlayerController* Player, class AKSPlayerState* PlayerState, TArray<class UKSActivityInstance*>* OutActivityInstances);
	class UKSActivityInstance* GetSelectedEventChallenge();
	TArray<class UPUMG_StoreItem*> GetPurchasableEventBundles();
	struct FGrandPrizeProgression GetGrandPrizeProgression();
	class UPUMG_StoreItem* GetEventGrandPrizeBundle();
	struct FText GetEventChallengesTimeRemainingText();
	EKSEventChallengesDisplayState GetEventChallengesDisplayState();
	static int GetBuyThroughEventVendorId();
	bool ClearSelectedEventChallenge();
	bool CanSelectChallenge(class UKSActivityInstance* ActivityInstance);
};


// Class Killstreak.KSEventTracker
// 0x01C8 (0x01F0 - 0x0028)
class UKSEventTracker : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTriggered;                                              // 0x0030(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bDoesTick;                                                // 0x0040(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x50];                                      // 0x0041(0x0050) UNKNOWN PROPERTY: ExpectedConfigEntries
	TWeakObjectPtr<class AKSPlayerController>          PlayerController;                                         // 0x0098(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UKSActivityInstance>          WeakActivityInstance;                                     // 0x00A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<ERewardSource, float>                         ProgressEarnedBySource;                                   // 0x00A8(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ProgressEarnedByEvent;                                    // 0x00F8(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ProgressEarnedByBooster;                                  // 0x0148(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	TMap<struct FString, float>                        ExtraData;                                                // 0x0198(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_NativeAccessSpecifierPublic)
	class UKSEventTrackerPlayerData*                   PlayerData;                                               // 0x01E8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEventTracker");
		return ptr;
	}


	void TriggerEvent(int Count);
	void TickTracker(float DeltaTime);
	void StoreProgressBySource(ERewardSource Source, float Progress);
	void StoreProgressByEvent(const struct FString& EventName, float Progress);
	void StoreProgressByBooster(const struct FString& BoosterName, float Progress);
	void StoreExtraData(const struct FString& ExtraDataKey, float ExtraDataValue);
	void HandleTrackerInitialized(TMap<struct FString, float> Config, TMap<struct FString, struct FString> StringConfig);
	void HandleLostPlayerController();
	class AKSWorldSettings* GetWorldSettings();
	class AKSGameState* GetGameState();
	class AKSGameMode* GetGameMode();
	class UKSGameInstance* GetGameInstance();
};


// Class Killstreak.KSEventTrackerPlayerData
// 0x0008 (0x0030 - 0x0028)
class UKSEventTrackerPlayerData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSEventTrackerPlayerData");
		return ptr;
	}


	bool UsesPlacementMatches();
	int SetInitialRankedXp();
	bool IsPlayerDeserter();
	bool IsLossPreventionEnabled();
	bool IsInLastPlacementMatch();
	void IncrementPlacementMatches();
	bool HasCompletedPlacementMatches();
	int GetTeamNum();
	float GetRankedXpWinBaseValue();
	float GetRankedXpMinBonusClamp();
	float GetRankedXpMaxBonusClamp();
	float GetRankedXpLossBaseValue();
	float GetRankDifferenceMultiplier();
	struct FString GetPlayerName();
	int GetPlacementMatchCount();
	int GetMmrZoneRankedLevel();
	float GetMMR();
	int GetFavoredMatchBonusXp();
	int GetCurrentRankedLevel();
};


// Class Killstreak.KSExperiments
// 0x0060 (0x0088 - 0x0028)
class UKSExperiments : public UObject
{
public:
	TArray<struct FKSExperimentConfig>                 ExperimentConfigRow;                                      // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSExperiments");
		return ptr;
	}

};


// Class Killstreak.KSExponentialHeightFog
// 0x0020 (0x0240 - 0x0220)
class AKSExponentialHeightFog : public AInfo
{
public:
	bool                                               bAllowManualSetVisibility;                                // 0x0220(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	TArray<struct FString>                             ActivatedCinematicSubLevelNames;                          // 0x0228(0x0010) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UExponentialHeightFogComponent*              Component;                                                // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSExponentialHeightFog");
		return ptr;
	}


	void TurnFogOnViaCinematic(const struct FString& CinematicSubLevelName);
	void TurnFogOffViaCinematic(const struct FString& CinematicSubLevelName);
};


// Class Killstreak.KSExtinguisher
// 0x0000 (0x0028 - 0x0028)
class UKSExtinguisher : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSExtinguisher");
		return ptr;
	}


	bool ShouldExtinguishRightNow();
};


// Class Killstreak.KSExtractionPickup
// 0x0048 (0x03C8 - 0x0380)
class AKSExtractionPickup : public AKSObjectiveBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	int                                                PickupExclusivityGroup;                                   // 0x0388(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	struct FText                                       InteractionPropt;                                         // 0x0390(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            InteractionRangeSphereComponent;                          // 0x03A8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x03B0(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x03B8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSExtractionPickup");
		return ptr;
	}


	bool IsPickupUsed();
	bool IsPickupEnabled();
	void DeactivatePickup();
	void ActivatePickup();
};


// Class Killstreak.KSFaceAnimInst
// 0x0000 (0x10A0 - 0x10A0)
class UKSFaceAnimInst : public UKSCharacterAnimInst
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFaceAnimInst");
		return ptr;
	}

};


// Class Killstreak.KSFinalBlowTracker
// 0x0010 (0x00A8 - 0x0098)
class UKSFinalBlowTracker : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0098(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFinalBlowTracker");
		return ptr;
	}


	void HandleOnLastPlayer(class AKSPlayerState* LastPlayer);
	void CheckLastPlayer(const struct FCombatEventInfo& ElimEvent, class AKSPlayerState* LastPlayer);
};


// Class Killstreak.KSFirstBloodTracker
// 0x0008 (0x00A0 - 0x0098)
class UKSFirstBloodTracker : public UKSAccoladeTracker
{
public:
	bool                                               IsFirstKill;                                              // 0x0098(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFirstBloodTracker");
		return ptr;
	}


	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
};


// Class Killstreak.KSFlightPoint
// 0x0010 (0x0230 - 0x0220)
class AKSFlightPoint : public ATargetPoint
{
public:
	class USplineComponent*                            SplineComponent;                                          // 0x0220(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ESplinePointType>                      SplinePointType;                                          // 0x0228(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsEndPoint;                                              // 0x0229(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x022A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFlightPoint");
		return ptr;
	}

};


// Class Killstreak.KSFlightRecoveryVolume
// 0x0000 (0x0258 - 0x0258)
class AKSFlightRecoveryVolume : public ATriggerVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFlightRecoveryVolume");
		return ptr;
	}


	void OnOverlapEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnOverlapBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};


// Class Killstreak.KSFootstepOverrideInterface
// 0x0000 (0x0028 - 0x0028)
class UKSFootstepOverrideInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFootstepOverrideInterface");
		return ptr;
	}


	float GetPriorityLevel();
	void GetOverrideByLocation(const struct FVector& WorldLocation, bool* outShouldOverride, struct FName* outOverrideName);
};


// Class Killstreak.KSFootstepOverrideVolume
// 0x0018 (0x0270 - 0x0258)
class AKSFootstepOverrideVolume : public ATriggerVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET
	struct FName                                       OverrideMaterialName;                                     // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              OverridePriority;                                         // 0x0268(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFootstepOverrideVolume");
		return ptr;
	}

};


// Class Killstreak.KSVelocityCameraShake
// 0x0000 (0x0180 - 0x0180)
class UKSVelocityCameraShake : public UKSCharacterCameraShake
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVelocityCameraShake");
		return ptr;
	}

};


// Class Killstreak.KSFreeFallCameraShake
// 0x0000 (0x0180 - 0x0180)
class UKSFreeFallCameraShake : public UKSVelocityCameraShake
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFreeFallCameraShake");
		return ptr;
	}

};


// Class Killstreak.KSFreezeFramePawn
// 0x01B8 (0x0438 - 0x0280)
class AKSFreezeFramePawn : public APawn
{
public:
	class USkeletalMeshComponent*                      PawnMeshComponent;                                        // 0x0280(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x148];                                     // 0x0288(0x0148) MISSED OFFSET
	class USkeletalMesh*                               PawnMesh;                                                 // 0x03D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDataTable*                                  PawnSkinTable;                                            // 0x03D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAnimationAsset*                             PawnAnimation;                                            // 0x03E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAnimSequence*                               FacialAnimationSet;                                       // 0x03E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EKSEmotion                                         FacialAnimationPose;                                      // 0x03F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TEnumAsByte<EAnimationMode>                        AnimationMode;                                            // 0x03F1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x6];                                       // 0x03F2(0x0006) MISSED OFFSET
	class UClass*                                      AnimationClass;                                           // 0x03F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AnimationPlayRate;                                        // 0x0400(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              AnimationStartTime;                                       // 0x0404(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFramePawnProp>              Props;                                                    // 0x0408(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFramePawnWeaponProp>        WeaponProps;                                              // 0x0418(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FKSFreezeFrameVFXEntry>              VFXEntries;                                               // 0x0428(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFreezeFramePawn");
		return ptr;
	}


	void OnVFXFinished(class UParticleSystemComponent* ParticleSystem);
};


// Class Killstreak.KSFreezeFramePawnAnimInst
// 0x0020 (0x0310 - 0x02F0)
class UKSFreezeFramePawnAnimInst : public UKSAnimInstance
{
public:
	class UAnimSequence*                               FacialAnimationSet;                                       // 0x02F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSEmotion                                         FacialAnimationPose;                                      // 0x02F8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02F9(0x0003) MISSED OFFSET
	float                                              AnimationPlayRate;                                        // 0x02FC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AnimationStartTime;                                       // 0x0300(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0304(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSFreezeFramePawnAnimInst");
		return ptr;
	}

};


// Class Killstreak.KSGadgetAssetDrop
// 0x0000 (0x0848 - 0x0848)
class AKSGadgetAssetDrop : public AKSWeaponAssetDrop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGadgetAssetDrop");
		return ptr;
	}


	bool GetLabelInfoForGadgetDescription(struct FText* DescriptionText);
};


// Class Killstreak.KSGameEngine
// 0x0090 (0x0F70 - 0x0EE0)
class UKSGameEngine : public UPComGameEngine
{
public:
	struct FScriptMulticastDelegate                    OnGoPlayMapReady;                                         // 0x0EE0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x80];                                      // 0x0EF0(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameEngine");
		return ptr;
	}


	void SetGoPlayMapTravelDelayed(bool DelayGoPlayMap);
	void SetGoPlayMapDelayTimeoutLimit(float DelayTimeoutLimit);
	void QuickGoPlayCachedMap();
	void OnTriggerGoPlayMap();
	bool GetGoPlayMapTravelDelayed();
	float GetGoPlayMapDelayTimeoutLimit();
	void FinishGoPlayMap();
	void CancelDelayedGoPlayMap();
};


// Class Killstreak.KSGameInstance
// 0x02E0 (0x0530 - 0x0250)
class UKSGameInstance : public UPGame_GameInstance
{
public:
	struct FScriptMulticastDelegate                    LoadingScreenBeganDel;                                    // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    LoadingScreenEndedDel;                                    // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                           AlwaysNeededPrimaryAssetQuery;                            // 0x0270(0x0048) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               AlwaysNeededPrimaryAssetBundles;                          // 0x02B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x58];                                      // 0x02C8(0x0058) MISSED OFFSET
	class UDataTable*                                  LoadingScreenTipsTable;                                   // 0x0320(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class ULoadingScreenImageManager*                  LoadingScreenImageManager;                                // 0x0328(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	TArray<TWeakObjectPtr<class UKSActivityManagerBase>> ActivityManagers;                                         // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSAcquisitionManager*                       AcquisitionManager;                                       // 0x0350(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UPUMG_StoreItemHelper*                       StoreItemHelper;                                          // 0x0358(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSJsonDataFactory*                          JsonDataFactory;                                          // 0x0360(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSLoadoutDataFactory*                       LoadoutDataFactory;                                       // 0x0368(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSUISessionManager*                         UISessionManager;                                         // 0x0370(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSActivityInstanceManager*                  ActivityInstanceManager;                                  // 0x0378(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSPlayerInventoryHelper*                    PlayerInventoryHelper;                                    // 0x0380(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSPlayerStatsManager*                       PlayerStatsManager;                                       // 0x0388(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSPlayerChallengesManager*                  PlayerChallengesManager;                                  // 0x0390(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSNPETrackManager*                          NPETrackManager;                                          // 0x0398(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSMercMasteryManager*                       MercMasteryManager;                                       // 0x03A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSMercManager*                              MercManager;                                              // 0x03A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSAwardsManager*                            AwardsManager;                                            // 0x03B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSGeneralProgressionManager*                GeneralProgressionManager;                                // 0x03B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSRankedManager*                            RankedManager;                                            // 0x03C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSBattlePassProgressionManager*             BattlePassProgressionManager;                             // 0x03C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSEventChallengesManager*                   EventChallengesManager;                                   // 0x03D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSActivitySequenceManager*                  ActivitySequenceManager;                                  // 0x03D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSAudioManager*                             AudioManager;                                             // 0x03E0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSPunishmentManager*                        PunishmentManager;                                        // 0x03E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSBoosterManager*                           BoosterManager;                                           // 0x03F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UPUMG_VoiceChatManager*                      VoiceChatManager;                                         // 0x03F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x80];                                      // 0x0400(0x0080) MISSED OFFSET
	class UKSWeaponAsset*                              WingsuitWeaponAsset;                                      // 0x0480(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldUseZombiePrevention;                                // 0x0488(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	int                                                ZombiePreventionSeconds;                                  // 0x048C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0xA0];                                      // 0x0490(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameInstance");
		return ptr;
	}


	void UpdateRecordedAnimStats(TMap<struct FName, struct FKSAnimStats>* NewStats);
	class UPUMG_StoreItemHelper* GetStoreItemHelper();
	class UKSRankedManager* GetRankedManager();
	class UKSPunishmentManager* GetPunishmentManager();
	class UKSPlayerStatsManager* GetPlayerStatsManager();
	class UKSPlayerInventoryHelper* GetPlayerInventoryHelper();
	class UKSPlayerChallengesManager* GetPlayerChallengesManager();
	class UKSNPETrackManager* GetNPETrackManager();
	class UKSMercMasteryManager* GetMercMasteryManager();
	class UKSMercManager* GetMercManager();
	class UKSLoadoutDataFactory* GetLoadoutDataFactory();
	bool GetLoadingScreenImage(const struct FString& InMapName, TSoftObjectPtr<class UTexture2D>* LoadingScreenImageSoftRef, struct FText* MapDisplayName, struct FText* MapRegion, struct FText* MapDescription);
	class UKSGeneralProgressionManager* GetGeneralProgressionManager();
	class UKSEventChallengesManager* GetEventChallengesManager();
	class UKSBoosterManager* GetBoosterManager();
	class UKSBattlePassProgressionManager* GetBattlePassProgressionManager();
	class UKSAwardsManager* GetAwardsManager();
	class UKSAudioManager* GetAudioManager();
	class UKSActivitySequenceManager* GetActivitySequenceManager();
	class UKSActivityInstance* GetActivityInstanceForActivity(class UKSActivity* Activity, class AKSPlayerController* PlayerController);
	void ExportAnimAudit(const struct FString& Filename);
	void EndLoading();
	void ClaimTutorialAward();
	void BeginLoading(const struct FString& mapName);
};


// Class Killstreak.KSGameMode
// 0x08E0 (0x0D60 - 0x0480)
class AKSGameMode : public APGame_GameMode
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0480(0x0038) MISSED OFFSET
	float                                              PlayerReadyTimeoutTime;                                   // 0x04B8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xC];                                       // 0x04BC(0x000C) MISSED OFFSET
	bool                                               bCachedShouldPlayersStartSpectatingDefaultCamera;         // 0x04C8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04C9(0x0003) MISSED OFFSET
	struct FKSRespawnConfig                            RespawnConfiguration;                                     // 0x04CC(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPhaseChangeDel;                                         // 0x04E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPhaseTimerExpired;                                      // 0x04F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0508(0x0010) MISSED OFFSET
	struct FName                                       MatchPhase;                                               // 0x0518(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseMatchTimer;                                           // 0x0520(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0521(0x0003) MISSED OFFSET
	float                                              MatchSetupTime;                                           // 0x0524(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseSelectionPhase;                                       // 0x0528(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0529(0x0003) MISSED OFFSET
	float                                              PreSelectionPhaseTime;                                    // 0x052C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SelectionPhaseTime;                                       // 0x0530(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostSelectionPhaseTime;                                   // 0x0534(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostSelectionPhaseMinTime;                                // 0x0538(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSkipPostSelectionCinematic;                              // 0x053C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x053D(0x0003) MISSED OFFSET
	float                                              PostSelectionCinematicPhaseTime;                          // 0x0540(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsePostMatchMVPLineup;                                   // 0x0544(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0545(0x0003) MISSED OFFSET
	float                                              TimeBeforeMVPLineupCinematicBegins;                       // 0x0548(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PostMatchMVPLineupPhaseTime;                              // 0x054C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MatchDefaultPhaseTime;                                    // 0x0550(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x34];                                      // 0x0554(0x0034) MISSED OFFSET
	float                                              MatchTimerUpdatePeriod;                                   // 0x0588(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x14];                                      // 0x058C(0x0014) MISSED OFFSET
	class UClass*                                      KSSpawnSelectorComponentClass;                            // 0x05A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       KSSpawnSelectorComponentSoftClass;                        // 0x05A8(0x0028) (CPF_Config, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSpawnSelectorComponent*                   KSSpawnSelectorComponent;                                 // 0x05D0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bAllowFindInactivePlayer;                                 // 0x05D8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseLoginStartSpotForPawn;                                // 0x05D9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAIPlayersUseLoginStartSpotForPawn;                       // 0x05DA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x35];                                      // 0x05DB(0x0035) MISSED OFFSET
	int                                                DefaultTeamCount;                                         // 0x0610(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSTeamAssignmentType                              TeamAssignmentType;                                       // 0x0614(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstDebugPlayerIsOnlySpectator;                         // 0x0615(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x72];                                      // 0x0616(0x0072) MISSED OFFSET
	class AKSRevealManager*                            RevealManager;                                            // 0x0688(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      RevealManagerClass;                                       // 0x0690(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    MatchStatsFinalizedDelegate;                              // 0x0698(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x18];                                      // 0x06A8(0x0018) MISSED OFFSET
	float                                              MatchStartTime;                                           // 0x06C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MatchEndTime;                                             // 0x06C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsTutorial;                                              // 0x06C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPractice;                                              // 0x06C9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsAiPvpMode;                                             // 0x06CA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsPlayerSpectateOnlyMode;                                // 0x06CB(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultMinimapWidth;                                      // 0x06CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DefaultTeamState;                                         // 0x06D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_NoClear, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReverseFriendlyFireStartThreshold;                        // 0x06D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FriendlyFireModiferBase;                                  // 0x06DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReverseFriendlyFireModiferBase;                           // 0x06E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDownPlayers;                                          // 0x06E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDownBots;                                             // 0x06E5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCreditInstantKillWithDown;                               // 0x06E6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCreditSuicideWithDown;                                   // 0x06E7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bImmediateDeathForLastManStanding;                        // 0x06E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEliminatePlayerOnDeath;                                  // 0x06E9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPivotToKillerOnDeath;                                    // 0x06EA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTrackKillerOnDeath;                                      // 0x06EB(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRevealKillerOnDeath;                                     // 0x06EC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldRandomizeSides;                                    // 0x06ED(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartJobSelectionOnSideSwap;                             // 0x06EE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x1];                                       // 0x06EF(0x0001) MISSED OFFSET
	class AKSGlobalShotListener*                       ShotListener;                                             // 0x06F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x8];                                       // 0x06F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamSidesFlipped;                                       // 0x0700(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bClearObjectivesMarkedUsedOnSidesFlipped;                 // 0x0710(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x7];                                       // 0x0711(0x0007) MISSED OFFSET
	class AActor*                                      Winner;                                                   // 0x0718(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AActor*                                      CheatWinner;                                              // 0x0720(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      DefaultRewardsCalculatorClass;                            // 0x0728(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIncludeInitialInventoryFromDefaultPawnInStartingInventory;// 0x0730(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0731(0x0007) MISSED OFFSET
	TArray<class UKSItem*>                             StartingInventory;                                        // 0x0738(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGiveStartingInventoryToBots;                             // 0x0748(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x7];                                       // 0x0749(0x0007) MISSED OFFSET
	TArray<class UKSItem*>                             PlayerSpawnInventory;                                     // 0x0750(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             PlayerInitialSpawnInventory;                              // 0x0760(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             PlayerRespawnInventory;                                   // 0x0770(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerSpawnMods;                                          // 0x0780(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerInitialSpawnMods;                                   // 0x0790(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        PlayerRespawnMods;                                        // 0x07A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerMod*                                FreefallMod;                                              // 0x07B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x30];                                      // 0x07B8(0x0030) MISSED OFFSET
	bool                                               bIsBotMatch;                                              // 0x07E8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x3];                                       // 0x07E9(0x0003) MISSED OFFSET
	int                                                StartingCash;                                             // 0x07EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSpecialtyItemVendorLoaded;                              // 0x07F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0800(0x0004) MISSED OFFSET
	bool                                               bUsePlayerLoadouts;                                       // 0x0804(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableLoadoutValidation;                                // 0x0805(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x10A];                                     // 0x0806(0x010A) MISSED OFFSET
	float                                              WaitForPlayersTimeout;                                    // 0x0910(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x14];                                      // 0x0914(0x0014) MISSED OFFSET
	TMap<TSoftObjectPtr<class UKSWeaponAsset>, int>    LoadingLoot;                                              // 0x0928(0x0050) (CPF_NativeAccessSpecifierPrivate)
	bool                                               bPopulateLootSites;                                       // 0x0978(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x7];                                       // 0x0979(0x0007) MISSED OFFSET
	TMap<ELootSiteRarity, struct FKSLootGroupGuaranteeMap> LootGroupGuarantees;                                      // 0x0980(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpawnLootOnMatchStart;                                   // 0x09D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x57];                                      // 0x09D1(0x0057) MISSED OFFSET
	TArray<struct FKSLootRaritySwapInfo>               LootRaritySwaps;                                          // 0x0A28(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSLootRespawnMode                                 LootRespawnMode;                                          // 0x0A38(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x7];                                       // 0x0A39(0x0007) MISSED OFFSET
	TMap<ELootSiteRarity, float>                       LootSiteRespawnPeriods;                                   // 0x0A40(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x50];                                      // 0x0A90(0x0050) MISSED OFFSET
	class UKSAIActorCollection*                        AIActorCollection;                                        // 0x0AE0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRecordKillCam;                                           // 0x0AE8(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x3];                                       // 0x0AE9(0x0003) MISSED OFFSET
	float                                              AFKIdleTime;                                              // 0x0AEC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x38];                                      // 0x0AF0(0x0038) MISSED OFFSET
	class UDataTable*                                  AccoladeTrackerDataTable;                                 // 0x0B28(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UKSAccoladeTracker*>                  AccoladeTrackerInstances;                                 // 0x0B30(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              AccoladeTrackerClasses;                                   // 0x0B40(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSGameHUDSettings                          GameModeHUDSettings;                                      // 0x0B50(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	TArray<TSoftObjectPtr<class AActor>>               InteractiveObjectCache;                                   // 0x0B68(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UClass*                                      OutOfBoundsManagerClass;                                  // 0x0B78(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSMatchDataRecorder*                        MatchDataRecorder;                                        // 0x0B80(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldForceCompetitiveLogic;                              // 0x0B88(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSPerSecondChargeMode                             PerSecondChargeMode;                                      // 0x0B89(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x2];                                       // 0x0B8A(0x0002) MISSED OFFSET
	float                                              PerSecondChargePercent;                                   // 0x0B8C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSGameRuleComponent*>                GameRules;                                                // 0x0B90(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FString>                 EditorPropertyMap;                                        // 0x0BA0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData31[0x50];                                      // 0x0BF0(0x0050) MISSED OFFSET
	struct FString                                     FriendlyAudioName;                                        // 0x0C40(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FString>                             FriendlyAchievementNames;                                 // 0x0C50(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                BurnTestNumberOfRoundToWin;                               // 0x0C60(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData32[0x14];                                      // 0x0C64(0x0014) MISSED OFFSET
	bool                                               bAllowPlayersToUseUnownedJobs;                            // 0x0C78(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData33[0x7];                                       // 0x0C79(0x0007) MISSED OFFSET
	TArray<int>                                        AllowedUnownedJobIds;                                     // 0x0C80(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EJobUniquenessRule                                 EnforcedJobUniqueness;                                    // 0x0C90(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseJobSelectionByDraft;                                  // 0x0C91(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkipDraftMidMatch;                                       // 0x0C92(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDraftAlternateTeams;                                     // 0x0C93(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DraftNumPlayersSelecting;                                 // 0x0C94(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                DraftFirstSelectionNumOverride;                           // 0x0C98(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              DraftPostSelectionPhaseTime;                              // 0x0C9C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDraftIncludesBans;                                       // 0x0CA0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDraftBanAlternateTeams;                                  // 0x0CA1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData34[0x2];                                       // 0x0CA2(0x0002) MISSED OFFSET
	int                                                DraftBanNumPlayersBanning;                                // 0x0CA4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<int>                                        DraftBanTurns;                                            // 0x0CA8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                CurrentDraftTurnNum;                                      // 0x0CB8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CurrentTeamNumSelecting;                                  // 0x0CBC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCurrentlyBanning;                                        // 0x0CC0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWasBanning;                                              // 0x0CC1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData35[0x2];                                       // 0x0CC2(0x0002) MISSED OFFSET
	int                                                LastTeamNumToBan;                                         // 0x0CC4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bHasEverCompletedJobSelection;                            // 0x0CC8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bFubarIfNoVendorsByMatchStart;                            // 0x0CC9(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnlyFubarIfNoJobVendor;                                  // 0x0CCA(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFubarIfAbsentPlayers;                                    // 0x0CCB(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData36[0x2];                                       // 0x0CCC(0x0002) MISSED OFFSET
	EKSBotNameGeneration                               BotNamingMethod;                                          // 0x0CCE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData37[0x9];                                       // 0x0CCF(0x0009) MISSED OFFSET
	bool                                               bUseIntraScoring;                                         // 0x0CD8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData38[0x7];                                       // 0x0CD9(0x0007) MISSED OFFSET
	struct FText                                       GameModeDisplayName;                                      // 0x0CE0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      EmoteMusicManagerClass;                                   // 0x0CF8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSCinematicDataContainer*                   CinematicDataContainer;                                   // 0x0D00(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSMVPDeterminant*                           MVPDeterminant;                                           // 0x0D08(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSeamlessTravelTransferInfo*               SeamlessTravelInfo;                                       // 0x0D10(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSSeamlessTravelSettings                   SeamlessTravelSettings;                                   // 0x0D18(0x0010) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData39[0x8];                                       // 0x0D28(0x0008) MISSED OFFSET
	TArray<struct FGameplayTag>                        GameModeTags;                                             // 0x0D30(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                NumericId;                                                // 0x0D40(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bGlobalDisableAIBackfill;                                 // 0x0D44(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowAIBackfill;                                         // 0x0D45(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData40[0x2];                                       // 0x0D46(0x0002) MISSED OFFSET
	class UKSBotDefinition*                            BackfillBotDefinition;                                    // 0x0D48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData41[0x10];                                      // 0x0D50(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode");
		return ptr;
	}


	bool UsePlayerLoadouts();
	void StartPreSelectionPhase(bool bReset);
	void SetMatchPhase(const struct FName& NewPhase);
	void SetInfiniteAmmo(bool bValue);
	class AActor* SelectAWinner();
	void PopulateLootSites();
	void PopulateInteractiveObjects();
	bool PlayerCanRestartCommon(class AController* Player);
	bool PlayerCanEnterPlay(class AController* C);
	void PawnLeavingGame(class APlayerController* PawnController);
	void OnWaitForPlayersExpired();
	void OnTeamEliminated(class AKSTeamState* Team);
	void OnPlayerEliminated(class AKSPlayerState* Player);
	void OnPlayerDownStateChanged(class AKSPlayerState* Player);
	void OnKSCharacterRevived(class AKSCharacter* InRevivee, class AKSPlayerState* InReviver);
	void OnKSCharacterRadialMenuItemUsed(class AKSCharacter* InCharacter, class APlayerState* CharacterPlayer, class UKSRadialMenuItem* RadialMenuItem);
	void OnKSCharacterDowned(class AKSCharacter* InCharacter, class AController* EventInstigator, class UClass* DamageType, EHitLocationType HitLocationType, class AActor* DamageCauser, float DamageDealt);
	void OnKSCharacterDownAssist(class AKSCharacter* InVictim, class AController* DownInstigator, class AController* DownAssistant, float RawDamage, float DamagePercent);
	void OnKSCharacterCombatSummary(const struct FAdvancedCombatSummary& CombatSummary);
	void OnKSCharacterCombatEvent(const struct FAdvancedCombatEvent& CombatEvent);
	void OnKSCharacterBaseDied(class AKSCharacterBase* InCharacter, class APlayerState* CharacterPlayer, class AController* EventInstigator, class UClass* DamageType, EHitLocationType HitLocationType, const struct FKSEventAssistants& EventAssistants, class AActor* DamageCauser, float DamageDealt);
	void K2_OnMatchPhaseSet(const struct FName& NewPhase);
	EKSRewardType IsAWinner(class AActor* Other);
	void HandleStartingNewAIPlayer(class AKSAIController* NewPlayer);
	void HandleAllPlayersFinishedPrePrep();
	int GetStartingTeamNum(class UPlayer* NewPlayer, class APGame_PlayerController* NewPlayerController);
	class AKSGlobalShotListener* GetShotListener();
	class UClass* GetRewardsCalculatorClass();
	class AKSRevealManager* GetRevealManager();
	float GetPerSecondChargePercent();
	EKSPerSecondChargeMode GetPerSecondChargeMode();
	float GetMatchTimeElapsed();
	struct FName GetMatchPhase();
	bool GetIsTutorial();
	bool GetIsPractice();
	bool GetIsPlayerSpectateOnlyMode();
	bool GetIsAIPvpMode();
	struct FName GetGamePhase();
	struct FKSGameHUDSettings GetGameModeHUDSettings();
	TArray<class UKSPlayerMod*> GetDefaultPlayerMods();
	TArray<TSoftObjectPtr<class AActor>> GetCachedInteractiveObjects();
	bool FlippingTeamSidesThisRound();
	void EventOnTeamCreated(class AKSTeamState* Team);
	bool DoesClearObjectivesMarkedUsedOnSidesFlipped();
	void DestroyDynamicZipLines();
	void DestroyActive(class UClass* ActorClass);
	void CreateRevealManager();
	void ClearLootSites();
	void ClearInteractiveObjects();
	bool CanUsePlayerStart(class AController* Player, class APlayerStart* PlayerStart);
	bool CanSpawnBotsNow();
	void AllPlayersLockedInForComponent();
	bool AllowDamageNow();
	bool AIPlayerCanRestart(class AKSAIController* Player);
	void AddInteractiveObject(TSoftObjectPtr<class AActor> ObjectToAdd);
};


// Class Killstreak.KSSeamlessTravelTransferInfo
// 0x00A0 (0x00C8 - 0x0028)
class UKSSeamlessTravelTransferInfo : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0028(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSeamlessTravelTransferInfo");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_RoundGame
// 0x00F0 (0x0E50 - 0x0D60)
class AKSGameMode_RoundGame : public AKSGameMode
{
public:
	bool                                               bRunRespawnAndEliminationLogicBetweenRounds;              // 0x0D60(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D61(0x0003) MISSED OFFSET
	float                                              PostRoundDuration;                                        // 0x0D64(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkipSelectionCinematicAfterFirstRound;                   // 0x0D68(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0D69(0x0003) MISSED OFFSET
	struct FName                                       RoundStateSetupComplete;                                  // 0x0D6C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RoundNumber;                                              // 0x0D74(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RoundsNeededToWin;                                        // 0x0D78(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalNumberOfRounds;                                      // 0x0D7C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayersCanRestartDuringRoundInProgress;                  // 0x0D80(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHoldPlayerRestartUntilFirstRoundSetup;                   // 0x0D81(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWinRoundByElimination;                                   // 0x0D82(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAwardPointOnDraw;                                        // 0x0D83(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundSetupTime;                                           // 0x0D84(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundDuration;                                            // 0x0D88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       RoundStartPhase;                                          // 0x0D8C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNewPawnOnRoundStart;                                     // 0x0D94(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0D95(0x000B) MISSED OFFSET
	class AKSTeamState*                                WinByEliminationTeam;                                     // 0x0DA0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x0DA8(0x001C) MISSED OFFSET
	int                                                NumberOfConsecutiveLossesToEnableEpicGroupSiteGuarantees; // 0x0DC4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bKillDownedPlayersAtEndOfRound;                           // 0x0DC8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpareWinningDownedPlayers;                               // 0x0DC9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0DCA(0x0001) MISSED OFFSET
	EPlayerInfoInventoryRestoreType                    InventoryRestore;                                         // 0x0DCB(0x0001) (CPF_ZeroConstructor, CPF_Deprecated, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowPlayersToKeepInventoryBetweenRounds;                // 0x0DCC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeAlive;                                  // 0x0DCD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeStanding;                               // 0x0DCE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequirePlayerToBeOnWinningTeam;                          // 0x0DCF(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSideSwapWipesEquipment;                                  // 0x0DD0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRestoreEquipment;                                        // 0x0DD1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0DD2(0x0006) MISSED OFFSET
	struct FGameplayTagQuery                           InventoryRestoreEquipPointRequirements;                   // 0x0DD8(0x0048) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bRestoreSlotlessEquipment;                                // 0x0E20(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRestoreNonEquipment;                                     // 0x0E21(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0E22(0x0006) MISSED OFFSET
	TArray<struct FInventoryRestoreInfo>               GuaranteedInventory;                                      // 0x0E28(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FlipTeamSideFrequency;                                    // 0x0E38(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaxTeamSideFlipsPerMatch;                                 // 0x0E3C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSideSwapClearsConsecutiveLosses;                         // 0x0E40(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0E41(0x0003) MISSED OFFSET
	int                                                TeamSideFlipsThisMatch;                                   // 0x0E44(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBlockWeaponsPostRound;                                   // 0x0E48(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0E49(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_RoundGame");
		return ptr;
	}


	void StartRound();
	bool ShouldTeamsFlip(unsigned char Round);
	bool ShouldSkipSelectionCinematicAfterFirstRound();
	bool ShouldPlayEndRoundKillCam();
	bool ReadyToStartNextRound();
	bool ReadyToPrepareNextRound();
	void PrepareForNextRound();
	void K2_OnSetRoundState(const struct FName& InRoundState);
	bool IsRoundSetupComplete();
	bool IsRoundInProgress();
	bool HasRoundStarted();
	bool HasRoundEnded();
	bool HasPreparedNextRound();
	struct FName GetRoundState();
	float GetRoundStartTime();
	unsigned char GetRoundNumber();
	void EndRoundKillCam();
	void EndRound();
	bool CanPlayerKeepInventoryBetweenRounds(class AKSCharacter* Character, class AController* Player);
};


// Class Killstreak.KSGameMode_Extraction
// 0x00B0 (0x0F00 - 0x0E50)
class AKSGameMode_Extraction : public AKSGameMode_RoundGame
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0E50(0x0008) MISSED OFFSET
	bool                                               bAllowComputersFromLastRound;                             // 0x0E58(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAvoidRepeatComputers;                                    // 0x0E59(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0E5A(0x0002) MISSED OFFSET
	int                                                ActiveComputerCount;                                      // 0x0E5C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ComputerCountToWin;                                       // 0x0E60(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActiveComputerFavorMatchPointTeam;                    // 0x0E64(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldActiveComputerBeNeutralForTieBreaker;              // 0x0E65(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0E66(0x0002) MISSED OFFSET
	class AKSTeamState*                                DefendingTeam;                                            // 0x0E68(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                AttackingTeam;                                            // 0x0E70(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSExtractionComputer*                       ActiveComputer;                                           // 0x0E78(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToCompleteHack;                                       // 0x0E80(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToUnlockComputers;                                    // 0x0E84(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeAddedOnSuccessfulHack;                                // 0x0E88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHackingPreventsRoundEnd;                                 // 0x0E8C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWinOnDehack;                                             // 0x0E8D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBotsCanSpawnFirstRoundOnly;                              // 0x0E8E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x71];                                      // 0x0E8F(0x0071) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Extraction");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_AttackExtraction
// 0x0000 (0x0F00 - 0x0F00)
class AKSGameMode_AttackExtraction : public AKSGameMode_Extraction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_AttackExtraction");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_Control
// 0x0090 (0x0EE0 - 0x0E50)
class AKSGameMode_Control : public AKSGameMode_RoundGame
{
public:
	float                                              BaseControlPointCaptureTime;                              // 0x0E50(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BaseControlPointRecaptureTime;                            // 0x0E54(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CaptureRatePercentIncreasePerPlayer;                      // 0x0E58(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FullCaptureDecayTime;                                     // 0x0E5C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumActiveControlPoints;                                   // 0x0E60(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAvoidRepeatControlPoints;                                // 0x0E64(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowControlPointsFromLastRound;                         // 0x0E65(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActiveControlPointFavorMatchPointTeam;                // 0x0E66(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldActiveControlPointBeNeutralForTieBreaker;          // 0x0E67(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class AKSControlPoint*, float>                ControlledPoints;                                         // 0x0E68(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSControlPoint*>                     AvailableControlPoints;                                   // 0x0EB8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToUnlockControlPoints;                                // 0x0EC8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bScorePointImmediatelyUponCapture;                        // 0x0ECC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSControlTieBreakerMode                           ControlTieBreakerMode;                                    // 0x0ECD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0ECE(0x0002) MISSED OFFSET
	int                                                ScorePerControlPoint;                                     // 0x0ED0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ScoreToWin;                                               // 0x0ED4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ScoreUpdatePeriod;                                        // 0x0ED8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0EDC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Control");
		return ptr;
	}


	void OnTeamScored(class AKSTeamState* ScoringTeam, class AKSControlPoint* ControlPoint);
	float GetUpdateRateForControlPoint(class AKSControlPoint* InPoint);
	float GetTimeUntilScoreForPoint(class AKSControlPoint* InPoint);
	float GetScoreUpdatePeriodForPoint(class AKSControlPoint* InPoint);
	class AKSTeamState* BreakTie(TArray<class AKSTeamState*>* TiedTeams);
};


// Class Killstreak.KSGameMode_NeutralBomb
// 0x01A8 (0x0FF8 - 0x0E50)
class AKSGameMode_NeutralBomb : public AKSGameMode_RoundGame
{
public:
	float                                              ScoreEarnedOnBombTimerComplete;                           // 0x0E50(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ScoreEarnedOnBombDisarmed;                                // 0x0E54(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       BombDisarmedDescription;                                  // 0x0E58(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       BombDetonatedDescription;                                 // 0x0E70(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       BombArmedDescription;                                     // 0x0E88(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CashEarnedOnBombArmed;                                    // 0x0EA0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CashEarnedOnBombDisarmed;                                 // 0x0EA4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSNeutralBombSpawner*>               BombSpawners;                                             // 0x0EA8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSNeutralBombSpawner*                       CurrentBombSpawner;                                       // 0x0EB8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                BombEquipPoint;                                           // 0x0EC0(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeAfterRoundStartToResetSpawnedBomb;                    // 0x0EC8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BombResetDuration;                                        // 0x0ECC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0ED0(0x0008) MISSED OFFSET
	bool                                               bWinOnBombDisarm;                                         // 0x0ED8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5F];                                      // 0x0ED9(0x005F) MISSED OFFSET
	TArray<class AKSNeutralBombZone*>                  AllBombZones;                                             // 0x0F38(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0F48(0x0050) MISSED OFFSET
	TMap<int, int>                                     ZoneGroupGuarantees;                                      // 0x0F98(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bPrioritizeUnusedZonesNext;                               // 0x0FE8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0FE9(0x0003) MISSED OFFSET
	int                                                ZonesLeftToWin;                                           // 0x0FEC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeAddedOnBombComplete;                                  // 0x0FF0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0FF4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_NeutralBomb");
		return ptr;
	}


	void ResetBombIfInSpawnedState();
	void ResetBomb();
};


// Class Killstreak.KSGameMode_Demolition
// 0x0010 (0x1008 - 0x0FF8)
class AKSGameMode_Demolition : public AKSGameMode_NeutralBomb
{
public:
	bool                                               bDirectBombGive;                                          // 0x0FF8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0FF9(0x0007) MISSED OFFSET
	class UKSItem*                                     DirectGiveBombItem;                                       // 0x1000(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Demolition");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_ExtInterface
// 0x0000 (0x0028 - 0x0028)
class UKSGameMode_ExtInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_ExtInterface");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_ExtractionCoop
// 0x0060 (0x0F60 - 0x0F00)
class AKSGameMode_ExtractionCoop : public AKSGameMode_Extraction
{
public:
	float                                              CollectionPhaseTime;                                      // 0x0F00(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CollectionsToActivate;                                    // 0x0F04(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EscapePhaseTime;                                          // 0x0F08(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireDownedPlayersToEscape;                            // 0x0F0C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0F0D(0x0003) MISSED OFFSET
	TArray<class AKSPlayerState*>                      PlayersInEscapeZone;                                      // 0x0F10(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0F20(0x0008) MISSED OFFSET
	class UClass*                                      StartingDropShipClass;                                    // 0x0F28(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropShipLocation*                         StartDropShipLocation;                                    // 0x0F30(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSDropShipLocation*                         EscapeDropShipLocation;                                   // 0x0F38(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x11];                                      // 0x0F40(0x0011) MISSED OFFSET
	bool                                               bUseAlarmState;                                           // 0x0F51(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0F52(0x0002) MISSED OFFSET
	float                                              TimeAddedPerObjective;                                    // 0x0F54(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AlarmStateTime;                                           // 0x0F58(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AlarmSpawnPeriod;                                         // 0x0F5C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_ExtractionCoop");
		return ptr;
	}


	void BroadcastAlarm();
};


// Class Killstreak.KSGameMode_RoyaleBase
// 0x0030 (0x0D90 - 0x0D60)
class AKSGameMode_RoyaleBase : public AKSGameMode
{
public:
	TArray<struct FRoyaleZoneData>                     DataForZones;                                             // 0x0D60(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeUntilFirstZoneActivation;                             // 0x0D70(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InsertionPhaseDuration;                                   // 0x0D74(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSRoyaleSafeZone>            SafeZone;                                                 // 0x0D78(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentZoneIndex;                                         // 0x0D80(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0D84(0x0004) MISSED OFFSET
	struct FTimerHandle                                DamageTimer;                                              // 0x0D88(0x0008) (CPF_Transient, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_RoyaleBase");
		return ptr;
	}


	void TickZoneDamage();
	bool GetMustContainActor(class AActor** MustContainActor, float* SafeRadius);
};


// Class Killstreak.KSGameMode_ExtractionRoyale
// 0x0038 (0x0DC8 - 0x0D90)
class AKSGameMode_ExtractionRoyale : public AKSGameMode_RoyaleBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0D90(0x0008) MISSED OFFSET
	class AKSTeamState*                                AttackingTeam;                                            // 0x0D98(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSExtractionComputer*                       ActiveComputer;                                           // 0x0DA0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToCompleteHack;                                       // 0x0DA8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToUnlockComputers;                                    // 0x0DAC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0DB0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_ExtractionRoyale");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_Heist
// 0x0040 (0x0DA0 - 0x0D60)
class AKSGameMode_Heist : public AKSGameMode
{
public:
	int                                                TeamCashToWin;                                            // 0x0D60(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalRefreshesInMatch;                                    // 0x0D64(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSCash*>                             CashAssets;                                               // 0x0D68(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0D78(0x0008) MISSED OFFSET
	class AKSGameState_Heist*                          CachedHeistState;                                         // 0x0D80(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                WinningTeam;                                              // 0x0D88(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCashExtractionPoint*>              CashExtractionPoints;                                     // 0x0D90(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Heist");
		return ptr;
	}

};


// Class Killstreak.KSGameMode_Incursion
// 0x0000 (0x0F00 - 0x0F00)
class AKSGameMode_Incursion : public AKSGameMode_Extraction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Incursion");
		return ptr;
	}


	void HackDefenseSuccessful();
};


// Class Killstreak.KSGameMode_Modular
// 0x00E8 (0x0F38 - 0x0E50)
class AKSGameMode_Modular : public AKSGameMode_RoundGame
{
public:
	struct FScriptMulticastDelegate                    OnTeamWiped;                                              // 0x0E50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimerModifiedMidPhase;                                  // 0x0E60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bMarkedInProgress;                                        // 0x0E70(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseInitialSpawnPoints;                                   // 0x0E71(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoRestoreRespawnConfigOnNewRound;                      // 0x0E72(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoRevertTeamSwapsOnNewRound;                           // 0x0E73(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0E74(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamChanged;                                            // 0x0E78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAwardBonusPointToRoundWinner;                            // 0x0E88(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0E89(0x0007) MISSED OFFSET
	TMap<class AKSPlayerState*, class AKSTeamState*>   OriginalPlayersToTeams;                                   // 0x0E90(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<int, int>                                     ScoreAtRoundStart;                                        // 0x0EE0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSPhaseRuleComponent*                       ActivePhaseRule;                                          // 0x0F30(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Modular");
		return ptr;
	}


	void SortObjectivesByLootGroup(bool ShouldSortDescending, TArray<class AKSObjectiveBase*>* ObjectivesToSort);
	void SortObjectivesByDisplayId(bool ShouldSortDescending, TArray<class AKSObjectiveBase*>* ObjectivesToSort);
	void ShuffleObjectives(TArray<class AKSObjectiveBase*>* ObjectivesToShuffle);
	void PushNewRespawnConfigToTeams(const struct FKSRespawnConfig& NewConfig, EExtractionTeamType Filter, bool bInverseFilter, bool bReset);
	void PushNewRespawnConfigToAllTeams(const struct FKSRespawnConfig& Config, bool bReset);
	void PushModeDefaultRespawnConfigToTeams(EExtractionTeamType Filter, bool bInverseFilter, bool bReset);
	void PushModeDefaultRespawnConfigToAllTeams(bool bReset);
	void OnRoundStart();
	void OnRoundPrepare();
	void ModifyTimerBySeconds(float Seconds);
	void MarkWonByElimination();
	bool FilterTeamObjectives(TArray<class AKSObjectiveBase*> AvailableObjectives, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterObjectiveForTeams(TArray<class AKSObjectiveBase*> AvailableObjectives, class AKSTeamState* FavoredTeam, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterObjectiveAgainstTeams(TArray<class AKSObjectiveBase*> AvailableObjectives, class AKSTeamState* DiscouragedTeam, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	bool FilterNeutralObjectives(TArray<class AKSObjectiveBase*> AvailableObjectives, TArray<class AKSObjectiveBase*>* FilteredObjectives);
	void EndRoundPrepare();
	class AKSObjectiveBase* ChooseRandomObjective(TArray<class AKSObjectiveBase*> AvailableObjectives);
	void ChangePlayerTeam(class AKSPlayerState* Player, class AKSTeamState* NewTeam, EChangeAdditionalActionCondition ShouldRestartPlayer);
};


// Class Killstreak.KSGameMode_Sabotage
// 0x0098 (0x0EE8 - 0x0E50)
class AKSGameMode_Sabotage : public AKSGameMode_RoundGame
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0E50(0x0008) MISSED OFFSET
	int                                                ActiveComputerCount;                                      // 0x0E58(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTiebreakerRoundWipesEquipment;                           // 0x0E5C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0E5D(0x0003) MISSED OFFSET
	class AKSTeamState*                                DefendingTeam;                                            // 0x0E60(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSTeamState*                                AttackingTeam;                                            // 0x0E68(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0E70(0x0008) MISSED OFFSET
	TArray<class AKSExtractionComputer*>               ActiveComputers;                                          // 0x0E78(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToUnlockComputers;                                    // 0x0E88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HackTimeExtension;                                        // 0x0E8C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToCompleteHack;                                       // 0x0E90(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HackedComputerCount;                                      // 0x0E94(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class AKSExtractionComputer*, struct FTimerHandle> HackCompletionTimers;                                     // 0x0E98(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_Sabotage");
		return ptr;
	}


	void OnHackComplete(class AKSExtractionComputer* InComputer);
	bool HasDefendingTeamWon();
	bool HasAttackingTeamWon();
};


// Class Killstreak.KSGameMode_StrikeOutControl
// 0x0010 (0x0EF0 - 0x0EE0)
class AKSGameMode_StrikeOutControl : public AKSGameMode_Control
{
public:
	int                                                TicketsToRemoveOnScore;                                   // 0x0EE0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSTeamState>                 PendingRoundWinner;                                       // 0x0EE4(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SuddenDeathScoreUpdatePeriod;                             // 0x0EEC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_StrikeOutControl");
		return ptr;
	}


	void OnTeamRemainingRespawnsChanged(class AKSTeamState* Team);
	void OnObjectiveUpdate(class AKSObjectiveBase* InObjective, const struct FObjectiveState& ObjectiveState);
};


// Class Killstreak.KSGameMode_TutorialBase
// 0x0020 (0x0D80 - 0x0D60)
class AKSGameMode_TutorialBase : public AKSGameMode
{
public:
	struct FScriptMulticastDelegate                    OnTutorialComplete;                                       // 0x0D60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TutorialEnding;                                           // 0x0D70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameMode_TutorialBase");
		return ptr;
	}


	void CallTutorialEndingDelegates();
	void CallOnTutorialCompleteDelegates();
};


// Class Killstreak.KSGamepadLookSpeedManager
// 0x0008 (0x0030 - 0x0028)
class UKSGamepadLookSpeedManager : public UObject
{
public:
	class AKSPlayerController*                         PlayerController;                                         // 0x0028(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGamepadLookSpeedManager");
		return ptr;
	}

};


// Class Killstreak.KSGamepadCurvedLookSpeedManager
// 0x00B8 (0x00E8 - 0x0030)
class UKSGamepadCurvedLookSpeedManager : public UKSGamepadLookSpeedManager
{
public:
	bool                                               bUseBaseVelocity;                                         // 0x0030(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UCurveVector*                                LookBaseVelocityCurve;                                    // 0x0038(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   BoostThreshold;                                           // 0x0040(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   BoostMultiplier;                                          // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BoostAcceleration;                                        // 0x0050(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UCurveVector*                                MouseLookMaxVelocityCurve;                                // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookMaxVelocityADSCurve;                             // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TurnRateMultiplier;                                       // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LookUpRateMultiplier;                                     // 0x006C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookAccelerationCurve;                               // 0x0070(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveVector*                                MouseLookAccelerationADSCurve;                            // 0x0078(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, class UCurveVector*>            TestBaseVelocityCurves;                                   // 0x0080(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_AdvancedDisplay, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   LastRotationVelocityScale;                                // 0x00D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   PrevInput;                                                // 0x00D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector2D                                   CurrentTurnSpeed;                                         // 0x00E0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGamepadCurvedLookSpeedManager");
		return ptr;
	}


	void SetOuterDeadZone(float NewZoneX, float NewZoneY);
	void SetBoostMultiplier(float NewBoostX, float NewBoostY);
	void SetBoostAcceleration(float NewAccel);
	void SetBaseVelocityCurve(const struct FName& TestCurveName);
	void PrintLookSpeedParameters();
};


// Class Killstreak.KSGamePhaseProxyBase
// 0x0000 (0x0028 - 0x0028)
class UKSGamePhaseProxyBase : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGamePhaseProxyBase");
		return ptr;
	}


	void Activate();
};


// Class Killstreak.KSGameState
// 0x1518 (0x17B8 - 0x02A0)
class AKSGameState : public APGame_GameState
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x02A0(0x0038) MISSED OFFSET
	struct FKSPlayerIdentitiesContainer                PlayerIdentitiesContainer;                                // 0x02D8(0x0120) (CPF_Net, CPF_NativeAccessSpecifierPublic)
	TMap<uint64_t, TWeakObjectPtr<class AKSLagCompensatedActor>> PredictedActors;                                          // 0x03F8(0x0050) (CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0448(0x0010) MISSED OFFSET
	EKillCamStatus                                     KillCamStatus;                                            // 0x0458(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	float                                              KillCamRecordingSecondsToKeep;                            // 0x045C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class APawn*                                       KillCamFocusPawn;                                         // 0x0460(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0468(0x0008) MISSED OFFSET
	class APawn*                                       KillCamSecondaryFocusPawn;                                // 0x0470(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0478(0x0008) MISSED OFFSET
	class AActor*                                      KillCamFocusSpecial;                                      // 0x0480(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0488(0x0004) MISSED OFFSET
	float                                              KillCamTime;                                              // 0x048C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0490(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGameDisplayInfo;                                        // 0x04A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRemoveGameDisplayInfo;                                  // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x68];                                      // 0x04C8(0x0068) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPhaseChangeDel;                                         // 0x0530(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetupStartDel;                                          // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetupEndDel;                                            // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAbortFireDel;                                           // 0x0560(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimerSecondTick;                                        // 0x0570(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FName                                       MatchPhase;                                               // 0x0580(0x0008) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FName                                       PreviousPhase;                                            // 0x0588(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasProcessedMatchStarted;                                // 0x0590(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4F];                                      // 0x0591(0x004F) MISSED OFFSET
	struct FPGame_ReplicatedTimer                      ReplicatedMatchTimer;                                     // 0x05E0(0x0038) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0xC];                                       // 0x0618(0x000C) MISSED OFFSET
	bool                                               bCharacterBodiesPersistAfterDeath;                        // 0x0624(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0625(0x0003) MISSED OFFSET
	float                                              SecondsForCharacterBodiesToPersistAfterDeath;             // 0x0628(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SecondsToViewBodyAfterDeath;                              // 0x062C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerDeath;                                            // 0x0630(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDown;                                             // 0x0640(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuItemUse;                                      // 0x0650(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSpawn;                                            // 0x0660(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerRevive;                                           // 0x0670(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWinnerSet;                                              // 0x0680(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerAssist;                                           // 0x0690(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLastManStanding;                                        // 0x06A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUIRelevantPlayerStateChangedDel;                        // 0x06B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              DefaultMinimapWidth;                                      // 0x06C0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamAdded;                                              // 0x06C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTeamRemoved;                                            // 0x06D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass*>                              AccoladeTrackerClasses;                                   // 0x06E8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x18];                                      // 0x06F8(0x0018) MISSED OFFSET
	class AKSMiniMapAssistant*                         MiniMapAssistant;                                         // 0x0710(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<int, class AKSTeamState*>                     teams;                                                    // 0x0718(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0768(0x0008) MISSED OFFSET
	struct FCombatEventList                            CombatEventList;                                          // 0x0770(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRadialMenuItemEventList                    RadialMenuItemEventList;                                  // 0x07F8(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FAssistEventList                            AssistEventList;                                          // 0x0880(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReviveEventList                            ReviveEventList;                                          // 0x0908(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedDel;                                      // 0x0990(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedOrDownedDel;                              // 0x09A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerEliminatedDel;                                    // 0x09B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerDownedChangedDel;                                 // 0x09C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAttackingTeamUpdated;                                   // 0x09D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisplayCashChanged;                                     // 0x09E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisplayCash;                                             // 0x09F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x3];                                       // 0x09F1(0x0003) MISSED OFFSET
	int                                                CashPerDown;                                              // 0x09F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DownDescription;                                          // 0x09F8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CashPerAssist;                                            // 0x0A10(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0A14(0x0004) MISSED OFFSET
	struct FText                                       AssistDescription;                                        // 0x0A18(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CashPerRevive;                                            // 0x0A30(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0A34(0x0004) MISSED OFFSET
	struct FText                                       ReviveDescription;                                        // 0x0A38(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CashPerElim;                                              // 0x0A50(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0A54(0x0004) MISSED OFFSET
	struct FText                                       EliminationDescription;                                   // 0x0A58(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CashPerSuicide;                                           // 0x0A70(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0A74(0x0004) MISSED OFFSET
	struct FText                                       SuicideDescription;                                       // 0x0A78(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FString                                     MercSelectSubLevel;                                       // 0x0A90(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FString>                             ActiveCinematicSubLevelNames;                             // 0x0AA0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamSidesFlipped;                                       // 0x0AB0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<int>                                        TierUnlockThresholds;                                     // 0x0AC0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMarkerDistanceForCommonLoot;                           // 0x0AD0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSGameTicketDisplayType                           ObjectiveTicketDisplayType;                               // 0x0AD4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x273];                                     // 0x0AD5(0x0273) MISSED OFFSET
	TArray<class AKSLootSiteBase*>                     WorldLootSites;                                           // 0x0D48(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSObjectiveBase*>                    WorldObjectives;                                          // 0x0D58(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSFlightPoint*>                      WorldFlightPoints;                                        // 0x0D68(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSDestructibleBase*>                 WorldDestructibles;                                       // 0x0D78(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSItemDrop*>                         WorldDrops;                                               // 0x0D88(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSProjectile*>                       WorldProjectiles;                                         // 0x0D98(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSCharacter*>                        WorldCharacters;                                          // 0x0DA8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UKSHeatSourceComponent*>              WorldHeatSources;                                         // 0x0DB8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<TScriptInterface<class UKSDestroyableHazard>> WorldHazards;                                             // 0x0DC8(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSWayPointSet*>                      WorldWayPointSets;                                        // 0x0DD8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSOutOfBoundsRecoveryPoint*>         WorldRecoveryPoints;                                      // 0x0DE8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSAnnouncer*>                        WorldAnnouncers;                                          // 0x0DF8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSPlayerShop*>                       WorldPlayerShops;                                         // 0x0E08(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<int, class AKSCosmeticStateReplicator*>       CosmeticStateReplicators;                                 // 0x0E18(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData20[0x18];                                      // 0x0E68(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGameObjectiveRegistered;                                // 0x0E80(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveUnregistered;                              // 0x0E90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveStateChanged;                              // 0x0EA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerActive;                               // 0x0EB0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerComplete;                             // 0x0EC0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameObjectiveTimerTick;                                 // 0x0ED0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData21[0x10];                                      // 0x0EE0(0x0010) MISSED OFFSET
	TMap<int, TScriptInterface<class UKSObjective>>    GameObjectives;                                           // 0x0EF0(0x0050) (CPF_UObjectWrapper, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHeatSourceAdded;                                        // 0x0F40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHeatSourceRemoved;                                      // 0x0F50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              WorldDeployables;                                         // 0x0F60(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bDestroyDeployableOnInstigatorDeath;                      // 0x0F70(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x7];                                       // 0x0F71(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemDropAdded;                                          // 0x0F78(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	float                                              ItemDropLifeSpan;                                         // 0x0F88(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bShouldOffsetWeaponDrops;                                 // 0x0F8C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0F8D(0x0003) MISSED OFFSET
	float                                              ProjectileLifeSpan;                                       // 0x0F90(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0F94(0x0004) MISSED OFFSET
	TArray<TScriptInterface<class UKSSkyDiveListener>> SkyDiveListeners;                                         // 0x0F98(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSCharacter*>                        SkyDivers;                                                // 0x0FA8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData25[0x88];                                      // 0x0FB8(0x0088) MISSED OFFSET
	struct FText                                       PresenceDisplayText;                                      // 0x1040(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FString                                     PresenceKey;                                              // 0x1058(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x8];                                       // 0x1068(0x0008) MISSED OFFSET
	class UKSTimerComponent*                           WaveRespawnTimer;                                         // 0x1070(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FKSLootRarityTimerPair>              LootRarityTimerPairs;                                     // 0x1078(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<ELootSiteRarity, class UKSTimerComponent*>    LootRarityTimerMap;                                       // 0x1088(0x0050) (CPF_ExportObject, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLootRespawnTimerTick;                                   // 0x10D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnLootRespawnTimerActive;                                 // 0x10E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAccoladeDisplay;                                        // 0x10F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FAccoladeEventList                          AccoladeEventList;                                        // 0x1108(0x0088) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bBlockWeaponFiring;                                       // 0x1190(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData27[0x3];                                       // 0x1191(0x0003) MISSED OFFSET
	float                                              HealthGate;                                               // 0x1194(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPreserveReserveAmmo;                                     // 0x1198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bInfiniteAmmo;                                            // 0x1199(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bShowHUDObjectiveRoles;                                   // 0x119A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowHUDObjectiveRoleBeforeJobSelect;                     // 0x119B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bInvertHUDObjectiveRoles;                                 // 0x119C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData28[0x3];                                       // 0x119D(0x0003) MISSED OFFSET
	struct FKSGameHUDSettings                          GameModeHUDSettings;                                      // 0x11A0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayersShouldSpectateDefaultCamera;                      // 0x11B8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShowingPreviewActorSubLevel;                             // 0x11B9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPreviewActorsEnabled;                                    // 0x11BA(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData29[0x4D];                                      // 0x11BB(0x004D) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDynamicDestroyPreviewActorsDel;                         // 0x1208(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDynamicDisablePreviewActorsDel;                         // 0x1218(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDynamicEnablePreviewActorsDel;                          // 0x1228(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnCinematicSubLevelEnabled;                               // 0x1238(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicSubLevelDisabled;                              // 0x1248(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               AlwaysIncludedClientBundles;                              // 0x1258(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FName>                               AlwaysIncludedServerBundles;                              // 0x1268(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FReplicatedPreloader                        Preloader;                                                // 0x1278(0x01E0) (CPF_Net, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPostSelectionCinematicDisabled;                          // 0x1458(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceAllowLeaveMatchButton;                              // 0x1459(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x6];                                       // 0x145A(0x0006) MISSED OFFSET
	struct FKSPersistentMinPlayerDataContainer         PersistentPlayerDataContainer;                            // 0x1460(0x0210) (CPF_Net, CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataCreatedDel;                         // 0x1670(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData31[0x68];                                      // 0x1680(0x0068) MISSED OFFSET
	int                                                FriendlyFireKillPenalty;                                  // 0x16E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                FriendlyFireDownPenalty;                                  // 0x16EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData32[0x18];                                      // 0x16F0(0x0018) MISSED OFFSET
	bool                                               bCanToggleScoreboard;                                     // 0x1708(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData33[0x17];                                      // 0x1709(0x0017) MISSED OFFSET
	bool                                               bMatchEndedInSurrender;                                   // 0x1720(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData34[0x7];                                       // 0x1721(0x0007) MISSED OFFSET
	class AKSTeamState*                                SurrenderWinningTeam;                                     // 0x1728(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class AActor>>               StimulusSourceObjects;                                    // 0x1730(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, struct FString>                 HUDComponentPropMap;                                      // 0x1740(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      EmoteMusicManagerClass;                                   // 0x1790(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSEmoteMusicManager*                        EmoteMusicManager;                                        // 0x1798(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSCinematicDataContainer*                   CinematicDataContainer;                                   // 0x17A0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSMVPDeterminant*                           MVPDeterminant;                                           // 0x17A8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWayPointSetCollection*                    WayPointSetCollection;                                    // 0x17B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState");
		return ptr;
	}


	bool WasLastPhasePrepare();
	void UnregisterGameObjective(const TScriptInterface<class UKSObjective>& Objective);
	void TriggerPostSelectionPhaseBeginFadeOutDel();
	void TriggerOnTeamCinematicSequenceBeginDel();
	void TrackedPlayerStateDestroyed(class AActor* InActor);
	void StopWaveRespawnTimer();
	void StartWaveRespawnTimer();
	bool ShouldForceAllowLeaveMatchButton();
	bool ShouldDestroyDeployableOnInstigatorDeath();
	void SetSideForTeam(int TeamNumber, int SideNumber);
	void SetMVPDeterminant(class UKSMVPDeterminant* InMVPDeterminant);
	void SetCinematicDataContainer(class UKSCinematicDataContainer* InCinematicDataContainer);
	void RemoveGameDisplayInfoForActor(class AActor* pActor);
	void RemoveGameDisplayInfoById(int DisplayInfoIdToRemove);
	void RemoveDeployable(const TScriptInterface<class UKSDeployable>& Deployable);
	void RegisterGameObjective(int ObjectiveId, const TScriptInterface<class UKSObjective>& Objective);
	void ReceivedKillCamStatus();
	void OnRep_WaveRespawnTimer();
	void OnRep_MatchPhase();
	void OnRep_LootRarityTimerPairs();
	void OnRep_InvertHUDObjectiveRoles();
	void OnRep_InfiniteAmmo();
	void OnRep_EmoteMusicManagerClass();
	void OnRep_DisplayCash();
	void OnRegisteredStimulusObjectDestroyed(class AActor* DestroyedActor);
	void OnObjectiveTimerTick(float Time, int ObjectiveId);
	void OnObjectiveTimerComplete(int ObjectiveId);
	void OnObjectiveTimerActive(bool Active, int ObjectiveId);
	void OnGameObjectiveStateChangedCallback(const TScriptInterface<class UKSObjective>& Objective);
	void OnGameObjectiveDestroyed(class AActor* ObjectiveAsActor);
	void NotifyDropshipDoorOpened();
	void LootRespawnTimerTick(float Seconds, ELootSiteRarity Rarity);
	void LootRespawnTimerComplete(ELootSiteRarity Rarity);
	void LootRespawnTimerActive(bool bActive, ELootSiteRarity Rarity);
	bool IsRoyaleMode();
	bool IsPostSelectionCinematicDisabled();
	bool IsMVPLineupCinematicActive();
	bool IsLocalPlayerWinner();
	bool IsKillCamRecording();
	bool IsInSetup();
	bool IsInSelection();
	bool IsCinematicSubLevelActive(const struct FString& CinematicSubLevelName);
	TArray<class AActor*> GetWorldDeployables();
	int GetWinningTeamNum();
	void GetUIMatchTime(float* OutTimeRemaining, float* OutTotalTime);
	TArray<class AKSItemDrop*> GetTrackedWorldDrops();
	TArray<class AKSProjectile*> GetTrackedProjectiles();
	void GetTeamsWithObjectiveRole(EExtractionTeamType Filter, bool bInverseFilter, TArray<class AKSTeamState*>* OutTeams);
	TArray<class AKSTeamState*> GetTeams();
	class AKSTeamState* GetTeamConst(int TeamNum);
	int GetSideForTeam(int TeamNumber);
	float GetSecondsFromSurrenderFailure();
	float GetSecondsFromPlayerDisconnect();
	float GetSecondsFromMatchStart();
	TArray<class UKSHeatSourceComponent*> GetRegisteredHeatSources();
	bool GetPlayerIdentityDataByPlayerState(class AKSPlayerState* PlayerState, struct FKSPlayerIdentityData* PlayerIdentityData);
	class UKSPersistentPlayerData* GetPersistentPlayerDataById(const struct FKSPersistentPlayerId& InId);
	class UKSMVPDeterminant* GetMVPDeterminant();
	class AKSMiniMapAssistant* GetMiniMapAssistant();
	EPGame_ReplicateTimerState GetMatchTimerState();
	void GetMatchTimer(float* OutPhaseTimeRemaining, float* OutTotalPhaseTime);
	struct FName GetMatchPhase();
	class APawn* GetKillCamSecondaryFocusPawn(int LocalPlayerIndex);
	class AKSProjectile* GetKillCamFocusSpecial(int LocalPlayerIndex);
	class APawn* GetKillCamFocusPawn(int LocalPlayerIndex);
	class AActor* GetKillCamActor(int Guid, int LocalPlayerIndex);
	void GetGameObjectives(TArray<TScriptInterface<class UKSObjective>>* objectives);
	TScriptInterface<class UKSObjective> GetGameObjectiveById(int ID);
	class AKSTeamState* GetFirstTeamWithObjectiveRole(EExtractionTeamType Filter);
	int GetFirstTeamForSide(int SideNumber);
	class AKSAnnouncer* GetFirstAnnouncer();
	class UKSCinematicDataContainer* GetCinematicDataContainer();
	class AKSTeamState* GetAttackingTeam();
	void GetAllTeams(TArray<class AKSTeamState*>* AllTeams);
	void GetAllPersistentPlayerData();
	void GetAllFriendlyTeams(class APlayerController* InPlayerController, TArray<class AKSTeamState*>* FriendlyTeams);
	void GetAllEnemyTeams(class APlayerController* InPlayerController, TArray<class AKSTeamState*>* EnemyTeams);
	void FlipTeamSides();
	void EndGameInSurrender(int WinningTeamNum);
	bool DoesQueueAllowSurrender();
	void ClientsNotifyWinnerSet(int TeamNum);
	void ClientsNotifyLastManStanding(class AKSPlayerState* LastPlayer);
	bool CharacterBodiesPersistAfterDeath();
	int CalculateCashForAssist(float DamagePercent);
	void BroadcastTeamSidesFlipped();
	void BroadcastKillCamParameters(class APawn* InPawn, class APawn* InSecondaryPawn, class AActor* InSpecialDamageCauser);
	bool BlueprintIsMatchInProgress();
	bool BlueprintHasMatchEnded();
	void BindGameObjectiveStateTimerCallbacks(const TScriptInterface<class UKSObjective>& Objective);
	int AddGameDisplayInfo(const struct FDisplayInfo& DisplayInfo);
	void AddDeployable(const TScriptInterface<class UKSDeployable>& Deployable);
};


// Class Killstreak.KSGameState_RoundGame
// 0x0170 (0x1928 - 0x17B8)
class AKSGameState_RoundGame : public AKSGameState
{
public:
	struct FReplicatedRoundInfo                        RoundInfo;                                                // 0x17B8(0x000C) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FReplicatedRoundInfo                        PreviousRoundInfo;                                        // 0x17C4(0x000C) (CPF_Edit, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutAtMatchTime;                               // 0x17D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutDelayTime;                                 // 0x17D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndFadeOutTime;                                      // 0x17D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsingRoundDelayedGarbageCollection;                      // 0x17DC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x17DD(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRoundInfoChangedDel;                                    // 0x17E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x17F0(0x0018) MISSED OFFSET
	struct FRoundResult                                RoundResult;                                              // 0x1808(0x0020) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FRoundResult>                        AllRoundResults;                                          // 0x1828(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalRounds;                                              // 0x1838(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RoundsToWin;                                              // 0x183C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTotalRoundsSet;                                         // 0x1840(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRoundsToWinSet;                                         // 0x1850(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FRoundInitState                             RoundInitState;                                           // 0x1860(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRoundSetupDel;                                          // 0x1870(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x18];                                      // 0x1880(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRoundStartDel;                                          // 0x1898(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x18A8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRoundOverDel;                                           // 0x18C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x18];                                      // 0x18D0(0x0018) MISSED OFFSET
	int                                                CashPerWinningPlayer;                                     // 0x18E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x18EC(0x0004) MISSED OFFSET
	TArray<int>                                        ConsecutiveCashPerLosingPlayer;                           // 0x18F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x1900(0x0004) MISSED OFFSET
	float                                              RoundEndCamPreDeathDuration;                              // 0x1904(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndCamPostDeathDuration;                             // 0x1908(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndCamPreDeathDilation;                              // 0x190C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RoundEndCamTimeDilation;                                  // 0x1910(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EndOfMatchKillCamDelay;                                   // 0x1914(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x10];                                      // 0x1918(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_RoundGame");
		return ptr;
	}


	void TryToReplayLastKill();
	bool RoundHasStarted();
	bool RoundHasEnded();
	bool PreparingForNextRound();
	void OnRep_TotalRounds();
	void OnRep_RoundsToWin();
	void OnRep_RoundResult();
	void OnRep_RoundInitState();
	void OnRep_RoundInfo();
	void OnMatchTimerUpdate(float TimeInWholeSeconds);
	bool IsTieBreakerRound();
	bool IsTeamAtMatchPoint(class AKSTeamState* Team);
	bool IsRoundInProgress();
	bool HasTriggeredRoundStart();
	bool HasTriggeredRoundSetup();
	bool HasTriggeredRoundOver();
	int GetTotalRounds();
	class AKSTeamState* GetRoundWinner();
	EPGame_ReplicateTimerState GetRoundTimerState();
	void GetRoundTimer(float* OutRoundTimeRemaining, float* OutTotalRoundTime);
	int GetRoundsToWin();
	struct FName GetRoundState();
	float GetRoundStartTime();
	unsigned char GetRoundNumber();
	TArray<struct FRoundResult> GetAllRoundResults();
};


// Class Killstreak.KSGameState_Control
// 0x0040 (0x1968 - 0x1928)
class AKSGameState_Control : public AKSGameState_RoundGame
{
public:
	struct FScriptMulticastDelegate                    OnControlTeamScored;                                      // 0x1928(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnControlCaptured;                                        // 0x1938(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnControlTimerTicked;                                     // 0x1948(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<class AKSControlPoint*>                     ControlPoints;                                            // 0x1958(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Control");
		return ptr;
	}


	void GetAllControlPoints(TArray<class AKSControlPoint*>* OutControlPoints);
	void GetActiveControlPoints(TArray<class AKSControlPoint*>* OutControlPoints);
	void BroadcastTeamScored(class AKSTeamState* ScoringTeam, class AKSControlPoint* ControlPoint);
	void BroadcastControlCaptured(class AKSTeamState* CapturingTeam);
};


// Class Killstreak.KSGameState_NeutralBomb
// 0x00B0 (0x19D8 - 0x1928)
class AKSGameState_NeutralBomb : public AKSGameState_RoundGame
{
public:
	int                                                DownInZoneCashBonus;                                      // 0x1928(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x192C(0x0004) MISSED OFFSET
	struct FText                                       DownInZoneDescription;                                    // 0x1930(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSNeutralBombState                         BombState;                                                // 0x1948(0x0018) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AKSNeutralBombDrop*                          BombDrop;                                                 // 0x1960(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ArmedStateDuration;                                       // 0x1968(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DroppedStateDuration;                                     // 0x196C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnNeutralBombStateChangedDel;                             // 0x1970(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x1980(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBombSpotted;                                            // 0x1988(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               HUDShowEnemyBombCarriers;                                 // 0x1998(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x1999(0x0007) MISSED OFFSET
	class UKSTimerComponent*                           BombStateTimer;                                           // 0x19A0(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBombStateTimerTick;                                     // 0x19A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnBombStateTimerActive;                                   // 0x19B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSNeutralBombZone*>                  BombZones;                                                // 0x19C8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_NeutralBomb");
		return ptr;
	}


	void ResetBombState();
	void OnRep_BombStateTimer();
	void OnRep_BombState();
	struct FKSNeutralBombState GetBombState();
	float GetArmedStateDuration();
	void BombStateTimerTick(float Seconds);
	void BombStateTimerComplete();
	void BombStateTimerActive(bool bActive);
};


// Class Killstreak.KSGameState_Demolition
// 0x0010 (0x19E8 - 0x19D8)
class AKSGameState_Demolition : public AKSGameState_NeutralBomb
{
public:
	class AKSTeamState*                                AttackingTeam;                                            // 0x19D8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUIShowsBombTimer;                                        // 0x19E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseArmStateTimer;                                        // 0x19E1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShowBombTicket;                                          // 0x19E2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ETopbarTicketDisplaySide                           TicketDisplaySide;                                        // 0x19E3(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x19E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Demolition");
		return ptr;
	}


	bool ShouldUseArmStateTimer();
	bool ShouldShowBombTimer();
	bool ShouldShowBombTicket();
	void OnRep_AttackingTeam();
	ETopbarTicketDisplaySide GetTicketDisplaySide();
};


// Class Killstreak.KSGameState_ExtInterface
// 0x0000 (0x0028 - 0x0028)
class UKSGameState_ExtInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_ExtInterface");
		return ptr;
	}

};


// Class Killstreak.KSGameState_Extraction
// 0x00F8 (0x1A20 - 0x1928)
class AKSGameState_Extraction : public AKSGameState_RoundGame
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1928(0x0008) MISSED OFFSET
	class AKSTeamState*                                AttackingTeam;                                            // 0x1930(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSExtractionComputer*>               Computers;                                                // 0x1938(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       HackingObjectiveState;                                    // 0x1948(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LocalHackingObjectivState;                                // 0x1950(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreditHacker;                                           // 0x1958(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreditDehacker;                                         // 0x1968(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHackingStartedDel;                                      // 0x1978(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHackingSuccessfulDel;                                   // 0x1988(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDehackStartedDel;                                       // 0x1998(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDehackFailDel;                                          // 0x19A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnComputersUnlocked;                                      // 0x19B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnAttackingTeamEliminatedOrDownedDel;                     // 0x19C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	int                                                CashPerWinDefendingPlayer;                                // 0x19D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HackerBonusCash;                                          // 0x19DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VictoryByHackBonusCash;                                   // 0x19E0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DehackerBonusCash;                                        // 0x19E4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VictoryByDehackBonusCash;                                 // 0x19E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x19EC(0x0004) MISSED OFFSET
	struct FText                                       HackerBonusDescription;                                   // 0x19F0(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       DehackerBonusDescription;                                 // 0x1A08(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Extraction");
		return ptr;
	}


	void OnRep_HackingObjectiveState();
	void OnRep_AttackingTeam();
	bool IsAComputerHacked();
	void GetComputers(TArray<class AKSExtractionComputer*>* OutComputers);
	void CreditHacker(class AKSPlayerState* Hacker);
	void CreditDehacker(class AKSPlayerState* Dehacker);
	void ComputersUnlocked();
};


// Class Killstreak.KSGameState_ExtractionCoop
// 0x00B8 (0x1AD8 - 0x1A20)
class AKSGameState_ExtractionCoop : public AKSGameState_Extraction
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x1A20(0x0010) MISSED OFFSET
	TArray<class AKSExtractionPickup*>                 ExtractionPickups;                                        // 0x1A30(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x1A40(0x0050) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnExtractionPickupChanged;                                // 0x1A90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEscapePointChanged;                                     // 0x1AA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAlarmStateChanged;                                      // 0x1AB0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAlarmPeriodStart;                                       // 0x1AC0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAlarmState;                                              // 0x1AD0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x1AD1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_ExtractionCoop");
		return ptr;
	}


	void OnRep_AlarmState();
	void BroadcastPhaseTimeout(const struct FName& PhaseName);
	void BroadcastExtractionPickupChanged(class AKSObjectiveBase* InObjective, int PickupsUsed, int PickupsLeft);
	void BroadcastEscapePointChanged(TArray<class AKSPlayerState*> ContainedPlayers);
};


// Class Killstreak.KSGameState_RoyaleBase
// 0x0028 (0x17E0 - 0x17B8)
class AKSGameState_RoyaleBase : public AKSGameState
{
public:
	struct FScriptMulticastDelegate                    OnZoneWait;                                               // 0x17B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnZoneShrink;                                             // 0x17C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class AKSRoyaleSafeZone*                           SafeZone;                                                 // 0x17D8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_RoyaleBase");
		return ptr;
	}


	void ZoneWaitStart(float TimeUntilShrink);
	void ZoneShrinkStart(float TimeToShrink);
};


// Class Killstreak.KSGameState_ExtractionRoyale
// 0x00C8 (0x18A8 - 0x17E0)
class AKSGameState_ExtractionRoyale : public AKSGameState_RoyaleBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x17E0(0x0008) MISSED OFFSET
	class AKSTeamState*                                AttackingTeam;                                            // 0x17E8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSExtractionComputer*>               Computers;                                                // 0x17F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       HackingObjectiveState;                                    // 0x1800(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       LocalHackingObjectivState;                                // 0x1808(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreditHacker;                                           // 0x1810(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCreditDehacker;                                         // 0x1820(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHackingStartedDel;                                      // 0x1830(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnHackingSuccessfulDel;                                   // 0x1840(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDehackStartedDel;                                       // 0x1850(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDehackFailDel;                                          // 0x1860(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnComputersUnlocked;                                      // 0x1870(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnAttackingTeamEliminatedOrDownedDel;                     // 0x1880(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	int                                                CashPerWinDefendingPlayer;                                // 0x1890(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HackerBonusCash;                                          // 0x1894(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VictoryByHackBonusCash;                                   // 0x1898(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DehackerBonusCash;                                        // 0x189C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                VictoryByDehackBonusCash;                                 // 0x18A0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x18A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_ExtractionRoyale");
		return ptr;
	}


	void OnRep_HackingObjectiveState();
	void OnRep_AttackingTeam();
	bool IsAComputerHacked();
	void GetComputers(TArray<class AKSExtractionComputer*>* OutComputers);
	void CreditHacker(class AKSPlayerState* Hacker);
	void CreditDehacker(class AKSPlayerState* Dehacker);
	void ComputersUnlocked();
};


// Class Killstreak.KSGameState_Heist
// 0x0068 (0x1820 - 0x17B8)
class AKSGameState_Heist : public AKSGameState
{
public:
	TArray<struct FKSTeamCashPair>                     TeamCash;                                                 // 0x17B8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x50];                                      // 0x17C8(0x0050) MISSED OFFSET
	int                                                Refreshes;                                                // 0x1818(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x181C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Heist");
		return ptr;
	}


	void OnRep_TeamCash();
	void OnRep_Refreshes();
	int GetTeamCash(int TeamNum);
	int GetRefreshes();
};


// Class Killstreak.KSGameState_Modular
// 0x0000 (0x1928 - 0x1928)
class AKSGameState_Modular : public AKSGameState_RoundGame
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Modular");
		return ptr;
	}


	class UKSHUDComponent_Objective* GetKSObjectiveComponent();
};


// Class Killstreak.KSGameState_Sabotage
// 0x0000 (0x1A20 - 0x1A20)
class AKSGameState_Sabotage : public AKSGameState_Extraction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_Sabotage");
		return ptr;
	}

};


// Class Killstreak.KSGameState_StrikeOutControl
// 0x0000 (0x1968 - 0x1968)
class AKSGameState_StrikeOutControl : public AKSGameState_Control
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameState_StrikeOutControl");
		return ptr;
	}

};


// Class Killstreak.KSSettingsSaveGame
// 0x0178 (0x01A0 - 0x0028)
class UKSSettingsSaveGame : public USaveGame
{
public:
	TMap<struct FString, struct FString>               SavedSettingsConfig;                                      // 0x0028(0x0050) (CPF_NativeAccessSpecifierPublic)
	struct FString                                     SavedDisplayLanguage;                                     // 0x0078(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LastJoinedQueuePrimaryId;                                 // 0x0088(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x50];                                      // 0x008C(0x0050) UNKNOWN PROPERTY: SavedLocalActions
	int                                                SavedSelectedRegion;                                      // 0x00E0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LastWhatsNewVersion;                                      // 0x00E4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<int>                                        SavedTransientAcquisitionIds;                             // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x50];                                      // 0x00F8(0x0050) UNKNOWN PROPERTY: SavedViewedNewsPanelIds
	int                                                SavedChallengeVersionId;                                  // 0x0148(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData04[0x50];                                      // 0x014C(0x0050) UNKNOWN PROPERTY: SavedViewedChallengeIds

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSettingsSaveGame");
		return ptr;
	}

};


// Class Killstreak.KSGameUserSettingsDefault
// 0x0010 (0x0038 - 0x0028)
class UKSGameUserSettingsDefault : public UObject
{
public:
	TArray<struct FSettingConfigPair>                  SettingsConfig;                                           // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameUserSettingsDefault");
		return ptr;
	}

};


// Class Killstreak.KSGameUserSettings
// 0x0330 (0x0450 - 0x0120)
class UKSGameUserSettings : public UGameUserSettings
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0120(0x0038) MISSED OFFSET
	int                                                SettingsVersionMajor;                                     // 0x0158(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SettingsVersionMinor;                                     // 0x015C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSGamepadIcons                                    GamepadIconSet;                                           // 0x0160(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	struct FIntPoint                                   DefaultScreenResolution;                                  // 0x0164(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FIntPoint                                   SavedScreenResolution;                                    // 0x016C(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x64];                                      // 0x0174(0x0064) MISSED OFFSET
	struct FString                                     SavedDisplayLanguage;                                     // 0x01D8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LastJoinedQueuePrimaryId;                                 // 0x01E8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SavedSelectedRegion;                                      // 0x01EC(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LastWhatsNewVersion;                                      // 0x01F0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01F4(0x0004) MISSED OFFSET
	TArray<int>                                        SavedTransientAcquisitionIds;                             // 0x01F8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x50];                                      // 0x0208(0x0050) UNKNOWN PROPERTY: SavedViewedNewsPanelIds
	int                                                SavedChallengeVersionId;                                  // 0x0258(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x025C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData06[0x50];                                      // 0x025C(0x0050) UNKNOWN PROPERTY: SavedViewedChallengeIds
	TMap<struct FString, struct FString>               SavedSettingsConfig;                                      // 0x02B0(0x0050) (CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x50];                                      // 0x0300(0x0050) UNKNOWN PROPERTY: SavedLocalActions
	unsigned char                                      UnknownData08[0xF0];                                      // 0x0350(0x00F0) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGamepadIconSetSettingsApplied;                          // 0x0440(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameUserSettings");
		return ptr;
	}


	void SaveLocalAction(const struct FName& Name);
	bool IsLocalActionSaved(const struct FName& Name);
	bool GetVoiceChatEnabled();
	bool GetTextChatEnabled();
	float GetSafeFrameScale();
	bool GetQuipsEnabled();
	EMuteMode GetMuteMode();
	ECrosshairSize GetCrosshairSize();
	bool GetCommunicationsEnabled();
};


// Class Killstreak.KSGameViewportClient
// 0x0040 (0x0388 - 0x0348)
class UKSGameViewportClient : public UPUMG_GameViewportClient
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0348(0x0030) MISSED OFFSET
	class UTexture2D*                                  FadeTexture;                                              // 0x0378(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0380(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGameViewportClient");
		return ptr;
	}

};


// Class Killstreak.KSGeneralProgressionManager
// 0x0000 (0x0210 - 0x0210)
class UKSGeneralProgressionManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGeneralProgressionManager");
		return ptr;
	}

};


// Class Killstreak.KSGlobalShotListener
// 0x0010 (0x0230 - 0x0220)
class AKSGlobalShotListener : public AActor
{
public:
	struct FScriptMulticastDelegate                    ShotNotifyDelegate;                                       // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGlobalShotListener");
		return ptr;
	}


	void ShotNotify(const struct FKSGlobalShotInfo& ShotInfo);
};


// Class Killstreak.KSGroupedActivityEventTracker
// 0x0018 (0x0208 - 0x01F0)
class UKSGroupedActivityEventTracker : public UKSEventTracker
{
public:
	class UKSActivityInstance*                         ActivityInstance;                                         // 0x01F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UKSActivityInstance*>                 ChildActivityInstances;                                   // 0x01F8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGroupedActivityEventTracker");
		return ptr;
	}


	void OnChildActivityFinished(class UKSActivityInstance* Activity);
};


// Class Killstreak.KSGyroControlledPawn
// 0x0000 (0x0028 - 0x0028)
class UKSGyroControlledPawn : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGyroControlledPawn");
		return ptr;
	}

};


// Class Killstreak.KSHairSkeletalMeshComponent
// 0x0010 (0x0E00 - 0x0DF0)
class UKSHairSkeletalMeshComponent : public UKSCharacterSkeletalMeshComponent
{
public:
	struct FName                                       SimulationRootBoneName;                                   // 0x0DF0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0DF8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHairSkeletalMeshComponent");
		return ptr;
	}

};


// Class Killstreak.KSHeadShotTracker
// 0x0000 (0x0098 - 0x0098)
class UKSHeadShotTracker : public UKSAccoladeTracker
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHeadShotTracker");
		return ptr;
	}


	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
};


// Class Killstreak.KSPlayerHealthMeterBase
// 0x0000 (0x0238 - 0x0238)
class UKSPlayerHealthMeterBase : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerHealthMeterBase");
		return ptr;
	}


	void SetHealthMeterState(const struct FPlayerHealthMeterState& HealthMeterState);
	int GetMeterLargestValue(const struct FPlayerHealthMeterState& HealthMeterState);
};


// Class Killstreak.KSHeatSourceComponent
// 0x0050 (0x0100 - 0x00B0)
class UKSHeatSourceComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTemperatureChanged;                                     // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bSkipCosmeticIfOwnerIsLocallyViewed;                      // 0x00C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOnlySkipCosmeticForOnAndViewedState;                     // 0x00C1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00C2(0x0002) MISSED OFFSET
	float                                              Temperature;                                              // 0x00C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TemperatureScalarModifier;                                // 0x00C8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableTickWhenTemperatureTransitionCompletes;           // 0x00CC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	float                                              TransitionTargetTemp;                                     // 0x00D0(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TransitionRate;                                           // 0x00D4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EModViewModeState                                  LastKnownViewModeState;                                   // 0x00D8(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 WithoutHeatVisibilityBlockers;                            // 0x00E0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 HeatOnlyVisibilityBlockers;                               // 0x00F0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHeatSourceComponent");
		return ptr;
	}


	void UnregisterWithoutHeatVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void UnregisterHeatOnlyVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void TransitionToTemperature(float NewTemperature, float RatePerSecond);
	void SetTemperatureScalarModifier(float NewTemperatureModifier);
	void SetTemperature(float NewTemperature);
	void RegisterWithoutHeatVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void RegisterHeatOnlyVisibilityBlocker(class UPrimitiveComponent* Blocker);
	void OnThermalVisionStateChanged(EModViewModeState NewState);
	void OnOwnerInfoUpdateNotify();
	void NotifyThermalVisionStateChanged(EModViewModeState NewState);
	float GetUnmodifiedTemperature();
	float GetTemperature();
};


// Class Killstreak.KSHUDAnnouncementComponent
// 0x0038 (0x00E8 - 0x00B0)
class UKSHUDAnnouncementComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnEndOfMatch;                                             // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	class AKSPlayerController*                         OwningPlayer;                                             // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAnnouncement;                                           // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnResultAnnouncement;                                     // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_BlueprintCallable, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHUDAnnouncementComponent");
		return ptr;
	}


	class AKSPlayerController* GetPlayerController();
};


// Class Killstreak.KSHUDComponent
// 0x0000 (0x00B0 - 0x00B0)
class UKSHUDComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHUDComponent");
		return ptr;
	}

};


// Class Killstreak.KSHUDComponent_Objective
// 0x00B0 (0x0160 - 0x00B0)
class UKSHUDComponent_Objective : public UKSHUDComponent
{
public:
	TSoftObjectPtr<class UTexture2D>                   ObjectiveIcon;                                            // 0x00B0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   ObjectiveMarkerIcon;                                      // 0x00D8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   ScoreIcon;                                                // 0x0100(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   TicketIcon;                                               // 0x0128(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ShowObjectiveMarkerForEnemy;                              // 0x0150(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ForceAlwaysShowObjectiveMarker;                           // 0x0151(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ShowBombTimerInMarker;                                    // 0x0152(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseProgressCircleInTopBar;                                // 0x0153(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ScoreboardDisplayIntraScoring;                            // 0x0154(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseIntraScoring;                                          // 0x0155(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UseTicketSystem;                                          // 0x0156(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETopbarPointsBarType                               PointsBarType;                                            // 0x0157(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ETopbarTicketDisplaySide                           TicketDisplaySide;                                        // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHUDComponent_Objective");
		return ptr;
	}

};


// Class Killstreak.KSHUDInterface
// 0x0000 (0x0028 - 0x0028)
class UKSHUDInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHUDInterface");
		return ptr;
	}


	void SetSafeFrameScale(float SafeFrameScale);
	void SetHUDVisible(bool bVisible);
	void RemoveDataTables(TArray<struct FDataTableInfo> InTables);
	void RemoveDataTable(class UDataTable* InTable);
	void OnToggleHUD();
	void OnLoadRoute(const struct FName& Route, bool ForceTransition);
	void HandleOpenTextChat(bool BeginChatCommand);
	class UMultiSkinObject* GetSkinObject();
	TScriptInterface<class UKSSettingsCallbackInterface> GetSettingsCallbackInterface();
	void CreateGameRuleWidget(const struct FKSWidgetInfoParams& WidgetInfoParams);
	void BroadcastWidgetMessage(const struct FName& Message);
	void BindEventToWidgetMessages(const struct FScriptDelegate& Callback);
	void BindEventToDataTableKeywordUpdate(const struct FName& Keyword, const struct FScriptDelegate& Callback);
	void AddDataTables(TArray<struct FDataTableInfo> InTables);
	void AddDataTable(class UDataTable* InTable, int TablePriority);
};


// Class Killstreak.KSImpactDecalComponent
// 0x0000 (0x0280 - 0x0280)
class UKSImpactDecalComponent : public UPoolableDecalComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSImpactDecalComponent");
		return ptr;
	}

};


// Class Killstreak.KSImpactEffect
// 0x0098 (0x02B8 - 0x0220)
class AKSImpactEffect : public AActor
{
public:
	class UParticleSystem*                             m_DefaultFX;                                              // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FHitResult                                  m_SurfaceHit;                                             // 0x0228(0x0088) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPublic)
	class USceneComponent*                             m_pScene;                                                 // 0x02B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSImpactEffect");
		return ptr;
	}

};


// Class Killstreak.KSIngressPoint
// 0x0018 (0x0270 - 0x0258)
class AKSIngressPoint : public AKSMapPoint
{
public:
	class AKSObjectiveBase*                            RelevantObjective;                                        // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AActor*                                      AssignedBot;                                              // 0x0260(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0268(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSIngressPoint");
		return ptr;
	}


	void RelevantObjectiveUpdated(class AKSObjectiveBase* Objective);
	struct FVector GetTargetIngressPoint();
	void AssignedBotDestroyed(class AActor* DestroyedActor);
};


// Class Killstreak.KSInputComponent
// 0x0000 (0x0138 - 0x0138)
class UKSInputComponent : public UInputComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInputComponent");
		return ptr;
	}

};


// Class Killstreak.KSInputFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UKSInputFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInputFunctionLibrary");
		return ptr;
	}


	static EKSGamepadIcons GetGamepadIconSet();
};


// Class Killstreak.KSInspectableMusicManagerActor
// 0x00E0 (0x0300 - 0x0220)
class AKSInspectableMusicManagerActor : public AActor
{
public:
	class UAkAudioEvent*                               AkEvent;                                                  // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               NamesForRtpcQueries;                                      // 0x0228(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               NamesForSwitchQueries;                                    // 0x0238(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0248(0x00A8) MISSED OFFSET
	bool                                               bQueryResultsReady;                                       // 0x02F0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02F1(0x0003) MISSED OFFSET
	int                                                StaleCounter;                                             // 0x02F4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInspectableMusicManagerActor");
		return ptr;
	}


	int StartMusic(int CallbackMask, const struct FScriptDelegate& PostEventCallback, EOcclusionType OcclusionType, bool bUseDistance, bool bUseDirection);
	void HandleQueryResults();
	void GetSwitchQueryResultValue(const struct FName& SwitchName, int* Value, bool* bIsValid);
	void GetRtpcQueryResultValue(const struct FName& RtpcName, float* Value, bool* bIsValid);
};


// Class Killstreak.KSInteractable
// 0x0000 (0x0028 - 0x0028)
class UKSInteractable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractable");
		return ptr;
	}


	bool UsePickupRangeForInteraction();
	bool UseCollisionForInteractionDistance();
	bool ShouldDisplayPrompt(class AKSCharacter* Character);
	bool ShouldDisplayProgress(class AKSCharacter* Character);
	void RemoveInteractionBlocker(const struct FKSInteractionBlocker& InInteractionBlocker);
	bool MustCrouchWhileInteracting(class AKSCharacter* QueriedChar);
	bool IsInteracting(class AKSCharacter* QueriedChar);
	bool IsHiddenInteraction();
	bool IsAutomaticInteraction(class AKSCharacter* QueriedChar);
	float GetRelativeHeight(class AKSCharacter* InteractingChar);
	class UClass* GetInteractionType();
	struct FText GetInteractionPromptText(class AKSCharacter* Character);
	struct FText GetInteractionProgressText(class AKSCharacter* Character);
	int GetInteractionPriority();
	struct FName GetInteractionMode(class AKSCharacter* Character);
	EKSInteractableGroup GetInteractableGroup();
	TArray<class AKSCharacter*> GetCurrentInteractors();
	int GetCurrentInteractNum();
	struct FKSInteractableCameraTransition GetCameraTransition();
	struct FVector GetBestInteractionPoint(class AActor* Interactor);
	bool FacesInteractable();
	void ConstructPrompt(class AKSCharacter* Character, struct FText* Prefix, struct FText* Suffix);
	bool CanInteractWithModifiedRange();
	bool CanInteractWhileVaulting();
	bool CanInteractWhileSkydiving();
	bool CanInteractWhileMoving(class AKSCharacter* QueriedCharacter);
	bool CanInteractWhileDown(class AKSCharacter* QueriedChar);
	bool CanInteractFromBehind();
	bool CanInteract(class AKSCharacter* QueriedChar, bool* bPress, bool* bHold);
	bool AllowsMultipleInteraction();
	void AddInteractionBlocker(const struct FKSInteractionBlocker& InInteractionBlocker);
};


// Class Killstreak.KSInteractionBlockerManager
// 0x0018 (0x00C8 - 0x00B0)
class UKSInteractionBlockerManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET
	bool                                               bIsInteractionBlocked;                                    // 0x00C0(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractionBlockerManager");
		return ptr;
	}

};


// Class Killstreak.KSLootSiteBase
// 0x0128 (0x0348 - 0x0220)
class AKSLootSiteBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLootSiteSpawned;                                        // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLootSiteStateChanged;                                   // 0x0240(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	ELootSiteRarity                                    RarityTag;                                                // 0x0250(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLootSiteRarityChanged;                                  // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      SiteGroupNumber;                                          // 0x0268(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	TMap<ELootSiteRarity, class UDataTable*>           RarityLootSiteTableMap;                                   // 0x0270(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x10];                                      // 0x02C0(0x0010) MISSED OFFSET
	TWeakObjectPtr<class AKSItemDrop>                  SpawnedDrop;                                              // 0x02D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UObject*>                             ObjectsToKeepAround;                                      // 0x02D8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpawnRate;                                                // 0x02E8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpawnDelay;                                               // 0x02EC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RespawnDelay;                                             // 0x02F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutoRespawn;                                             // 0x02F4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableWeaponCosmeticZOffset;                            // 0x02F5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x02F6(0x0002) MISSED OFFSET
	TArray<class AKSLootSiteBase*>                     ChildSpawners;                                            // 0x02F8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SurfaceCheckHeight;                                       // 0x0308(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsePrecisePlacement;                                     // 0x030C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FLootSiteState                              LootSiteState;                                            // 0x030D(0x0002) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               CosmeticVisible;                                          // 0x030F(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                SpawnDelayTimer;                                          // 0x0310(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     NavigationLocation;                                       // 0x0318(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0xC];                                       // 0x0324(0x000C) MISSED OFFSET
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x0330(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              ActorsSeenBy;                                             // 0x0338(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLootSiteBase");
		return ptr;
	}


	static void WeightedSiteShuffle(TArray<class AKSLootSiteBase*>* SiteArray);
	void SpawnSpecificLoot(const struct FLootSiteDropInfo& Loot);
	void SpawnSpecificItemDrop(class UKSItem* ItemAsset);
	void SpawnItemDropInternal();
	void SpawnItemDrop(bool UseDelay);
	void SpawnedDropDestroyed(class AActor* DestroyedActor);
	bool SetSiteActive(bool Active);
	void SetRarity(ELootSiteRarity NewRarity);
	void Reset();
	void OnRep_RarityTag();
	void OnRep_LootSiteState();
	void OnRep_CosmeticVisible();
	void OnCosmeticVisibilityChanged(bool Visible);
	bool IsLooted();
	bool IsActive();
	struct FLootSiteState GetLootSiteState();
	struct FVector FindBestDropLocation(class AKSItemDrop* InDrop);
	struct FLootSiteDropInfo ChoostLoot();
	static struct FLootSiteDropInfo ChooseRandomLoot(TArray<struct FLootSiteDropInfo> InLoot, class UObject* WorldContextObject);
	class UKSItem* ChooseItemAsset();
};


// Class Killstreak.KSInteractableLootSite
// 0x0090 (0x03D8 - 0x0348)
class AKSInteractableLootSite : public AKSLootSiteBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0350(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FText                                       LootBoxName;                                              // 0x0358(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bChoosesBeforeInteraction;                                // 0x0370(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPressAndHoldPrompt;                                      // 0x0371(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLooted;                                                  // 0x0372(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0373(0x0005) MISSED OFFSET
	struct FLootSiteDropInfo                           ChosenLoot;                                               // 0x0378(0x0030) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Looters;                                                  // 0x03A8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSInteractionManager*>               LooterManagers;                                           // 0x03B8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FLootSiteDropInfo>                   PossibleLoot;                                             // 0x03C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractableLootSite");
		return ptr;
	}


	void PickLoot();
	void OnSuccessfulInteraction();
	void OnRep_ChosenLoot();
	void OnRep_bLooted();
	float GetInteractionTime(class AKSCharacter* InteractingChar);
	void ClientBroadcastSpawned(class AKSPlayerController* Controller, bool Removed);
};


// Class Killstreak.KSHoldOnlyStart
// 0x0000 (0x0030 - 0x0030)
class UKSHoldOnlyStart : public UKSInteractionState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHoldOnlyStart");
		return ptr;
	}

};


// Class Killstreak.KSHoldOrTapNoRelease
// 0x0000 (0x0030 - 0x0030)
class UKSHoldOrTapNoRelease : public UKSHoldOrTapStart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSHoldOrTapNoRelease");
		return ptr;
	}

};


// Class Killstreak.KSTimerNoRelease
// 0x0000 (0x0030 - 0x0030)
class UKSTimerNoRelease : public UKSWaitingForTimer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTimerNoRelease");
		return ptr;
	}

};


// Class Killstreak.KSWaitingForInterrupt
// 0x0000 (0x0030 - 0x0030)
class UKSWaitingForInterrupt : public UKSInteractionState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWaitingForInterrupt");
		return ptr;
	}

};


// Class Killstreak.KSInteractionManager
// 0x00B8 (0x0168 - 0x00B0)
class UKSInteractionManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x00B0(0x0038) MISSED OFFSET
	float                                              CachedInteractionTimeStamp;                               // 0x00E8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	unsigned char                                      InteractRequestId;                                        // 0x00F0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UKSInteractionState*                         State;                                                    // 0x00F8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionState*                         PreviousState;                                            // 0x0100(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                User;                                                     // 0x0108(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TScriptInterface<class UKSInteractable>            Interactable;                                             // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	struct FKSInteractableCameraTransition             CameraTransition;                                         // 0x0120(0x0030) (CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0150(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractionManager");
		return ptr;
	}


	void ServerTap(bool bAllowTapAsHold);
	void ServerStartNew(int InInteractionId, class AActor* InInteractable, class AKSCharacter* InUser);
	void ServerHoldRelease();
	void ServerHold(bool bAllowHoldAsTap);
	void ServerCancel();
	void OnInteractableDestroyed(class AActor* DestroyedInteractable);
	void ClientInteractionStopped(int InInteractionId, EKSInteractionResult Result);
	void ClientInteractionStarted(int InInteractionId, float Duration);
};


// Class Killstreak.KSInteractionType
// 0x0300 (0x0328 - 0x0028)
class UKSInteractionType : public UObject
{
public:
	struct FName                                       InteractionMode;                                          // 0x0028(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInteractionStartsCameraLockout;                          // 0x0030(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FSkinnableAudioEvent                        CharacterStartSound;                                      // 0x0038(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FSkinnableAudioEvent                        InteractableStartSound;                                   // 0x0048(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FSkinnableAudioEvent                        LocalStartSound;                                          // 0x0058(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FSkinnableAudioEvent> CharacterEndSound;                                        // 0x0068(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FSkinnableAudioEvent> InteractableEndSound;                                     // 0x00B8(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FSkinnableAudioEvent> LocalEndSound;                                            // 0x0108(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAutomaticallyPlayAudio;                                  // 0x0158(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAttachCharacterAutoAudioToSource;                        // 0x0159(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAttachInteractableAutoAudioToSource;                     // 0x015A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5];                                       // 0x015B(0x0005) MISSED OFFSET
	struct FKSParticleSystemAttachment                 CharacterStartEffect;                                     // 0x0160(0x0038) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSParticleSystemAttachment                 InteractableStartEffect;                                  // 0x0198(0x0038) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FKSParticleSystemAttachment> CharacterEndEffect;                                       // 0x01D0(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FKSParticleSystemAttachment> InteractableEndEffect;                                    // 0x0220(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentCharacterEffect;                                   // 0x0270(0x0008) (CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UParticleSystemComponent>     CurrentInteractableEffect;                                // 0x0278(0x0008) (CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       StartInteractionMontageRow;                               // 0x0280(0x0008) (CPF_Edit, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FName>           EndInteractionMontageSection;                             // 0x0288(0x0050) (CPF_Edit, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EKSInteractionResult, struct FName>           EndInteractionMontageRow;                                 // 0x02D8(0x0050) (CPF_Edit, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSInteractionType");
		return ptr;
	}


	void PlayInteractionAnimation(bool bIsStart, class AKSCharacter* Character, class AActor* InInteractionTarget, EKSInteractionResult Result, const struct FVector& InteractableLocation);
	class UParticleSystemComponent* MakeInteractableEffect(bool bIsStart, class AKSCharacter* Character, class AActor* Interactable, EKSInteractionResult Result, const struct FVector& InteractableLocation);
	class UParticleSystemComponent* MakeCharacterEffect(bool bIsStart, class AKSCharacter* Character, class AActor* Interactable, EKSInteractionResult Result, const struct FVector& InteractableLocation);
	struct FKSParticleSystemAttachment GetInteractableEffect(bool bIsStart, EKSInteractionResult Result);
	struct FKSParticleSystemAttachment GetCharacterEffect(bool bIsStart, EKSInteractionResult Result);
};


// Class Killstreak.KSItem_Gender
// 0x0008 (0x0238 - 0x0230)
class UKSItem_Gender : public UKSItem
{
public:
	struct FKSCharacterGender                          Gender;                                                   // 0x0230(0x0002) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0232(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItem_Gender");
		return ptr;
	}


	struct FKSCharacterGender GetGender();
};


// Class Killstreak.KSItemBundle
// 0x0010 (0x0240 - 0x0230)
class UKSItemBundle : public UKSItem
{
public:
	TArray<TSoftObjectPtr<class UKSItem>>              BundledItems;                                             // 0x0230(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItemBundle");
		return ptr;
	}


	void GetSortedBundledItems(TArray<TSoftObjectPtr<class UKSItem>>* SortedItems);
};


// Class Killstreak.KSItemDataTable
// 0x0020 (0x00E8 - 0x00C8)
class UKSItemDataTable : public UDataTable
{
public:
	TArray<struct FString>                             DirectoriesToScan;                                        // 0x00C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ItemClassesToFilter;                                      // 0x00D8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItemDataTable");
		return ptr;
	}

};


// Class Killstreak.ItemDropWidgetInterface
// 0x0000 (0x0028 - 0x0028)
class UItemDropWidgetInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ItemDropWidgetInterface");
		return ptr;
	}


	void ShowLabel();
	void SetOwningWidgetComponent(class UActorComponent* WidgetComp);
	void SetLabel(const struct FText& LabelText);
	void HideLabel();
};


// Class Killstreak.KSItemStimuliSourceComponent
// 0x0000 (0x00C8 - 0x00C8)
class UKSItemStimuliSourceComponent : public UAIPerceptionStimuliSourceComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSItemStimuliSourceComponent");
		return ptr;
	}

};


// Class Killstreak.KSJobItem
// 0x0570 (0x07A0 - 0x0230)
class UKSJobItem : public UKSItem
{
public:
	bool                                               IsStarterJob;                                             // 0x0230(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSSkinBundle>                JobDefaultSkin;                                           // 0x0238(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                JobSkinBundleLootTableId;                                 // 0x0260(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0264(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UKSJobRole>                   JobRoleItem;                                              // 0x0268(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSItem>                      UniqueItem;                                               // 0x0290(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSItem>                      PrimaryWeaponOptionOne;                                   // 0x02B8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PrimaryWeaponOptionOneIsDefault;                          // 0x02E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x02E1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PrimaryWeaponOptionTwo;                                   // 0x02E8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PrimaryWeaponOptionTwoIsDefault;                          // 0x0310(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0311(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      SecondaryWeaponOptionOne;                                 // 0x0318(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SecondaryWeaponOptionOneIsDefault;                        // 0x0340(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0341(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      SecondaryWeaponOptionTwo;                                 // 0x0348(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               SecondaryWeaponOptionTwoIsDefault;                        // 0x0370(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      MeleeWeapon;                                              // 0x0378(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSItem>                      QuickMeleeWeapon;                                         // 0x03A0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSItem>>              Passives;                                                 // 0x03C8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSItem>                      GadgetOptionOne;                                          // 0x03D8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GadgetOptionOneIsDefault;                                 // 0x0400(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0401(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GadgetOptionTwo;                                          // 0x0408(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GadgetOptionTwoIsDefault;                                 // 0x0430(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0431(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionOne;                                            // 0x0438(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionOneIsDefault;                                   // 0x0460(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0461(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionTwo;                                            // 0x0468(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionTwoIsDefault;                                   // 0x0490(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0491(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionThree;                                          // 0x0498(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionThreeIsDefault;                                 // 0x04C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x7];                                       // 0x04C1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionFour;                                           // 0x04C8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionFourIsDefault;                                  // 0x04F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x04F1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionFive;                                           // 0x04F8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionFiveIsDefault;                                  // 0x0520(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0521(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      PerkOptionSix;                                            // 0x0528(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PerkOptionSixIsDefault;                                   // 0x0550(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionOne;                                          // 0x0558(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionOneIsDefault;                                 // 0x0580(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0581(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionTwo;                                          // 0x0588(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionTwoIsDefault;                                 // 0x05B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x7];                                       // 0x05B1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionThree;                                        // 0x05B8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionThreeIsDefault;                               // 0x05E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData16[0x7];                                       // 0x05E1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionFour;                                         // 0x05E8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionFourIsDefault;                                // 0x0610(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0611(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionFive;                                         // 0x0618(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionFiveIsDefault;                                // 0x0640(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData18[0x7];                                       // 0x0641(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UKSItem>                      GambitOptionSix;                                          // 0x0648(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               GambitOptionSixIsDefault;                                 // 0x0670(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x7];                                       // 0x0671(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSEmote>>             DefaultEmotes;                                            // 0x0678(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSQuip>>              DefaultQuips;                                             // 0x0688(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSCommunication>>     DefaultCommunications;                                    // 0x0698(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSSpray>>             DefaultSprays;                                            // 0x06A8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSItem>                      DefaultWingsuit;                                          // 0x06B8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>                     LobbyPropsToPreload;                                      // 0x06E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                        JobTags;                                                  // 0x06F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   SmallJobIcon;                                             // 0x0700(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   JobPortrait;                                              // 0x0728(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   JobDiamondPortrait;                                       // 0x0750(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   JobSquarePortrait;                                        // 0x0778(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobItem");
		return ptr;
	}


	bool IsValidJobItem(class UKSItem* KSItem);
	TSoftObjectPtr<class UTexture2D> GetSoftSmallJobIcon();
	TSoftObjectPtr<class UTexture2D> GetSoftJobSquarePortrait();
	TSoftObjectPtr<class UTexture2D> GetSoftJobPortrait();
	TSoftObjectPtr<class UTexture2D> GetSoftJobDiamondPortrait();
	class UTexture2D* GetSmallJobIcon();
	bool GetQuickMeleeWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetPerks(TArray<TSoftObjectPtr<class UKSItem>>* Perks);
	bool GetMeleeWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	class UKSJobRole* GetJobRole();
	class UKSActivityInstance* GetJobMasteryActivityInstance(class UObject* WorldContextObject);
	bool GetGambits(TArray<TSoftObjectPtr<class UKSItem>>* Gambits);
	bool GetFirstPassive(TSoftObjectPtr<class UKSItem>* Passive);
	bool GetDefaultSprays(TArray<TSoftObjectPtr<class UKSSpray>>* Sprays);
	class UKSSkinBundle* GetDefaultSkin();
	bool GetDefaultSecondaryWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetDefaultRadialMenuItems(EMercCosmeticSlot CosmeticSlot, TArray<TSoftObjectPtr<class UKSRadialMenuItem>>* RadialMenuItems);
	bool GetDefaultQuips(TArray<TSoftObjectPtr<class UKSQuip>>* quips);
	bool GetDefaultPrimaryWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetDefaultPerks(TArray<TSoftObjectPtr<class UKSItem>>* Perks);
	bool GetDefaultGambits(TArray<TSoftObjectPtr<class UKSItem>>* Gambits);
	bool GetDefaultGadget(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetDefaultEmotes(TArray<TSoftObjectPtr<class UKSEmote>>* Emotes);
	bool GetDefaultCommunications(TArray<TSoftObjectPtr<class UKSCommunication>>* communications);
	bool GetAlternativeSecondaryWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetAlternativePrimaryWeapon(TSoftObjectPtr<class UKSItem>* OutItem);
	bool GetAlternativeGadget(TSoftObjectPtr<class UKSItem>* OutItem);
};


// Class Killstreak.JobLoadout
// 0x0058 (0x0080 - 0x0028)
class UJobLoadout : public UObject
{
public:
	class UKSJobItem*                                  JobItem;                                                  // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<EJobLoadoutSlot, class UKSItem*>              SlotItems;                                                // 0x0030(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.JobLoadout");
		return ptr;
	}


	bool ValidateAttachmentForWeapon(class UKSItem* AttachmentToCheck, class UKSItem* Weapon);
	void SetToJobDefaults(class UKSJobItem* InJobItem);
	bool SetSlot(EJobLoadoutSlot JobSlot, class UKSItem* KSItem, bool IgnoreJobItem);
	bool GetSlot(EJobLoadoutSlot JobSlot, class UKSItem** OutKSItem);
	bool GetAsMap(TMap<EJobLoadoutSlot, class UKSItem*>* OutMap);
	TArray<EJobLoadoutSlot> CleanJobLoadoutItems();
};


// Class Killstreak.KSJobSelectionComponent
// 0x0460 (0x0510 - 0x00B0)
class UKSJobSelectionComponent : public UActorComponent
{
public:
	struct FJobSelectionList                           JobSelectionList;                                         // 0x00B0(0x0120) (CPF_Net, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FSelectionActivityStatus                    SelectionActivityStatus;                                  // 0x01D0(0x0050) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSJobSelectionAllowUnownedJobs             AllowUnownedJobsStruct;                                   // 0x0220(0x0020) (CPF_Net, CPF_Transient, CPF_RepNotify, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	EJobUniquenessRule                                 EnforcedJobUniqueness;                                    // 0x0240(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0241(0x0003) MISSED OFFSET
	int                                                JobTableVendorId;                                         // 0x0244(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UJobCollection*                              JobCollection;                                            // 0x0248(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionEntryAdded;                                 // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionEntryChanged;                               // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionInitialized;                                // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnAllPlayersLockedIn;                                     // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSelectionActivityStatusChanged;                         // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x60];                                      // 0x02A0(0x0060) MISSED OFFSET
	TArray<int>                                        BannedJobIds;                                             // 0x0300(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ExpectedBanCount;                                         // 0x0310(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0314(0x0004) MISSED OFFSET
	class AKSTeamState*                                CachedOwner;                                              // 0x0318(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSelectionEnabled;                                        // 0x0320(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0321(0x0003) MISSED OFFSET
	int                                                EntryCount;                                               // 0x0324(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	struct FMultiPlayerSkinMapReplicator               SkinMapReplicator;                                        // 0x0330(0x01D8) (CPF_Net, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSAudioManager*                             pAudioManager;                                            // 0x0508(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectionComponent");
		return ptr;
	}


	void OnRep_SelectionActivityStatus();
	void OnRep_EntryCount();
	void OnRep_AllowUnownedJobs();
	void OnPhaseChange(const struct FName& NewPhase);
	void NewPlayerStarting(class APlayerController* NewPlayer);
	void NewBotStarting(class AKSAIController* NewBot);
	static bool JobSelectEntryMatchesPlayerState(const struct FJobSelectionEntry& Entry, class AKSPlayerState* PlayerState);
	static bool JobSelectEntryMatchesPersistentPlayer(const struct FJobSelectionEntry& Entry, class UKSPersistentPlayerData* PersistentPlayer);
	bool IsReady();
	bool IsPlayerCurrentlySelecting(class AKSPlayerState* InPlayerState);
	void InitializeJobSelectionList();
	TArray<class AKSPlayerState*> GetSortedPlayers();
	struct FSelectionActivityStatus GetSelectionActivityStatusInfo();
	ESelectionActivityState GetSelectionActivityState();
	TArray<struct FJobSelectionEntry> GetJobSelectionEntries();
	ESelectionActivityState FindOpponentSelectionActivityState();
	bool CanPlayerLockInSelection(class AKSPlayerState* InPlayerState);
};


// Class Killstreak.KSJobSelectionManager
// 0x0038 (0x00E8 - 0x00B0)
class UKSJobSelectionManager : public UActorComponent
{
public:
	bool                                               bJobManagerReady;                                         // 0x00B0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJobSelectionManagerReady;                               // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionAcknowledge;                                // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerController*                         CachedOwner;                                              // 0x00D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSJobSelectionComponent*                    CachedSelectionComponent;                                 // 0x00E0(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectionManager");
		return ptr;
	}


	void ServerRequestSelectionState(int ItemId, EJobSelectionState State);
	bool RequestSelectionState(int ItemId, EJobSelectionState State);
	void PlayerTeamSet(class AKSPlayerState* PlayerState);
	void PlayerStateSet(class AKSPlayerState* PlayerState);
	void JobSelectionComponentReady(class UKSJobSelectionComponent* InSelectionComponent);
	bool IsReady();
	class UKSJobSelectionComponent* GetJobSelectionComponent();
	void ClientAcknowledgeStateSelection(int ItemId, bool bSuccess, EJobSelectionState RequestState);
};


// Class Killstreak.KSJobSelectPreviewActor_InMatch
// 0x0000 (0x0448 - 0x0448)
class AKSJobSelectPreviewActor_InMatch : public AKSJobSelectPreviewActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectPreviewActor_InMatch");
		return ptr;
	}

};


// Class Killstreak.KSJobSelectPreviewActor_Lobby
// 0x00E8 (0x0530 - 0x0448)
class AKSJobSelectPreviewActor_Lobby : public AKSJobSelectPreviewActor
{
public:
	ELobbyCharacterIndex                               CharacterIndex;                                           // 0x0448(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bControlChildCharacterNameplate;                          // 0x0449(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x044A(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UKSPlayerInfo>                WeakPlayerInfo;                                           // 0x044C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayerPendingPartyAccept;                                // 0x0454(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowJobChangeOnPlayEmote;                               // 0x0455(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStopPlayingEmoteWhileLoadingNewEmote;                    // 0x0456(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0457(0x0001) MISSED OFFSET
	TSoftObjectPtr<class UKSJobItem>                   FailSafeEmoteJob;                                         // 0x0458(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSEmote*                                    PendingEmote;                                             // 0x0480(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0488(0x0010) MISSED OFFSET
	struct FKSEquipmentId                              PendingEmoteComponentId;                                  // 0x0498(0x0004) (CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x049C(0x0004) MISSED OFFSET
	class UKSEmoteCosmeticComponent*                   PendingEmoteComponent;                                    // 0x04A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSJobItem>                   PendingEmoteExpectedJob;                                  // 0x04A8(0x0028) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSJobItem>                   ActiveEmoteExpectedJob;                                   // 0x04D0(0x0028) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSEmoteCosmeticComponent*                   ActiveEmoteComponent;                                     // 0x04F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x30];                                      // 0x0500(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectPreviewActor_Lobby");
		return ptr;
	}


	void StopActiveEmote();
	bool SetPlayerInfo(class UKSPlayerInfo* InPlayerInfo);
	void ReturnCharacterToIdle();
	bool PlayEmote(TSoftObjectPtr<class UKSEmote> InEmote, TSoftObjectPtr<class UKSJobItem> DesiredJob);
	void OverrideActiveSkin(TSoftObjectPtr<class UKSSkinBundle> InSkin);
	bool IsPlayerPendingPartyAccept();
	class UKSPlayerInfo* GetPlayerInfo();
	ELobbyCharacterIndex GetCharacterIndex();
	void ClearPlayerInfo();
	void ClearPendingEmote();
	void ClearActiveSkinOverride();
};


// Class Killstreak.KSJobSelectPrvwActor_RogueScrn
// 0x0008 (0x0538 - 0x0530)
class AKSJobSelectPrvwActor_RogueScrn : public AKSJobSelectPreviewActor_Lobby
{
public:
	class URogueScreenLoadoutComponent*                RogueScreenLoadoutComponent;                              // 0x0530(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJobSelectPrvwActor_RogueScrn");
		return ptr;
	}

};


// Class Killstreak.KSJsonData
// 0x0048 (0x0070 - 0x0028)
class UKSJsonData : public UObject
{
public:
	struct FName                                       UniqueId;                                                 // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                AssociatedLootId;                                         // 0x0030(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        HideIfItemOwned;                                          // 0x0038(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<int>                                        ShowIfItemOwned;                                          // 0x0048(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideIfOwned;                                              // 0x0058(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FString                                     ShowIfPlatform;                                           // 0x0060(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJsonData");
		return ptr;
	}

};


// Class Killstreak.KSJsonDataFactory
// 0x0100 (0x0148 - 0x0048)
class UKSJsonDataFactory : public UPUMG_JsonDataFactory
{
public:
	TMap<struct FString, class UTexture2DDynamic*>     mapFilePathToTexture;                                     // 0x0048(0x0050) (CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0098(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSJsonDataFactory");
		return ptr;
	}


	void OnInventoryItemUpdated(const struct FInventoryId& InventoryId);
};


// Class Killstreak.KSKillCam
// 0x01A8 (0x01D0 - 0x0028)
class UKSKillCam : public UObject
{
public:
	class UClass*                                      KillCamControllerClass;                                   // 0x0028(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UWorld*                                      KillCamWorld;                                             // 0x0030(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UPackage*                                    KillCamWorldPackage;                                      // 0x0038(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSKillCamController*                        KillCamSpectatorController;                               // 0x0040(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UAkComponent*, float>                   OriginalWorldMutedAudio;                                  // 0x0048(0x0050) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0098(0x0040) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKillCamEnabled;                                         // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x18];                                      // 0x00E8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKillCamViewPawn;                                        // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0110(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKillCamViewProjectile;                                  // 0x0128(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0138(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPrepareKillCamPlayback;                                 // 0x0150(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0160(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFinishKillCamPlayback;                                  // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x48];                                      // 0x0188(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSKillCam");
		return ptr;
	}


	void KillCamStop();
	void DestroySpectatorController();
};


// Class Killstreak.KSPlayerController
// 0x0748 (0x0DF8 - 0x06B0)
class AKSPlayerController : public APGame_PlayerController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B0(0x0008) MISSED OFFSET
	float                                              ProjectileDebugLifetime;                                  // 0x06B8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKSPlayerStateReplicatedDel;                             // 0x06C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x20];                                      // 0x06D0(0x0020) MISSED OFFSET
	TArray<struct FDeferredViewTargetChangeInfo>       DeferredViewTargetChangedUpdate;                          // 0x06F0(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0700(0x0008) MISSED OFFSET
	class AKSPlayerState*                              CurrentSpectateTarget;                                    // 0x0708(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AController>                  CurrentSpectateController;                                // 0x0710(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       CurrentSpectateViewTarget;                                // 0x0718(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x40];                                      // 0x0720(0x0040) MISSED OFFSET
	struct FClientContext                              ClientContext;                                            // 0x0760(0x00C0) (CPF_NativeAccessSpecifierPublic)
	struct FClientInputTypeUse                         ClientInputTypeUse;                                       // 0x0820(0x0008) (CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bRecordingFrameRateInfo;                                  // 0x0828(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0829(0x0003) MISSED OFFSET
	struct FClientStatistics                           Render;                                                   // 0x082C(0x0018) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FClientStatistics                           Game;                                                     // 0x0844(0x0018) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FClientStatistics                           GPU;                                                      // 0x085C(0x0018) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FClientStatistics                           RHIT;                                                     // 0x0874(0x0018) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FClientStatistics                           Frame;                                                    // 0x088C(0x0018) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              FrameRateDataSmoothingFactor;                             // 0x08A4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              FrameRateDataPushCountdown;                               // 0x08A8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       DefaultCameraName;                                        // 0x08AC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWaitingToViewPawn;                                       // 0x08B4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x3];                                       // 0x08B5(0x0003) MISSED OFFSET
	float                                              LastPingCalcTime;                                         // 0x08B8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x08BC(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       HUDClass;                                                 // 0x08C0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerShotListener*                       ShotListener;                                             // 0x08E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnHUDSetup;                                               // 0x08F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x40];                                      // 0x0900(0x0040) MISSED OFFSET
	bool                                               bCachedIsUIRelevant;                                      // 0x0940(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCachedIsOnlyASpector;                                    // 0x0941(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x6];                                       // 0x0942(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerControllerIsUIRelevantDel;                        // 0x0948(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData10[0x20];                                      // 0x0958(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnViewedPawnChangedDel;                                   // 0x0978(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x18];                                      // 0x0988(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnControllerChangedDel;                                   // 0x09A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnSpectateStateChanged;                                   // 0x09B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData12[0x8];                                       // 0x09C0(0x0008) MISSED OFFSET
	class AKSCharacterBase*                            KSCharacter;                                              // 0x09C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsInTouchMode;                                            // 0x09D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               StartInTouchMode;                                         // 0x09D1(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x2];                                       // 0x09D2(0x0002) MISSED OFFSET
	float                                              TouchModeAutoFireRadius;                                  // 0x09D4(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TouchModeAutoFireTickRate;                                // 0x09D8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData14[0xC];                                       // 0x09DC(0x000C) MISSED OFFSET
	class URenderThreadInputHandler*                   RenderThreadInputHandler;                                 // 0x09E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData15[0x8];                                       // 0x09F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTouchModeChanged;                                       // 0x09F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 MouseLookSensitivityCurve;                                // 0x0A08(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FInterpCurveFloat                           LookSensitivityToMaxLookSpeed;                            // 0x0A10(0x0018) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BaseGamepadTurnRateScale;                                 // 0x0A28(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BaseGamepadLookUpRateScale;                               // 0x0A2C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector2D                                   GamepadRightStickVelocity;                                // 0x0A30(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    AccumulatedRotationInput;                                 // 0x0A38(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0A44(0x0004) MISSED OFFSET
	struct FVector2D                                   GamepadLook;                                              // 0x0A48(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UClass*                                      GamepadLookSpeedManagerClass;                             // 0x0A50(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      JoyConLookSpeedManagerClass;                              // 0x0A58(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UKSGamepadLookSpeedManager*                  GamepadLookSpeedManager;                                  // 0x0A60(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSGamepadLookSpeedManager*                  JoyConLookSpeedManager;                                   // 0x0A68(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              InputYawScaleADS;                                         // 0x0A70(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InputPitchScaleADS;                                       // 0x0A74(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InputRollScaleADS;                                        // 0x0A78(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ThisFrameKickbackRotationCache;                           // 0x0A7C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	bool                                               bKickbackEnabled;                                         // 0x0A88(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0A89(0x0007) MISSED OFFSET
	TArray<struct FKickbackPlayback>                   ActiveKickback;                                           // 0x0A90(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bKickbackRecoveryActive;                                  // 0x0AA0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0AA1(0x0003) MISSED OFFSET
	float                                              KickbackRecoveryDelayRemaining;                           // 0x0AA4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryAcceleration;                             // 0x0AA8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryTargetRate;                               // 0x0AAC(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              KickbackRecoveryRate;                                     // 0x0AB0(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              MaxCumulativeKickbackVerticalAngle;                       // 0x0AB4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    KickbackRecoveryRotation;                                 // 0x0AB8(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    KickbackCancelRotation;                                   // 0x0AC4(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	float                                              KickbackCancelThreshold;                                  // 0x0AD0(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0AD4(0x0004) MISSED OFFSET
	bool                                               bAllowKickbackRecoveryCancel;                             // 0x0AD8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUseSmartKickbackRecovery;                                // 0x0AD9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData20[0x2];                                       // 0x0ADA(0x0002) MISSED OFFSET
	float                                              KickbackRecoveryEndThreshold;                             // 0x0ADC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              KickbackScalingFactorMouse;                               // 0x0AE0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData21[0x4];                                       // 0x0AE4(0x0004) MISSED OFFSET
	class UKSAimAssistComponent*                       AimAssistComponent;                                       // 0x0AE8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnTakeDamageDel;                                  // 0x0AF0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnTakeArmorDamageDel;                             // 0x0B00(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnInstigateDamageDel;                             // 0x0B10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    ViewedPawnInstigateDamageNotifyDel;                       // 0x0B20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnInstigateDamageNotifyDel;                        // 0x0B30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnInstigateWeaponFireNotifyDel;                    // 0x0B40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OwnedPawnTakesDamageNotifyDel;                            // 0x0B50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnOwnedPawnTakeDamageFromInstigatorDel;                   // 0x0B60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData22[0x48];                                      // 0x0B70(0x0048) MISSED OFFSET
	bool                                               bFirstPawnAcknowledged;                                   // 0x0BB8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstCharacterApparelFinished;                           // 0x0BB9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstCharacterWeaponsEquipped;                           // 0x0BBA(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bKillcamWorldReady;                                       // 0x0BBB(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x3C];                                      // 0x0BBC(0x003C) MISSED OFFSET
	float                                              LastTimePlayedTime;                                       // 0x0BF8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0BFC(0x0004) MISSED OFFSET
	class UKSPingManager*                              PingManager;                                              // 0x0C00(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSRadialMenuManager*                        RadialMenuManager;                                        // 0x0C08(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSJobSelectionManager*                      JobSelectionManager;                                      // 0x0C10(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x30];                                      // 0x0C18(0x0030) MISSED OFFSET
	class UCurveFloat*                                 GyroTargetSpeedCurve;                                     // 0x0C48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 GyroSensitivityConversionCurve;                           // 0x0C50(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSEquipmentManagerComponent*                EquipmentManagerComponent;                                // 0x0C58(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                         TeamCinematicSequenceActor;                               // 0x0C60(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsTeamLoadedInLobby;                                     // 0x0C68(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x7];                                       // 0x0C69(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGameFubarDel;                                           // 0x0C70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuPressed;                                      // 0x0C80(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuReleased;                                     // 0x0C90(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuUsedLastSelection;                            // 0x0CA0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRadialMenuForceClosed;                                  // 0x0CB0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bRadialMenuOpen;                                          // 0x0CC0(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x7];                                       // 0x0CC1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAutoPickupChanged;                                      // 0x0CC8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData28[0x10];                                      // 0x0CD8(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNewPollCalled;                                          // 0x0CE8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalPlayerHasVoted;                                    // 0x0CF8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPollCompleted;                                          // 0x0D08(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnVoteCountUpdated;                                       // 0x0D18(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPollStateChanged;                                       // 0x0D28(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bLeftChoiceHeldDown;                                      // 0x0D38(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRightChoiceHeldDown;                                     // 0x0D39(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData29[0x3];                                       // 0x0D3A(0x0003) MISSED OFFSET
	bool                                               bTelemetryFeatureActive;                                  // 0x0D3D(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData30[0x2];                                       // 0x0D3E(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTelemetrySettingsChanged;                               // 0x0D40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData31[0x6C];                                      // 0x0D50(0x006C) MISSED OFFSET
	bool                                               bUseFallackTeamNum;                                       // 0x0DBC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData32[0x3];                                       // 0x0DBD(0x0003) MISSED OFFSET
	int                                                FallbackTeamNum;                                          // 0x0DC0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData33[0x4];                                       // 0x0DC4(0x0004) MISSED OFFSET
	class AKSMinimapRendererBase*                      CachedMinimapRenderer;                                    // 0x0DC8(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnUpdatePlayerRevealedUI;                                 // 0x0DD0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpdateEnemyDetectedUI;                                  // 0x0DE0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData34[0x8];                                       // 0x0DF0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerController");
		return ptr;
	}


	void ViewedPawnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void ViewedPawnTakeArmorDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void ViewedPawnInstigatedDamageNotify(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	void ViewedPawnInstigatedDamage(class AKSCharacterBase* InPawn, float DamageAmount, class UDamageType* DamageTypeCDO, class AActor* Target, class AActor* DamageCauser);
	void TriggerInputAction(const struct FName& ActionName, const struct FKey& ActionKey, TEnumAsByte<EInputEvent> InputEvent);
	void ToggleTouch();
	void ToggleAccurateAimAssistStrengthInterp();
	void ToggleAccurateAimAssistKickbackAndGyro();
	void ToggleAccurateAimAssistBoundsInterp();
	bool ShouldVoteBlockMenu();
	bool ShouldThermalVisionSkipTeammates();
	void SetYawLocked(bool bNewLocked);
	void SetVoteShouldBlockMenu();
	void SetSkipTeammatesForThermalVision(bool bShouldSkip);
	void SetPitchLocked(bool bNewLocked);
	void SetIsTeamLoadedInLobby(bool bIsLoaded);
	void SetGamepadTurnRateScale(float NewScale);
	void SetGamepadLookUpRateScale(float NewScale);
	void SetForceThermalVision(bool bForceEnable, bool bIsSpectator);
	void SetAutoShoulderSwapEnabled(bool bEnable);
	void SetAutoPickupEnabled(bool bEnable);
	void ServerUpdatePing(float ExactPing);
	void ServerSetQueueDivertType(EQueueDivertType InQueueDivertType);
	void ServerSetIsTeamLoadedInLobby(bool bIsLoaded);
	void ServerSetAutoPickupPreference(bool bEnableAutoPickup);
	void ServerReportQuitFromMenu();
	void ServerPushInputTypeUse(const struct FClientInputTypeUse& PushedClientInputTypeUse);
	void ServerPushFrameRateData(const struct FClientStatistics& PushedRender, const struct FClientStatistics& PushedGame, const struct FClientStatistics& PushedGPU, const struct FClientStatistics& PushedRHI, const struct FClientStatistics& PushedFrame);
	void ServerPushClientContext(const struct FClientContext& PushedClientContext);
	void ServerNotifyClientSimpleSimulation(bool UseSimple);
	void ServerLagCompensationVisualization(bool bEnable);
	void ServerChangeSpectateTarget(bool bForward);
	void ServerBouncePing(float Timestamp);
	void ReportWeaponsEquipped();
	void ReportKillcamWorldReady();
	void ReportApparelApplied();
	void ReportAllReadyConditionsMet();
	void ReevaluateAllRevealDisplays();
	void RadialMenuUseLastSelection(EMercCosmeticSlot ButtonCosmeticSlot);
	void RadialMenuReleased(EMercCosmeticSlot ButtonCosmeticSlot, bool bIsContextualPingHold);
	void RadialMenuPressed(EMercCosmeticSlot ButtonCosmeticSlot, bool bIsContextualPingHold);
	void RadialMenuForceClosed();
	void OnSpectateViewTargetDestroyed(class AActor* InViewTarget);
	void OnSpectateViewedCharacterKilledTimerElapsed(class AKSCharacterBase* KilledCharacter);
	void OnSpectateViewedCharacterKilled(class AKSCharacterBase* KillerCharacter, class AKSCharacterBase* KilledCharacter);
	void OnSpectateControllerDestroyed(class AActor* InActor);
	void OnPrimaryPawnDestroyed(class AActor* InPrimaryPawn);
	void OnKillcamWorldReady();
	void OnDelayedPossess(class APawn* InPawn);
	void OnCurrentSpectateTargetDestroyed(class AActor* DestroyedActor);
	void OnCharacterWeaponsEquipped();
	void OnCharacterApparelApplied();
	void LocalStopAimDownSights();
	void LocalStartAimDownSights();
	bool IsViewWithinMinimapBounds();
	bool IsUIRelevantOrSpectator();
	bool IsUIRelevant();
	bool IsThermalVisionForced();
	static EPerceivedAlignmentType IsTeamNumFriendlyWithLocalPlayerAdvanced(class UObject* WorldContextObject, int TeamNum, int* RelativeTeam);
	static EPerceivedAlignmentType IsTeamNumFriendlyWithLocalPlayer(class UObject* WorldContextObject, int TeamNum);
	static EPerceivedAlignmentType IsTeamNumFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, int TeamNum, int* RelativeTeam);
	static EPerceivedAlignmentType IsTeamNumFriendlyWithController(class APlayerController* InPlayerController, int TeamNum);
	bool IsRadialMenuOpen();
	static EPerceivedAlignmentType IsPersistentPlayerFriendlyWithLocalPlayerAdvanced(class UObject* WorldContentObject, class UKSPersistentPlayerData* Data, int* RelativeTeam);
	static EPerceivedAlignmentType IsPersistentPlayerFriendlyWithLocalPlayer(class UObject* WorldContextObject, class UKSPersistentPlayerData* Data);
	static EPerceivedAlignmentType IsPersistentPlayerFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class UKSPersistentPlayerData* Data, int* RelativeTeam);
	static EPerceivedAlignmentType IsPersistentPlayerFriendlyWithController(class APlayerController* InPlayerController, class UKSPersistentPlayerData* Data);
	static bool IsOnlyASpectator(class APlayerController* PlayerController);
	static EPerceivedAlignmentType IsObjectiveFriendlyWithLocalPlayerAdvanced(class AKSObjectiveBase* Objective, int* RelativeTeam);
	static EPerceivedAlignmentType IsObjectiveFriendlyWithLocalPlayer(class AKSObjectiveBase* Objective);
	static EPerceivedAlignmentType IsObjectiveFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class AKSObjectiveBase* Objective, int* RelativeTeam);
	static EPerceivedAlignmentType IsObjectiveFriendlyWithController(class APlayerController* InPlayerController, class AKSObjectiveBase* Objective);
	static bool IsLocalPlayerOnlyASpectator(class UObject* WorldContextObject);
	bool IsInShownWorld();
	EPerceivedAlignmentType IsFriendlyWithTeamNumAdvanced(int TeamNum, int* RelativeTeam);
	EPerceivedAlignmentType IsFriendlyWithTeamNum(int TeamNum);
	EPerceivedAlignmentType IsFriendlyWithPersistentPlayerAdvanced(class UKSPersistentPlayerData* Data, int* RelativeTeam);
	EPerceivedAlignmentType IsFriendlyWithPersistentPlayer(class UKSPersistentPlayerData* Data);
	EPerceivedAlignmentType IsFriendlyWithObjectiveAdvanced(class AKSObjectiveBase* Objective, int* RelativeTeam);
	EPerceivedAlignmentType IsFriendlyWithObjective(class AKSObjectiveBase* Objective);
	static EPerceivedAlignmentType IsFriendlyWithLocalPlayerAdvanced(class AActor* Actor, int* RelativeTeam);
	static EPerceivedAlignmentType IsFriendlyWithLocalPlayer(class AActor* Actor);
	static EPerceivedAlignmentType IsFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class AActor* Actor, int* RelativeTeam);
	static EPerceivedAlignmentType IsFriendlyWithController(class APlayerController* InPlayerController, class AActor* Actor);
	EPerceivedAlignmentType IsFriendlyWithComponentAdvanced(class USceneComponent* Component, int* RelativeTeam);
	EPerceivedAlignmentType IsFriendlyWithComponent(class USceneComponent* Component);
	EPerceivedAlignmentType IsFriendlyWithAdvanced(class AActor* Actor, int* RelativeTeam);
	EPerceivedAlignmentType IsFriendlyWith(class AActor* Actor);
	static EPerceivedAlignmentType IsComponentFriendlyWithLocalPlayerAdvanced(class USceneComponent* Component, int* RelativeTeam);
	static EPerceivedAlignmentType IsComponentFriendlyWithLocalPlayer(class USceneComponent* Component);
	static EPerceivedAlignmentType IsComponentFriendlyWithControllerAdvanced(class APlayerController* InPlayerController, class USceneComponent* Component, int* RelativeTeam);
	static EPerceivedAlignmentType IsComponentFriendlyWithController(class APlayerController* InPlayerController, class USceneComponent* Component);
	bool IsAutoShoulderSwapEnabled();
	bool IsAutoPickupEnabled();
	bool HasUIBlockingRightStickLookInput();
	class AKSPlayerState* GetViewedPlayerState();
	int GetValidSpectateTargetCount();
	class APawn* GetUIPawn();
	class AKSCharacter* GetUIKSCharacter();
	struct FTelemetrySettings GetTelemetrySettings();
	class UKSPlayerShotListener* GetShotListener();
	class AKSRevealManager* GetRevealManager();
	class UKSRadialMenuManager* GetRadialMenuManager();
	struct FText GetRadialItemNameByEquipPoint(const struct FGameplayTag& InEquipPoint);
	class AKSCharacterBase* GetPrimaryPawn();
	class UKSPingManager* GetPingManager();
	int GetPing();
	static int GetPerceivedTeamNumForLocalPlayer(class UObject* WorldContextObject);
	static int GetPerceivedTeamNumForController(class APlayerController* InPlayerController);
	int GetPerceivedTeamNum();
	static class AKSTeamState* GetPerceivedLocalTeamForLocalPlayer(class UObject* WorldContextObject);
	static class AKSTeamState* GetPerceivedLocalTeamForController(class APlayerController* InPlayerController);
	class AKSTeamState* GetPerceivedLocalTeam();
	void GetOutgoingPacketInfo(float* KBPerSecond, int* PacketsPerSecond, float* PacketLossRatio);
	class AKSPlayerState* GetKSPlayerState();
	class UKSJobSelectionManager* GetJobSelectionManager();
	bool GetIsTeamLoadedInLobby();
	void GetIncomingPacketInfo(float* KBPerSecond, int* PacketsPerSecond, float* PacketLossRatio);
	class UKSHUDAnnouncementComponent* GetHUDAnnouncmentComponent();
	class UKSGamepadLookSpeedManager* GetGamepadLookSpeedManager();
	float GetFPS();
	class UKSEquipmentManagerComponent* GetEquipmentManagerComponent();
	class UKSAimAssistComponent* GetAimAssistComponent();
	void FlushVoteInput();
	void FinalizeAutoPickupPreferenceChange();
	void FillInClientContext();
	void EventViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void EventViewedPawnTakeArmorDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin);
	void EventViewedPawnInstigatedDamageNotify(const struct FCombatEventInfo& DamageInfo);
	void EventViewedPawnInstigatedDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* Target, class AActor* DamageCauser);
	void EnablePreventFlushPressedKeys();
	void ControllerChangedForPickupLabeling(class AKSPlayerController* NewController);
	void CompVis(bool bEnable);
	void ClientViewedPawnTakeDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin, bool bPrimaryPawn);
	void ClientViewedPawnTakeArmorDamage(float DamageAmount, class UClass* DamageTypeClass, class AActor* DamageCauser, const struct FVector& DamageOrigin, bool bPrimaryPawn);
	void ClientViewedPawnInstigatedDamageNotify(const struct FCombatEventInfo& DamageInfo, bool bPrimaryPawn);
	void ClientUpdateActivityProgressCount(int64_t ActivityItemId, int NewProgressCount);
	void ClientSpectateTeam();
	void ClientSignalEndOfMatch();
	void ClientReturnPing(float Timestamp);
	void ClientPlayInstantReplay(float TimeToRewind, float Duration, float DilationStart, float DilationAmount);
	void ClientOnPollStateChanged(bool bIsPaused);
	void ClientOnPollCompleted(const struct FKSPollResults& PollResults);
	void ClientDrawDebugSphere(const struct FVector& Center, float Radius, const struct FColor& Color, float Duration);
	void ClientDrawDebugLine(const struct FVector& start, const struct FVector& end, const struct FColor& Color, float Duration);
	void ClientDrawDebugCapsule(const struct FTransform& Transform, float Radius, float HalfHeight, const struct FColor& Color, float Duration);
	void ClientDrawDebugBox(const struct FTransform& Transform, const struct FVector& Extent, const struct FColor& Color, float Duration);
	void Client_ReevaluateRevealDisplayOfActor(class AActor* ActorToCheck);
	void Client_ReevaluateAllRevealDisplays();
	void ClearRotationLocks();
	void ClearActiveInteractableUI();
	void CachePostMatchScoreboard(const struct FScoreboardStats& ScoreboardStats);
	void CachePostMatchInfo(const struct FPlayerRewardsSummaryReplicated& RewardsReplicated);
	void ApplyKickback(const struct FInterpCurveVector2D& KickbackCurve, float InKickbackRecoveryDelay, float InKickbackRecoveryRate, float InKickbackRecoveryAccel, float InMaxCumulativeKickbackVerticalAngle, float ScalingFactor);
	void AimStateChangedForPickupLabeling(EKSCharacterAimMode AimState);
	void AddTimePlayed();
	bool ActivateRadialItemByEquipPoint(const struct FGameplayTag& InEquipPoint);
};


// Class Killstreak.KSKillCamController
// 0x0070 (0x0E68 - 0x0DF8)
class AKSKillCamController : public AKSPlayerController
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0DF8(0x0068) MISSED OFFSET
	class AKSKillCamObjectCamera*                      KillCamObjectCamera;                                      // 0x0E60(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSKillCamController");
		return ptr;
	}

};


// Class Killstreak.KSKillCamObjectCamera
// 0x0018 (0x0238 - 0x0220)
class AKSKillCamObjectCamera : public AActor
{
public:
	class UKSSpringArmComponent*                       MainCameraBoom;                                           // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCameraComponent;                                      // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USceneComponent*                             EmptyComponent;                                           // 0x0230(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSKillCamObjectCamera");
		return ptr;
	}

};


// Class Killstreak.KSKillLeaderTracker
// 0x0048 (0x00E0 - 0x0098)
class UKSKillLeaderTracker : public UKSAccoladeTracker
{
public:
	struct FTrackedPlayers                             CurrentLeader;                                            // 0x0098(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FTrackedPlayers                             TempNewLeader;                                            // 0x00B0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                HighestKillCount;                                         // 0x00C8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TArray<struct FTrackedPlayers>                     TrackedPlayers;                                           // 0x00D0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSKillLeaderTracker");
		return ptr;
	}


	void ProcessElimEntry(class AKSPlayerState* InstigatorPlayerState);
	void HandleTrackerAccolade(class AKSPlayerState* Player);
	bool FindPlayerEntry(class AKSPlayerState* InstigatorPlayerState, int* PlayerIndex);
	bool CheckKillLeader();
};


// Class Killstreak.KSLoadoutBundle
// 0x0060 (0x02A0 - 0x0240)
class UKSLoadoutBundle : public UKSItemBundle
{
public:
	TSoftObjectPtr<class UKSLoadoutClass>              LoadoutClass;                                             // 0x0240(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UKSWeaponAsset>               Gadget;                                                   // 0x0268(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod_Activated>> BundledAbilities;                                         // 0x0290(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLoadoutBundle");
		return ptr;
	}


	bool GetWeapons(TArray<TSoftObjectPtr<class UKSWeaponAsset>>* OutWeaponAssets);
	bool GetWeaponItemIds(TArray<int>* OutWeaponItemIds);
	bool GetPerks(TArray<TSoftObjectPtr<class UKSPlayerMod>>* OutPerks);
	bool GetPerkItemIds(TArray<int>* OutPerkItemIds);
	bool GetBundlePerks(TArray<class UKSPlayerMod*>* OutPerks);
	bool GetBundleAbilities(TArray<class UKSPlayerMod_Activated*>* OutAbilities);
	bool GetAttachments(TArray<TSoftObjectPtr<class UKSWeaponAttachment>>* OutWeaponAttachments);
	bool GetAttachmentItemIds(TArray<int>* OutAttachmentItemIds);
	bool GetAbilityItemIds(TArray<int>* OutAbilityItemIds);
	bool GetAbilities(TArray<TSoftObjectPtr<class UKSPlayerMod_Activated>>* OutAbilities);
};


// Class Killstreak.KSLoadoutClass
// 0x00B8 (0x02E8 - 0x0230)
class UKSLoadoutClass : public UKSItem
{
public:
	TSoftObjectPtr<class UTexture2D>                   DynamicPoseImage;                                         // 0x0230(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorLight;                                          // 0x0258(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorDark;                                           // 0x0268(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UPerkCategory>>        PerkCategories;                                           // 0x0278(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         AvailablePerks;                                           // 0x0288(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod_Activated>> AvailableAbilities;                                       // 0x0298(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSWeaponAsset>>       AvailableGadgets;                                         // 0x02A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               CanUseGlobalGadgets;                                      // 0x02B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02B9(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSWeaponAsset>>       AvailablePistols;                                         // 0x02C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               CanUseGlobalPistols;                                      // 0x02D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02D1(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         AutoEquippedMods;                                         // 0x02D8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLoadoutClass");
		return ptr;
	}


	class UTexture2D* GetDynamicPoseImage(bool bAllowSyncLoad);
};


// Class Killstreak.KSLoadoutDataFactory
// 0x0000 (0x00A8 - 0x00A8)
class UKSLoadoutDataFactory : public UPUMG_LoadoutDataFactory
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLoadoutDataFactory");
		return ptr;
	}


	void SaveLoadoutByType(EKSLoadoutTypes LoadoutType);
	bool IsAccountItemEquippedInSlot(class UKSItem* AccountItem, EPlayerAccountSlot eSlot);
	static class UKSJobItem* GetPreferredJob(class UObject* WorldContextObject);
	bool GetLoadoutByType(EKSLoadoutTypes LoadoutType, bool bCreateIfNeeded, class UPUMG_Loadout** Loadout);
	bool GetEquippedCosmeticForWeapon(class UKSWeaponAsset* WeaponItem, class UKSWeaponAttachment** CosmeticItem);
	bool GetEquippedAccountItem(EPlayerAccountSlot eSlot, class UKSItem** EquippedItem);
	bool GetDefaultCosmeticItem(EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, bool SkipGlobal, class UKSItem** DefaultCosmeticItem);
	static class UKSJobItem* GetBestJobToPreviewItem(class UKSItem* InItem, class UObject* WorldContextObject);
	bool EquipCosmeticToWeapon(class UKSWeaponAttachment* CosmeticItem, class UKSWeaponAsset* WeaponItem, bool bGlobal);
	bool EquipAccountItemToSlot(EPlayerAccountSlot eSlot, class UKSItem* Item, bool bSave);
};


// Class Killstreak.KSLoadoutRuleComponent
// 0x0000 (0x00B0 - 0x00B0)
class UKSLoadoutRuleComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLoadoutRuleComponent");
		return ptr;
	}


	bool AllowItem(class UKSItem* Item, EJobLoadoutSlot Slot);
};


// Class Killstreak.KSLobbyCharacter
// 0x01A0 (0x37E0 - 0x3640)
class AKSLobbyCharacter : public AKSCharacter
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x3640(0x0050) MISSED OFFSET
	struct FName                                       ViewModelName;                                            // 0x3690(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActiveLobbyMontage;                                       // 0x3698(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableRogueSelectWeaponPose;                             // 0x36A0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableWalkinCinematicWeaponPose;                         // 0x36A1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ELobbyCharacterIndex                               CharacterIndex;                                           // 0x36A2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5];                                       // 0x36A3(0x0005) MISSED OFFSET
	class UKSWeaponSkeletalMeshComponent*              LobbyWeapon01Component;                                   // 0x36A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyWeapon02Component;                                   // 0x36B0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyProp01Component;                                     // 0x36B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              LobbyProp02Component;                                     // 0x36C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      LobbyPropStatic01Component;                               // 0x36C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSStaticMeshComponent*                      LobbyPropStatic02Component;                               // 0x36D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FLobbySkeletalPropInfo>  SkeletalPropMapping;                                      // 0x36D8(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, struct FLobbyStaticPropInfo>    StaticPropMapping;                                        // 0x3728(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldHideInGame;                                         // 0x3778(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bWereTexturesStreamedIn;                                  // 0x3779(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsSet;                                                   // 0x377A(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bHideUntilTexturesStream;                                 // 0x377B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceEnableClothSim;                                     // 0x377C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPrestreamTextures;                                       // 0x377D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x377E(0x0002) MISSED OFFSET
	int                                                ForcedLodModel;                                           // 0x3780(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCustomForcedLodForSwitch;                                // 0x3784(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x3785(0x0003) MISSED OFFSET
	int                                                ForcedLodModelSwitch;                                     // 0x3788(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x8];                                       // 0x378C(0x0008) MISSED OFFSET
	ELobbyCharacterAnimState                           CurrentAnimState;                                         // 0x3794(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x3];                                       // 0x3795(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVisibilityChangedDel;                                   // 0x3798(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	bool                                               bIsRotatable;                                             // 0x37A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x37A9(0x0003) MISSED OFFSET
	struct FVector                                     MaxAxisRotation;                                          // 0x37AC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IdleSecondsToResetRotation;                               // 0x37B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ResetRotationSpeedRadians;                                // 0x37BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RotationRatePerAxis;                                      // 0x37C0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x14];                                      // 0x37CC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLobbyCharacter");
		return ptr;
	}


	void VisibilityChanged(bool IsVisible);
	bool UpdateHiddenInGame();
	void UnsetCharacter();
	void UnbindControllerFromActor();
	void StopLobbyCharacterMontage();
	void StopCurrentEmote();
	void ShowLobbyNameplate();
	void SetUpStaticLobbyProp(const struct FLobbyStaticPropInfo& LobbyStaticPropInfo, class UKSStaticMeshComponent* StaticPropComponent);
	void SetUpSkeletalLobbyProp(const struct FLobbySkeletalPropInfo& LobbyPropInfo, class UKSWeaponSkeletalMeshComponent* SkeletalPropComponent);
	void SetupLobbyCharacter(class UKSPlayerInfo* playerinfo);
	void SetShouldHideInGame(bool ShouldHide);
	void SetLobbyNameplate(class UKSPlayerInfo* playerinfo);
	void SetLobbyCharacterAnimState(ELobbyCharacterAnimState AnimState);
	void SetCharacterSkin(class UKSItem* SkinItem);
	void SetCharacterEmote(class UKSItem* EmoteItem);
	void PlayLobbyCharacterMontage();
	void OnLobbyPresenceStateChange(ELobbyPresenceState LobbyPresenceState);
	bool IsSet();
	bool IsLobbyCharacter();
	void InitializeLobbyCharacterAnimation();
	void HideLobbyNameplate();
	float GetCurrentMontagePosition();
	ELobbyCharacterAnimState GetCurrentAnimState();
	ELobbyCharacterIndex GetCharacterIndex();
	void EmoteCosmeticComponentCreated(class AKSEquipment* Emote);
	void EmoteActionStateChanged(class UKSEquipmentCosmeticComponent* Cosmetic);
	void DeattachStaticLobbyProp(class UKSStaticMeshComponent* StaticPropComponent);
	void DeattachSkeletalLobbyProp(class UKSWeaponSkeletalMeshComponent* SkeletalPropComponent);
	void DeattachAllLobbyProps();
	void ClearAllLobbyPropInfo();
	void BindControllerToActor();
	void BeginRotationReset();
	void AttachAllActiveLobbyProps();
};


// Class Killstreak.KSLobbyCameraActor
// 0x0010 (0x0810 - 0x0800)
class AKSLobbyCameraActor : public ACineCameraActor
{
public:
	struct FName                                       CameraTag;                                                // 0x0800(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0808(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLobbyCameraActor");
		return ptr;
	}

};


// Class Killstreak.KSLobbyLevelSequenceActor
// 0x0008 (0x02B8 - 0x02B0)
class AKSLobbyLevelSequenceActor : public ALevelSequenceActor
{
public:
	struct FName                                       SequenceTag;                                              // 0x02B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLobbyLevelSequenceActor");
		return ptr;
	}

};


// Class Killstreak.KSLocalPlayer
// 0x0038 (0x0298 - 0x0260)
class UKSLocalPlayer : public UPCom_LocalPlayer
{
public:
	struct FScriptMulticastDelegate                    OnLocalViewedPawnChangedDel;                              // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0270(0x0018) MISSED OFFSET
	class UKSKillCam*                                  KillCam;                                                  // 0x0288(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      KillCamControllerClass;                                   // 0x0290(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLocalPlayer");
		return ptr;
	}


	bool IsKillCamReplayActive();
	class UWorld* GetRealWorld();
	class UKSKillCam* GetKillCam();
};


// Class Killstreak.KSLocomotionAnimInst
// 0x0000 (0x10A0 - 0x10A0)
class UKSLocomotionAnimInst : public UKSCharacterAnimInst
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLocomotionAnimInst");
		return ptr;
	}

};


// Class Killstreak.KSLongShot
// 0x0008 (0x00A0 - 0x0098)
class UKSLongShot : public UKSAccoladeTracker
{
public:
	float                                              DistanceRequirement;                                      // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLongShot");
		return ptr;
	}


	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
};


// Class Killstreak.KSLootSitePowerUp
// 0x0010 (0x0358 - 0x0348)
class AKSLootSitePowerUp : public AKSLootSiteBase
{
public:
	TArray<struct FLootSiteDropInfo>                   PossibleLoot;                                             // 0x0348(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSLootSitePowerUp");
		return ptr;
	}

};


// Class Killstreak.KSMapDifficultyManager
// 0x0170 (0x0390 - 0x0220)
class AKSMapDifficultyManager : public AActor
{
public:
	bool                                               AppliesToNPEMatches;                                      // 0x0220(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	TArray<class UKSBTDifficulty*>                     Difficulties;                                             // 0x0228(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<int, int>                                     InitialTeamDifficulties;                                  // 0x0238(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                MinDifficultyWhenDefeated;                                // 0x0288(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              ApplicableGameModes;                                      // 0x0290(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      WinLossRatioAdjustEasier;                                 // 0x02A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      WinLossRatioAdjustHarder;                                 // 0x02B0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentAtStartOfRound;                            // 0x02C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForDeaths;                                 // 0x02C1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x02C2(0x0002) MISSED OFFSET
	int                                                DeathsPerAdjustmentCalculation;                           // 0x02C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForTeamDeaths;                             // 0x02C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	int                                                TeamDeathsPerAdjustmentCalculation;                       // 0x02CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForObjectivesClaimed;                      // 0x02D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x02D1(0x0003) MISSED OFFSET
	int                                                ObjectivesPerAdjustmentCalculation;                       // 0x02D4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AllowAdjustmentForTimeElapsed;                            // 0x02D8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x02D9(0x0003) MISSED OFFSET
	int                                                SecondsPerAdjustmentCalculation;                          // 0x02DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      KillDeathRatioAdjustEasier;                               // 0x02E0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      KillDeathRatioAdjustHarder;                               // 0x02F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      RoundWinPercentAdjustEasier;                              // 0x0300(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<float>                                      RoundWinPercentAdjustHarder;                              // 0x0310(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x70];                                      // 0x0320(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMapDifficultyManager");
		return ptr;
	}


	void HandleTeamCreated(class AKSTeamState* TeamState);
	void HandleRoundStart(const struct FRoundInitState& RoundState);
	void HandleRoundSetup(const struct FRoundInitState& RoundState);
	void HandlePhaseChange(const struct FName& PreviousPhaseName, const struct FName& NewPhaseName);
	void HandleObjectiveClaimed();
	void HandleCharacterOnTeamKilled(class AKSTeamState* TeamState);
};


// Class Killstreak.KSPrimaryAssetLabel
// 0x0000 (0x0068 - 0x0068)
class UKSPrimaryAssetLabel : public UPrimaryAssetLabel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPrimaryAssetLabel");
		return ptr;
	}

};


// Class Killstreak.KSMapLabel
// 0x00C0 (0x0128 - 0x0068)
class UKSMapLabel : public UKSPrimaryAssetLabel
{
public:
	TSoftObjectPtr<class UWorld>                       Map;                                                      // 0x0068(0x0028) (CPF_Edit, CPF_AssetRegistrySearchable, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   MiniMapTexture;                                           // 0x0090(0x0028) (CPF_Edit, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   LoadingScreenImage;                                       // 0x00B8(0x0028) (CPF_Edit, CPF_AssetRegistrySearchable, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapDisplayName;                                           // 0x00E0(0x0018) (CPF_Edit, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapRegion;                                                // 0x00F8(0x0018) (CPF_Edit, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)
	struct FText                                       MapDescription;                                           // 0x0110(0x0018) (CPF_Edit, CPF_AssetRegistrySearchable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMapLabel");
		return ptr;
	}

};


// Class Killstreak.KSMatchDataRecorder
// 0x0330 (0x0358 - 0x0028)
class UKSMatchDataRecorder : public UObject
{
public:
	struct FMatchRecord                                MatchRecord;                                              // 0x0028(0x0188) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x01B0(0x00A0) MISSED OFFSET
	TMap<uint64_t, struct FWeaponUseSummaryRecord>     InProgressWeaponSummaries;                                // 0x0250(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xB8];                                      // 0x02A0(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMatchDataRecorder");
		return ptr;
	}


	void OnPlayerLogout(class AGameModeBase* GameMode, class AController* Player);
	void OnPlayerLogin(class AGameModeBase* GameMode, class APlayerController* NewPlayer);
};


// Class Killstreak.KSMath
// 0x0000 (0x0028 - 0x0028)
class UKSMath : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMath");
		return ptr;
	}


	static struct FVector ShiftLocationBetweenTransforms(const struct FVector& Location, const struct FTransform& SourceTransform, const struct FTransform& TargetTransform);
	static struct FInterpCurveVector2D ScaleInterpCurveVector2D(const struct FInterpCurveVector2D& InCurve, float InScale);
	static struct FInterpCurveFloat ScaleInterpCurveFloatInput(const struct FInterpCurveFloat& InCurve, float InScale);
	static struct FRotator RInterpConstantToDirectional(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);
	static struct FRotator GetRotationFromNormals(const struct FVector& From, const struct FVector& To);
	static int GetLineSphereIntersectionPoints(const struct FVector& LinePointA, const struct FVector& LinePointB, const struct FVector& SphereOrigin, float SphereRadius, struct FVector* OutPointA, struct FVector* OutPointB);
	static bool GetLineRectangleIntersectionPoints(const struct FVector2D& LinePointA, const struct FVector2D& LinePointB, const struct FVector2D& RectCenter, const struct FVector2D& RectExtent, float RectYaw, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2);
	static bool GetLineCircleIntersectionPoints(const struct FVector2D& LinePointA, const struct FVector2D& LinePointB, const struct FVector2D& CircleCenter, float CircleRadius, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2);
	static float FloatInterpCurveIntegralTrapezoid(const struct FInterpCurveFloat& InCurve, float MinTime, float MaxTime, float DeltaTime);
	static float FInterpRadiansTo(float Current, float Target, float DeltaTime, float InterpSpeed);
	static float FInterpEaseOutViewStyle(float A, float B, float Alpha, float Exp);
	static float FInterpEaseOutInverse(float Time, float Exp);
	static float FInterpEaseInViewStyle(float A, float B, float Alpha, float Exp);
	static float FInterpDegreesTo(float Current, float Target, float DeltaTime, float InterpSpeed);
	static struct FVector2D ClampVector2D(const struct FVector2D& InVector2D, float MinSize, float MaxSize);
};


// Class Killstreak.KSMedPack
// 0x0008 (0x0720 - 0x0718)
class AKSMedPack : public AKSWeapon
{
public:
	bool                                               bUseWhileMovingOverride;                                  // 0x0718(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanStopFire;                                             // 0x0719(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x071A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMedPack");
		return ptr;
	}


	float GetBuildupTime();
};


// Class Killstreak.KSMeleeTargetingModule
// 0x0050 (0x03F0 - 0x03A0)
class UKSMeleeTargetingModule : public UKSProjectileTargetingModule
{
public:
	bool                                               bHasLungeTarget;                                          // 0x03A0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasThrowTarget;                                          // 0x03A1(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimedAtFriendly;                                         // 0x03A2(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x5];                                       // 0x03A3(0x0005) MISSED OFFSET
	class UKSWeaponAsset_Melee*                        MeleeAsset;                                               // 0x03A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ImpactOnCharacterComponentSize;                           // 0x03B0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class UMaterialInterface*                          ImpactOnCharacterComponentMaterial;                       // 0x03C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ImpactOnCharacterColorParameterName;                      // 0x03C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       ImpactOnCharacterCookParameterName;                       // 0x03D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ImpactOnCharacterMesh;                                    // 0x03D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    ImpactOnCharacterMaterialInstance;                        // 0x03E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        ImpactOnCharacterComponent;                               // 0x03E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMeleeTargetingModule");
		return ptr;
	}

};


// Class Killstreak.KSMeleeWeaponAssetDrop
// 0x0000 (0x0848 - 0x0848)
class AKSMeleeWeaponAssetDrop : public AKSWeaponAssetDrop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMeleeWeaponAssetDrop");
		return ptr;
	}

};


// Class Killstreak.KSMercManager
// 0x0000 (0x0028 - 0x0028)
class UKSMercManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMercManager");
		return ptr;
	}


	void Uninitialize();
	bool IsItemEquippedInSlot(class UKSItem* CosmeticItem, EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem);
	bool IsItemEquippedInAnySlot(class UKSItem* CosmeticItem, EMercCosmeticSlot eSlot, TArray<int> SlotPosition, class UKSJobItem* JobItem);
	void Initialize();
	class UKSLoadoutDataFactory* GetLoadoutDataFactory();
	TArray<TSoftObjectPtr<class UKSJobItem>> GetJobItems();
	bool GetEquippedCosmeticItemBySlot(EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, class UKSItem** CosmeticItem);
	bool EquipCosmeticItemToSlot(EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, class UKSItem* CosmeticItem, bool bGlobal);
	void ClearCosmeticItemOnSlot(EMercCosmeticSlot eSlot, int SlotPosition, class UKSJobItem* JobItem, bool bGlobal);
};


// Class Killstreak.KSMercMasteryManager
// 0x0000 (0x0210 - 0x0210)
class UKSMercMasteryManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMercMasteryManager");
		return ptr;
	}


	float GetWinPercentForJob(class UKSJobItem* JobItem, class AKSPlayerController* Player);
	class UKSActivityInstance* GetMercXpActivityInstanceForJob(class UKSJobItem* JobItem);
	class UKSJobItem* GetLowestJobForActivityType(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player);
	int GetJobMasteryLevelForXpValue(class UKSJobItem* JobItem, int XpValue);
	class UKSJobItem* GetHighestJobForActivityType(const struct FGameplayTag& ActivityTag, class AKSPlayerController* Player);
};


// Class Killstreak.KSMiniMapAssistant
// 0x0000 (0x0220 - 0x0220)
class AKSMiniMapAssistant : public AInfo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMiniMapAssistant");
		return ptr;
	}


	void GetRelativeMinimapHeightToLocalPlayer(const struct FVector& ActorLocation, EKSRelativeMinimapHeight* RelativeHeight);
};


// Class Killstreak.KSMinimapRendererBase
// 0x0000 (0x0220 - 0x0220)
class AKSMinimapRendererBase : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMinimapRendererBase");
		return ptr;
	}


	float GetMinimapWidth();
};


// Class Killstreak.KSModDrop
// 0x0000 (0x0380 - 0x0380)
class AKSModDrop : public AKSItemDrop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModDrop");
		return ptr;
	}


	void HandleNewItemAssetReceived();
};


// Class Killstreak.KSPlayerModInstance
// 0x00E8 (0x0198 - 0x00B0)
class UKSPlayerModInstance : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnModInstRemoved;                                         // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x00C0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModTriggered;                                           // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bPreventModInitialization;                                // 0x00E8(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bInitialized;                                             // 0x00E9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00EA(0x0006) MISSED OFFSET
	class AKSPlayerState*                              ModOwner;                                                 // 0x00F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                OwnerCharacter;                                           // 0x00F8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	class UKSPlayerMod*                                ModAsset;                                                 // 0x0108(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerState*                              ModInstigator;                                            // 0x0110(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSWeapon>                    WeaponInstigator;                                         // 0x0118(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                InstanceCount;                                            // 0x0120(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LocalInstanceCount;                                       // 0x0124(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsesDuration;                                            // 0x0128(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisplaysDuration;                                        // 0x0129(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x16];                                      // 0x012A(0x0016) MISSED OFFSET
	bool                                               bUseAssetDataTableManager;                                // 0x0140(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	class UDynamicSkinTable*                           AssetDataTableManager;                                    // 0x0148(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FDataTableInfo>                      PersistentSkinDataTables;                                 // 0x0150(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FDataTableInfo>                      UISkinDataTables;                                         // 0x0160(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0170(0x0018) MISSED OFFSET
	bool                                               bLatencyElapsed;                                          // 0x0188(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0xF];                                       // 0x0189(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerModInstance");
		return ptr;
	}


	bool UsesDuration();
	bool StopAnimationFromEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	bool ReactsToAnimationEvent(const struct FName& AnimEventName, int* Priority);
	void PlayAnimationFromEvent(const struct FName& AnimEventName, class UKSCharacterAnimInst* CharAnimInstance);
	bool OwnerIsLocal();
	bool OwnerHasAuthority();
	bool OverrideInteraction(const TScriptInterface<class UKSInteractable>& Interactable, float* Duration, class UClass** Type);
	void OnRep_OwnerCharacter();
	void OnRep_ModAsset();
	void OnRep_InstanceCount();
	void OnOwnerDied(class AKSCharacterBase* KillerCharacter, class AKSCharacterBase* KilledCharacter);
	void OnNewCharacter();
	void OnModInitialized();
	void OnInstanceCountChanged(int DeltaInstances);
	void OnEstimatedLatencyElapsed();
	void OnCharacterOwnerDeath(class AKSCharacterBase* Killer, class AKSCharacterBase* Killed);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	void ModEventReceived(const struct FName& ModEvent);
	void InitializeMod();
	bool HasEstimatedLatencyElapsed();
	class AKSPlayerState* GetPlayerStateOwner();
	EPlayerModType GetModType();
	class AKSPlayerState* GetModInstigator();
	class UKSPlayerMod* GetModAsset();
	int GetInstanceCount();
	void GetDuration(float* Duration, float* RemainingTime, bool* UsesDuration);
	int GetClampedInstanceCount();
	class AKSCharacter* GetCharacterOwner();
	void FinishAssetPreload();
	void BroadcastModTriggeredInternal();
	void BroadcastModTriggered();
};


// Class Killstreak.KSModInst_Activated
// 0x02D0 (0x0468 - 0x0198)
class UKSModInst_Activated : public UKSPlayerModInstance
{
public:
	bool                                               bCanBecomeFullyChargedOnEndActivation;                    // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUsesAbilityMovement;                                     // 0x0199(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EMovementMode>                         MovementMode;                                             // 0x019A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<EKSGame_CustomMovement>                CustomMovementMode;                                       // 0x019B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	class UKSTimerComponent*                           LockoutTimer;                                             // 0x01A0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01A8(0x0010) MISSED OFFSET
	bool                                               bIsLocked;                                                // 0x01B8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModLocked;                                              // 0x01C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnModLockoutTick;                                         // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x10];                                      // 0x01E0(0x0010) MISSED OFFSET
	class UKSTimerComponent*                           SetupTimer;                                               // 0x01F0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnBonusAbilityDurationReceived;                           // 0x01F8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              BonusAbilityDuration;                                     // 0x0208(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LocalBonusAbilityDuration;                                // 0x020C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSActionRestrictor                         SetupActionRestrictor;                                    // 0x0210(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentSetupRestrictor;                                   // 0x021C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         RecoveryActionRestrictor;                                 // 0x0220(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseDownedActionRestrictors;                              // 0x022C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x022D(0x0003) MISSED OFFSET
	struct FKSActionRestrictor                         DownedSetupActionRestrictor;                              // 0x0230(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         DownedRecoveryActionRestrictor;                           // 0x023C(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0248(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModActivated;                                           // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerMod_Activated*                      ActivateMod;                                              // 0x0270(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnChargeChanged;                                          // 0x0278(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnNullCharacter;                            // 0x0288(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDelayChargeConsumption;                                  // 0x0289(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeOnEndActivation;                            // 0x028A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x5];                                       // 0x028B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModSetup;                                               // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               ActivationSoundEvent;                                     // 0x02A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SpacialActivationSoundEvent;                              // 0x02A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SetupSoundEvent;                                          // 0x02B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               SpacialSetupSoundEvent;                                   // 0x02B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               DeactivationSoundEvent;                                   // 0x02C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUnCrouchOnActivation;                                    // 0x02C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActivateOnZipLine;                                    // 0x02C9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActivateWithoutRequiredCharge;                        // 0x02CA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanAddPerSecondChargeWhileActive;                        // 0x02CB(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModFailedToActivate;                                    // 0x02D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x30];                                      // 0x02E0(0x0030) MISSED OFFSET
	float                                              CurrentCharge;                                            // 0x0310(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0xFC];                                      // 0x0314(0x00FC) MISSED OFFSET
	bool                                               bDeactivateWhenWeaponFired;                               // 0x0410(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	TArray<class UClass*>                              WeaponsToIgnore;                                          // 0x0418(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDeactivateWhenMacGuffinFired;                            // 0x0428(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	TArray<class UClass*>                              DamageTypesThatCancel;                                    // 0x0430(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnModHoldChanged;                                         // 0x0440(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentlyHeldId;                                          // 0x0450(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LocalHeldId;                                              // 0x0454(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCurrentlyHeld;                                           // 0x0458(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UKSModInst_ActivatedStateMachine*            ActivatedStateMachine;                                    // 0x0460(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_Activated");
		return ptr;
	}


	void UpdateChargeDirect(float DeltaCharge);
	void UpdateCharge(int Delta);
	bool TryToCancel();
	bool TryToActivate();
	void SetAbilityMovementMode(TEnumAsByte<EMovementMode> InMovementMode, TEnumAsByte<EKSGame_CustomMovement> InCustomMovementMode);
	void SetAbilityMovementDisabled(bool bDisable);
	void RefundCharge();
	void Recharge();
	void OnSetupComplete();
	void OnSetupActive(bool bIsTimerActive);
	void OnSetup();
	void OnRep_SetupTimer();
	void OnRep_LockoutTimer();
	void OnRep_Locked();
	void OnRep_CurrentlyHeldId();
	void OnRep_CurrentCharge();
	void OnRep_BonusAbilityDuration();
	void OnOwnerDownStateChanged(class AKSPlayerState* DownedPlayer);
	void OnLockoutTimerTick(float Seconds);
	void OnLockoutTimerActive(bool bIsTimerActive);
	void OnFullyCharged();
	void OnEndRecovery();
	void OnEndActivationWarning();
	void OnEndActivation();
	void OnActivation();
	void OnAbilityReleased();
	bool IsUIActivateableNow(EKSAbilityUsageFailureType* OutAbilityFailureType);
	bool IsLocked();
	bool IsInSetup();
	bool IsCharacterAbility();
	bool IsActivated();
	bool IsAbilityMovementDisabled();
	void HandleWeaponFireStarted(class AKSWeapon* Weapon);
	void HandleSetupTimerComplete();
	void HandleSetupTimerActive(bool bIsTimerActive);
	void HandleCharacterOwnerTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	class UKSModInst_ActivatedStateMachine* GetStateMachine();
	struct FKSActionRestrictor GetSetupActionRestrictor();
	int GetRequiredCharge();
	struct FKSActionRestrictor GetRecoveryActionRestrictor();
	float GetPerSecondCharge();
	int GetMaximumCharge();
	float GetLockoutTimeRemaining();
	int GetDefaultCharge();
	int GetCurrentCharge();
	class UKSPlayerMod_Activated* GetActivatedModAsset();
	float GetAbilitySetupDuration();
	float GetAbilityRecoveryDuration();
	float GetAbilityDuration();
	void EndActivation();
	void ConsumeChargeAmount(float Amount);
	void ConsumeCharge();
	void ClientModFailedToActivate(EKSAbilityUsageFailureType AbilityFailureType);
	bool CanTryToCancel();
	bool CanActivateWhileDowned();
	bool CanActivateNow(EKSAbilityUsageFailureType* OutAbilityFailureType);
	void BroadcastModActivated(bool bActive);
	void BroadcastEndRecovery();
	void BroadcastEndActivationWarning();
	void BeginActivation();
	void AwardBonusAbilityDuration(float BonusDuration);
	void AbilitySetupRequestTimeout();
	void AbilityActivationRequestTimeout();
};


// Class Killstreak.KSModInst_ActivatedStateMachine
// 0x00B0 (0x0518 - 0x0468)
class UKSModInst_ActivatedStateMachine : public UKSModInst_Activated
{
public:
	TMap<struct FName, class UKSPlayerMod_Activated*>  ManagedModAssets;                                         // 0x0468(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FStateMachineModEntry>               ManagedMods;                                              // 0x04B8(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        CurrentActiveMod;                                         // 0x04C8(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSModInst_Activated*                        LocalActiveMod;                                           // 0x04D0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bChargeAll;                                               // 0x04D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04D9(0x0007) MISSED OFFSET
	TArray<struct FStateMachineObjectEntry>            StateStorage;                                             // 0x04E0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnStateStorageChangedDel;                                 // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0500(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ActivatedStateMachine");
		return ptr;
	}


	bool TryToSetAsActiveMod(const struct FName& Key);
	void RemoveFromStateStorage(const struct FStateMachineObjectEntry& Entry);
	void OnRep_StateStorage();
	void OnRep_CurrentActiveMod();
	void OnActiveModFailedToActivate(class UKSModInst_Activated* AttemptedMod, EKSAbilityUsageFailureType AbilityFailureType);
	void OnActiveModChargeChanged(class UKSModInst_Activated* ChargingModInstance);
	bool GetStoredPlayerStates(const struct FName& Key, TArray<class AKSPlayerState*>* OutReferences);
	bool GetStateStorage(const struct FName& Key, TArray<struct FStateMachineObjectEntry>* OutReferences);
	void ClearStateStorage(const struct FName& Key);
	void AddToStateStorage(const struct FStateMachineObjectEntry& Entry);
	void AddPlayerStateToStateStorage(const struct FName& Key, class AKSPlayerState* PlayerState);
};


// Class Killstreak.KSModInst_ActivatedTarget
// 0x0110 (0x0578 - 0x0468)
class UKSModInst_ActivatedTarget : public UKSModInst_Activated
{
public:
	class UKSPlayerMod_ActivatedTarget*                ActivateTargetMod;                                        // 0x0468(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                Target;                                                   // 0x0470(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0478(0x0008) MISSED OFFSET
	class UDynamicSkinTable*                           TargetAssetDataTableManager;                              // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xF0];                                      // 0x0488(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ActivatedTarget");
		return ptr;
	}


	class AKSCharacter* GetCachedTarget();
	void BroadcastTarget(class AKSCharacter* InTarget);
	void AssignTarget(class AKSCharacter** OutTarget);
};


// Class Killstreak.KSModInst_ActivatedViewMode
// 0x0020 (0x0488 - 0x0468)
class UKSModInst_ActivatedViewMode : public UKSModInst_Activated
{
public:
	struct FScriptMulticastDelegate                    OnViewStateChange;                                        // 0x0468(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EModViewModeState                                  CurrentState;                                             // 0x0478(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0479(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ActivatedViewMode");
		return ptr;
	}

};


// Class Killstreak.KSModInst_OnDamageOther
// 0x0018 (0x01B0 - 0x0198)
class UKSModInst_OnDamageOther : public UKSPlayerModInstance
{
public:
	float                                              MinimumDamage;                                            // 0x0198(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseActualDamageDone;                                     // 0x019C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x019D(0x0003) MISSED OFFSET
	TArray<EDamageCategory>                            ValidDamageCategories;                                    // 0x01A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnDamageOther");
		return ptr;
	}


	void OnMatchingDamageDealt(class AActor* DamagedActor, float Damage, class AActor* DamageCauser);
	void OnInstigatedDamageNotify(class AKSCharacterBase* Damager, const struct FCombatEventInfo& CombatEvent);
	bool DoesDamageMatch(class AKSCharacterBase* Damager, float Damage, class UKSDamageTypeBase* DamageType, class AActor* DamagedActor, class AActor* DamageCauser, const struct FCombatEventInfo& CombatEvent);
};


// Class Killstreak.KSModInst_ApplyDebuffOnDamage
// 0x0078 (0x0228 - 0x01B0)
class UKSModInst_ApplyDebuffOnDamage : public UKSModInst_OnDamageOther
{
public:
	TArray<class UKSPlayerMod*>                        DebuffsToApply;                                           // 0x01B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGiveDebuffsUniquely;                                     // 0x01C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	float                                              DebuffDuration;                                           // 0x01C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x60];                                      // 0x01C8(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ApplyDebuffOnDamage");
		return ptr;
	}

};


// Class Killstreak.KSModInst_OnDownOther
// 0x0008 (0x01A0 - 0x0198)
class UKSModInst_OnDownOther : public UKSPlayerModInstance
{
public:
	bool                                               bListenToDowns;                                           // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bListenToEliminations;                                    // 0x0199(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bListenToAssists;                                         // 0x019A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAffectFriendlies;                                        // 0x019B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnDownOther");
		return ptr;
	}


	void OnEliminateOther(class AKSCharacter* Other);
	void OnDownOther(class AKSCharacter* Other);
	void OnAssistEliminateOther(class AKSCharacter* Other);
	void EliminationTriggered(class AKSCharacter* Other);
	void DownTriggered(class AKSCharacter* Other);
	void AssistTriggered(class AKSCharacter* Other);
};


// Class Killstreak.KSModInst_ApplyDebuffOnDownOther
// 0x0080 (0x0220 - 0x01A0)
class UKSModInst_ApplyDebuffOnDownOther : public UKSModInst_OnDownOther
{
public:
	TArray<class UKSPlayerMod*>                        DebuffsToApply;                                           // 0x01A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGiveDebuffsUniquely;                                     // 0x01B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01B1(0x0003) MISSED OFFSET
	float                                              DebuffDuration;                                           // 0x01B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRemoveDebuffOnRevive;                                    // 0x01B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x67];                                      // 0x01B9(0x0067) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ApplyDebuffOnDownOther");
		return ptr;
	}


	void OnDebuffsRemovedFromCharacter(class AKSCharacter* Character);
	void OnDebuffsAppliedToCharacter(class AKSCharacter* Character);
};


// Class Killstreak.KSModInst_GiveItemOnActivation
// 0x0020 (0x0488 - 0x0468)
class UKSModInst_GiveItemOnActivation : public UKSModInst_Activated
{
public:
	bool                                               bGiveItemOnNewCharacter;                                  // 0x0468(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	struct FScriptDelegate                             AsyncItemGiveDelegate;                                    // 0x046C(0x0014) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	class UObject*                                     GivenItem;                                                // 0x0480(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_GiveItemOnActivation");
		return ptr;
	}


	void TryToRemoveItem();
	void TryToGiveItem(int Index);
	void OnRep_GivenItem();
	void OnNewGivenItem();
	void OnItemRemoved();
	int GetOnNewCharacterItemIndex();
	void AsyncItemGiveComplete(class UKSItem* Item, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
};


// Class Killstreak.KSModInst_GiveWeaponOnActivation
// 0x0068 (0x04F0 - 0x0488)
class UKSModInst_GiveWeaponOnActivation : public UKSModInst_GiveItemOnActivation
{
public:
	bool                                               bActivatesOnIdle;                                         // 0x0488(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bActivatesOnFire;                                         // 0x0489(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xE];                                       // 0x048A(0x000E) MISSED OFFSET
	bool                                               bRestrictSwapping;                                        // 0x0498(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSwapToMain;                                              // 0x0499(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsiderAsSwapToPrevious;                                // 0x049A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x25];                                      // 0x049B(0x0025) MISSED OFFSET
	bool                                               bEndActivationOnHolster;                                  // 0x04C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnEmptyClip;                                // 0x04C1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEndActivationOnExhausted;                                // 0x04C2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenItemRemoved;                            // 0x04C3(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenFired;                                  // 0x04C4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsumeChargeWhenAmmoConsumed;                           // 0x04C5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplenishesAmmoOnFullyCharged;                           // 0x04C6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReplenishesAmmoOnDurationIncreased;                      // 0x04C7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldBroadcastWeaponHits;                               // 0x04C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET
	struct FTimerHandle                                SwapFromRetryTimer;                                       // 0x04D0(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SwapFromRetryTime;                                        // 0x04D8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSwappingOff;                                             // 0x04DC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x04DD(0x0003) MISSED OFFSET
	TArray<class AActor*>                              DeployableActors;                                         // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_GiveWeaponOnActivation");
		return ptr;
	}


	void WeaponAmmoConsumed(class AKSWeapon* Weapon, int AmmoConsumed);
	bool TryToSwapBackToWeapon();
	void SwapFromRetry();
	void RegisterDeployable(class AActor* DeployableAsActor);
	void PrepareSwapTo(class AKSWeapon* SwapToWeapon);
	void OnWeaponStateChanged(class AKSWeapon* Weapon, EWeaponStateNew OldState, EWeaponStateNew NewState);
	void OnGivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	void OnDeployableDestroyed(class AActor* DestroyedDeployableActor);
	void HandleWeaponExhausted(class AKSWeapon* Weapon);
	void GivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
	bool EndsActivationOnHolster();
	bool EndsActivationOnExhausted();
	bool EndsActivationOnEmptyClip();
	void BroadcastGivenWeaponInstigatedDamage(class AKSCharacterBase* InPawn, const struct FCombatEventInfo& DamageInfo);
};


// Class Killstreak.KSModInst_BuffWeaponOnActivation
// 0x0060 (0x0550 - 0x04F0)
class UKSModInst_BuffWeaponOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	TArray<class UKSWeaponAsset*>                      AssetsToBuff;                                             // 0x04F0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPointToBuff;                                         // 0x0500(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                EquipPointOfBuff;                                         // 0x0508(0x0008) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRequireBaseToActivate;                                   // 0x0510(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSyncAmmo;                                                // 0x0511(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0512(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AKSWeapon>                    BaseWeapon;                                               // 0x0514(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UKSWeaponComponent>           BaseWeaponComponent;                                      // 0x051C(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UKSWeaponComponent>           BuffWeaponComponent;                                      // 0x0524(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x24];                                      // 0x052C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_BuffWeaponOnActivation");
		return ptr;
	}


	void OnRep_BaseWeapon();
	void OnBaseWeaponDestroyed(class AActor* DestroyedActor);
};


// Class Killstreak.KSModInst_CacheAim
// 0x0060 (0x04C8 - 0x0468)
class UKSModInst_CacheAim : public UKSModInst_Activated
{
public:
	struct FAimData                                    CachedAim;                                                // 0x0468(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              AimReferenceAsset;                                        // 0x04B8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimRange;                                                 // 0x04C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCacheAimOnSetup;                                         // 0x04C4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04C5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_CacheAim");
		return ptr;
	}


	void OnAimReferenceAssetReady();
};


// Class Killstreak.KSModInst_DamageDealt
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_DamageDealt : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_DamageDealt");
		return ptr;
	}

};


// Class Killstreak.KSModInst_OverTimeEffect
// 0x0018 (0x01B0 - 0x0198)
class UKSModInst_OverTimeEffect : public UKSPlayerModInstance
{
public:
	class UKSTimerComponent*                           EffectTimer;                                              // 0x0198(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EffectTickPeriod;                                         // 0x01A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                EffectTickCount;                                          // 0x01A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldImmediatelyEffect;                                 // 0x01A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bResetTickCountOnStackIncrease;                           // 0x01A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01AA(0x0002) MISSED OFFSET
	int                                                TickCount;                                                // 0x01AC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OverTimeEffect");
		return ptr;
	}


	void OnRep_EffectTimer();
	float GetEffectTickPeriod();
	void EffectTick();
};


// Class Killstreak.KSModInst_DamageOverTime
// 0x0018 (0x01C8 - 0x01B0)
class UKSModInst_DamageOverTime : public UKSModInst_OverTimeEffect
{
public:
	float                                              DamagePerTick;                                            // 0x01B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x01B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              RadialDamageWeapon;                                       // 0x01C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_DamageOverTime");
		return ptr;
	}

};


// Class Killstreak.KSModInst_DetectEnemy
// 0x0040 (0x01D8 - 0x0198)
class UKSModInst_DetectEnemy : public UKSPlayerModInstance
{
public:
	struct FScriptMulticastDelegate                    OnDetectEnemy;                                            // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       WidgetClass;                                              // 0x01A8(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsDetectingEnemy;                                        // 0x01D0(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_DetectEnemy");
		return ptr;
	}


	void OnRep_EnemyDetected();
	bool IsDetectingEnemy();
	TSoftObjectPtr<class UClass> GetWidgetClass();
	void DetectEnemy(bool bDetectEnemy);
};


// Class Killstreak.KSModInst_FireWeaponOnActivation
// 0x0008 (0x04F8 - 0x04F0)
class UKSModInst_FireWeaponOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_FireWeaponOnActivation");
		return ptr;
	}


	void HandleIdle(class AKSWeapon* Weapon, EWeaponStateNew OldState);
	void HandleCooldown(class AKSWeapon* Weapon, EWeaponStateNew OldState);
	void HandleBuildup(class AKSWeapon* Weapon, EWeaponStateNew OldState);
};


// Class Killstreak.KSModInst_DirectTargetWeapon
// 0x0020 (0x0518 - 0x04F8)
class UKSModInst_DirectTargetWeapon : public UKSModInst_FireWeaponOnActivation
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04F8(0x0008) MISSED OFFSET
	TWeakObjectPtr<class AKSWeapon_DirectTarget>       TargetedWeapon;                                           // 0x0500(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTargetAcquired;                                         // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_DirectTargetWeapon");
		return ptr;
	}

};


// Class Killstreak.KSModInst_GiveBuildOnActivation
// 0x0058 (0x0548 - 0x04F0)
class UKSModInst_GiveBuildOnActivation : public UKSModInst_GiveWeaponOnActivation
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x04F0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBuildSucceededDel;                                      // 0x0508(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0518(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBuildFailedDel;                                         // 0x0530(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bStartFireOnActivation;                                   // 0x0540(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0541(0x0001) MISSED OFFSET
	bool                                               bRefundOnReclaim;                                         // 0x0542(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0543(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_GiveBuildOnActivation");
		return ptr;
	}


	void BuildSucceeded();
	void BuildSpawned(class AKSBuild* SpawnedBuild);
	void BuildReclaimed(class AKSBuild* Reclaimed);
	void BuildFailed();
};


// Class Killstreak.KSModInst_GiveEquipPoints
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_GiveEquipPoints : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_GiveEquipPoints");
		return ptr;
	}

};


// Class Killstreak.KSModInst_HoldToTarget
// 0x0030 (0x0498 - 0x0468)
class UKSModInst_HoldToTarget : public UKSModInst_Activated
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0468(0x0008) MISSED OFFSET
	struct FKSTargeterConfig                           TargeterConfig;                                           // 0x0470(0x000C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTargetAcquired;                                         // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AActor*                                      CurrentTarget;                                            // 0x0490(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_HoldToTarget");
		return ptr;
	}


	void OnRep_CurrentTarget();
	bool IsTargetValid(class AActor* Candidate);
};


// Class Killstreak.KSModInst_MainCameraFov
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_MainCameraFov : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_MainCameraFov");
		return ptr;
	}

};


// Class Killstreak.KSModInst_MartialArtist
// 0x0028 (0x05A0 - 0x0578)
class UKSModInst_MartialArtist : public UKSModInst_ActivatedTarget
{
public:
	EThrowDirection                                    TargetThrowDirection;                                     // 0x0578(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0579(0x0003) MISSED OFFSET
	float                                              ChargeTime;                                               // 0x057C(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0580(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_MartialArtist");
		return ptr;
	}


	float GetThrowDistance();
	struct FVector GetThrowDirection(const struct FVector& ToDirection, EThrowDirection ThrowDirection);
	void GetCardinalThrowDirection(EThrowDirection* OutThrowDirection);
	void BroadcastTargetInfo(EThrowDirection Direction, TArray<struct FVector> Path, float PathDistance);
};


// Class Killstreak.KSModInst_MovementAbility
// 0x0008 (0x0470 - 0x0468)
class UKSModInst_MovementAbility : public UKSModInst_Activated
{
public:
	float                                              Distance;                                                 // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x046C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_MovementAbility");
		return ptr;
	}


	float GetDistance();
};


// Class Killstreak.KSModInst_OnAbilityUsed
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnAbilityUsed : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnAbilityUsed");
		return ptr;
	}


	void Triggered();
	void OnAbilityUsed();
	void AbilityUsed();
};


// Class Killstreak.KSModInst_OnDodgeRoll
// 0x0008 (0x01A0 - 0x0198)
class UKSModInst_OnDodgeRoll : public UKSPlayerModInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnDodgeRoll");
		return ptr;
	}


	void Triggered(float RollDuration);
	void OnDodgeRoll(float RollDuration);
};


// Class Killstreak.KSModInst_OnDodgeRollEnd
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnDodgeRollEnd : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnDodgeRollEnd");
		return ptr;
	}


	void Triggered();
	void OnDodgeRollEnd();
};


// Class Killstreak.KSModInst_OnDownOrRevive
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnDownOrRevive : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnDownOrRevive");
		return ptr;
	}


	void OnReviveComplete(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
};


// Class Killstreak.KSModInst_OnEquipmentActive
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnEquipmentActive : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnEquipmentActive");
		return ptr;
	}


	void OnEquipmentEndActive(class AKSCharacter* Character, class UKSWeaponComponent* WeaponComponent);
	void OnEquipmentBecomeActive(class AKSCharacter* Character, class UKSWeaponComponent* WeaponComponent);
	void EquipmentEndActive(class UKSWeaponComponent* WeaponComponent);
	void EquipmentBecomeActive(class UKSWeaponComponent* WeaponComponent);
};


// Class Killstreak.KSModInst_OnEndActiveReload
// 0x0078 (0x0210 - 0x0198)
class UKSModInst_OnEndActiveReload : public UKSModInst_OnEquipmentActive
{
public:
	struct FScriptMulticastDelegate                    OnReloadStart;                                            // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReloadEnd;                                              // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseWeaponAssetReloadTime;                                // 0x01B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01B9(0x0003) MISSED OFFSET
	float                                              ReloadTime;                                               // 0x01BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x01C0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnEndActiveReload");
		return ptr;
	}


	void ReloadEquipmentAtEquipPoint(const struct FGameplayTag& EquipPoint);
};


// Class Killstreak.KSModInst_OnFireWeaponType
// 0x0010 (0x01A8 - 0x0198)
class UKSModInst_OnFireWeaponType : public UKSPlayerModInstance
{
public:
	TArray<struct FGameplayTag>                        ValidWeaponTypes;                                         // 0x0198(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnFireWeaponType");
		return ptr;
	}


	void Triggered();
	void OnFireWeapon(class AKSWeapon* FiredWeapon);
	void FiredValidWeaponType(class AKSWeapon* FiredWeapon);
};


// Class Killstreak.KSModInst_OnGenericEvent
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnGenericEvent : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnGenericEvent");
		return ptr;
	}


	void Triggered();
};


// Class Killstreak.KSModInst_OnPickupItem
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnPickupItem : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnPickupItem");
		return ptr;
	}


	void OnItemPickedUp(class AKSCharacter* Character, class AKSItemDrop* ItemDrop, class UKSItem* Item);
	void ItemPickedUp(class AKSCharacter* Character, class AKSItemDrop* ItemDrop, class UKSItem* Item);
};


// Class Killstreak.KSModInst_OnProjectileBounce
// 0x0008 (0x01A0 - 0x0198)
class UKSModInst_OnProjectileBounce : public UKSPlayerModInstance
{
public:
	bool                                               bTrackEnemyProjectile;                                    // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTrackFriendlyProjectile;                                 // 0x0199(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTrackSelfProjectile;                                     // 0x019A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bListenToBounce;                                          // 0x019B(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bListenToStop;                                            // 0x019C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x019D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnProjectileBounce");
		return ptr;
	}


	void OnProjectileStopped(const struct FHitResult& HitResult);
	void OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
};


// Class Killstreak.KSModInst_OnReviveOther
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_OnReviveOther : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnReviveOther");
		return ptr;
	}


	void Triggered(class AKSPlayerState* Reviver, class AKSPlayerState* Revivee);
	void OnReviveOther(class AKSPlayerState* Reviver, class AKSPlayerState* Revivee);
};


// Class Killstreak.KSModInst_OnShotAt
// 0x0020 (0x01B8 - 0x0198)
class UKSModInst_OnShotAt : public UKSPlayerModInstance
{
public:
	float                                              MinimumDamage;                                            // 0x0198(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	TArray<EDamageCategory>                            ValidDamageCategories;                                    // 0x01A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnShotAt");
		return ptr;
	}


	void StopShotAtTimer();
	void StartOrRestartShotAtTimer(float Duration);
	void ShotAtTimerComplete();
	void ReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void OnReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnNearMiss(class AKSCharacterBase* NearlyMissedCharacter);
	void NearMiss(class AKSCharacterBase* NearlyMissedCharacter);
	void MatchingDamageTaken(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	bool IsShotAtTimerActive();
	float GetShotAtTimerRemainingTime();
};


// Class Killstreak.KSModInst_OnShotAtAndDodgeRollEnd
// 0x0018 (0x01D0 - 0x01B8)
class UKSModInst_OnShotAtAndDodgeRollEnd : public UKSModInst_OnShotAt
{
public:
	EWillToSurviveModState                             WillToSurviveModState;                                    // 0x01B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x17];                                      // 0x01B9(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnShotAtAndDodgeRollEnd");
		return ptr;
	}


	void TimerComplete(EWillToSurviveTimerType TimerType);
	void StopTimer(EWillToSurviveTimerType TimerType);
	void StartOrRestartTimer(EWillToSurviveTimerType TimerType, float Duration);
	void OnDodgeRollEnd();
	void ModActivatedTimerComplete();
	bool IsTimerActive(EWillToSurviveTimerType TimerType);
	float GetTimerRemainingTime(EWillToSurviveTimerType TimerType);
	struct FTimerHandle GetTimerHandleForType(EWillToSurviveTimerType TimerType);
	struct FTimerHandle GetConstTimerHandleForType(EWillToSurviveTimerType TimerType);
	void CooldownTimerComplete();
};


// Class Killstreak.KSModInst_OnTakeDamage
// 0x0020 (0x01B8 - 0x0198)
class UKSModInst_OnTakeDamage : public UKSPlayerModInstance
{
public:
	class UKSTimerComponent*                           TakeDamageTimer;                                          // 0x0198(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumDamage;                                            // 0x01A0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	TArray<EDamageCategory>                            ValidDamageCategories;                                    // 0x01A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_OnTakeDamage");
		return ptr;
	}


	void TakeDamageTimerComplete();
	void StopTakeDamageTimer();
	void StartTakeDamageTimer(float Duration);
	void ReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnTakeDamage(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
	void OnReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void OnRep_TakeDamageTimer();
	void MatchingDamageTaken(class AActor* InActor, float DamageAmount, class UDamageType* DamageTypeCDO, class AController* EventInstigator, class AActor* DamageCauser);
};


// Class Killstreak.KSModInst_PhysAbilityMovement
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_PhysAbilityMovement : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_PhysAbilityMovement");
		return ptr;
	}

};


// Class Killstreak.KSModInst_PickupRange
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_PickupRange : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_PickupRange");
		return ptr;
	}

};


// Class Killstreak.KSModInst_PingOnOtherDowned
// 0x0050 (0x01E8 - 0x0198)
class UKSModInst_PingOnOtherDowned : public UKSPlayerModInstance
{
public:
	TArray<struct FDownedEnemyPingHandle>              PingHandles;                                              // 0x0198(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSRevealInfo                               DownedRevealParameters;                                   // 0x01A8(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSPlayerMod_PingOnOtherDowned> CastOwningMod;                                            // 0x01D8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSPlayerController>          OwningController;                                         // 0x01E0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_PingOnOtherDowned");
		return ptr;
	}


	void PingFromDownedEnemy(class AKSPlayerState* DownedEnemy);
	void OnPlayerDowned(const struct FCombatEventInfo& EventInfo, int XpBonus);
	void OnCharacterPinged(class AKSCharacter* PingedCharacter);
	void BroadcastSpawnPingEmitter(class UParticleSystem* EmitterTemplate, const struct FVector& Location);
	void BroadcastPingedCharacter(class AKSCharacter* PingedCharacter);
};


// Class Killstreak.KSModInst_RevealAreaToTeam
// 0x0038 (0x0530 - 0x04F8)
class UKSModInst_RevealAreaToTeam : public UKSModInst_FireWeaponOnActivation
{
public:
	bool                                               bAppliesScrambleEffectToEnemies;                          // 0x04F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04F9(0x0007) MISSED OFFSET
	struct FKSRevealInfo                               RevealAreaRevealParameters;                               // 0x0500(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_RevealAreaToTeam");
		return ptr;
	}

};


// Class Killstreak.KSModInst_RevealOnMinimap
// 0x0030 (0x01C8 - 0x0198)
class UKSModInst_RevealOnMinimap : public UKSPlayerModInstance
{
public:
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x0198(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRevealOnFullMap;                                         // 0x01C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_RevealOnMinimap");
		return ptr;
	}


	bool IsValidReveal(class AKSPlayerController* LocalPlayer);
};


// Class Killstreak.KSModInst_RevealSelf
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_RevealSelf : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_RevealSelf");
		return ptr;
	}

};


// Class Killstreak.KSModInst_ReviveDrone
// 0x0048 (0x0560 - 0x0518)
class UKSModInst_ReviveDrone : public UKSModInst_DirectTargetWeapon
{
public:
	struct FScriptMulticastDelegate                    OnReviveDroneAbilityStateChanged;                         // 0x0518(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EKSReviveDroneAbilityState                         KSReviveDroneAbilityState;                                // 0x0528(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0529(0x0007) MISSED OFFSET
	struct FTimerHandle                                ResetToAvailabilityTimerHandle;                           // 0x0530(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              TimeToResetAvailability;                                  // 0x0538(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        CurrentDrone;                                             // 0x053C(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReviveDroneSetTarget;                                   // 0x0548(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AKSCharacter>                 DroneTargetCharacter;                                     // 0x0558(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ReviveDrone");
		return ptr;
	}


	void SetDroneTarget(class AKSCharacter* TargetCharacter);
	void ResetToAvailability();
	void ResetTargetCharacter();
	void OnReviveDroneEvent(EKSReviveDroneEvent KSReviveDroneEvent);
	void OnRep_ReviveDroneAbilityState();
	void OnRep_ReviveDrone();
	void OnDroneTargetRevive();
	void OnDroneTargetDied();
	void OnDroneSpawned(class AKSAgent_RevivalDrone* KSAgentRevivalDrone);
	void OnDroneReviveComplete();
	void OnDroneReviveBegin();
	void OnDroneHealthUpdate(float Health, float MaxHealth);
	void OnDroneDestroyed();
	void OnDroneAbort();
	float GetReviveProgress();
	EKSReviveDroneAbilityState GetReviveDroneAbilityState();
	class AKSCharacter* GetDroneTarget();
	void BroadcastReviveDroneEvent(EKSReviveDroneEvent KSReviveDroneEvent);
};


// Class Killstreak.KSModInst_ReviveSelfOnActivation
// 0x0040 (0x04A8 - 0x0468)
class UKSModInst_ReviveSelfOnActivation : public UKSModInst_Activated
{
public:
	bool                                               bUsesCustomDuration;                                      // 0x0468(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              CustomReviveTime;                                         // 0x046C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanUseWhileUp;                                           // 0x0470(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReviveDuringSetup;                                       // 0x0471(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0472(0x0002) MISSED OFFSET
	float                                              UpAbilitySetupDuration;                                   // 0x0474(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpAbilityDuration;                                        // 0x0478(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpAbilityRecoveryDuration;                                // 0x047C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSActionRestrictor                         UpAbilityRecoveryActionRestrictor;                        // 0x0480(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	TArray<class UKSPlayerMod*>                        UpBuffsGivenOnActivation;                                 // 0x0490(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ReviveSelfOnActivation");
		return ptr;
	}

};


// Class Killstreak.KSModInst_ReviveTarget
// 0x0018 (0x0480 - 0x0468)
class UKSModInst_ReviveTarget : public UKSModInst_Activated
{
public:
	float                                              MaxDistance;                                              // 0x0468(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       OverrideReviveeMontageRowName;                            // 0x046C(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0474(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_ReviveTarget");
		return ptr;
	}


	void TargetReviveInterrupted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void TargetReviveCompleted(class AKSCharacter* Reviver, class AKSCharacter* Revivee);
	void TargetKilled();
	class AKSCharacter* GetTargetCharacter();
};


// Class Killstreak.KSModInst_StartingEquipment
// 0x0000 (0x0198 - 0x0198)
class UKSModInst_StartingEquipment : public UKSPlayerModInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_StartingEquipment");
		return ptr;
	}


	void GiveEquipment();
};


// Class Killstreak.KSModInst_WeaponSkinOverride
// 0x0110 (0x02A8 - 0x0198)
class UKSModInst_WeaponSkinOverride : public UKSPlayerModInstance
{
public:
	TMap<struct FGameplayTag, struct FDataTableInfo>   WeaponTypeSkinTables;                                     // 0x0198(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FDataTableInfo                              DefaultWeaponSkinTable;                                   // 0x01E8(0x0058) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UMultiSkinObject*> WeaponTypeSkinObjects;                                    // 0x0240(0x0050) (CPF_Transient, CPF_DuplicateTransient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            DefaultWeaponSkinObject;                                  // 0x0290(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UKSWeaponComponent>>   AppliedWeaponComponents;                                  // 0x0298(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModInst_WeaponSkinOverride");
		return ptr;
	}


	void OnActiveWeaponChanged(class AKSCharacter* Character);
};


// Class Killstreak.KSModZone
// 0x0040 (0x0260 - 0x0220)
class AKSModZone : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0220(0x0020) MISSED OFFSET
	TArray<struct FKSModZoneModInfo>                   EnterModZoneInfos;                                        // 0x0240(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSModZoneModInfo>                   ExitModZoneInfos;                                         // 0x0250(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSModZone");
		return ptr;
	}


	void OnCharacterPossessedOutsideZone(class AController* Controller);
	void OnCharacterPossessedInsideZone(class AController* Controller);
};


// Class Killstreak.KSMultiDownsTracker
// 0x0030 (0x00C8 - 0x0098)
class UKSMultiDownsTracker : public UKSAccoladeTracker
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0098(0x0008) MISSED OFFSET
	TArray<struct FAccoladeMultiDownTracker>           MultiDownAccolades;                                       // 0x00A0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FAccoladePlayerTrackers>             TrackPlayers;                                             // 0x00B0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxTrackerTimer;                                          // 0x00C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMultiDownsTracker");
		return ptr;
	}


	void RemoveTrackerByPlayerState(class AKSPlayerState* CurrentPlayerState);
	void RemoveTracker(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	void HandleTrackerAccolade(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	bool GetTrackPlayer(int PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex);
};


// Class Killstreak.KSMultiElimTracker
// 0x0020 (0x00B8 - 0x0098)
class UKSMultiElimTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FAccoladeMultiElimTracker>           MultiElimAccolades;                                       // 0x0098(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FAccoladePlayerTrackers>             TrackPlayers;                                             // 0x00A8(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMultiElimTracker");
		return ptr;
	}


	void RemoveTrackerByPlayerState(class AKSPlayerState* CurrentPlayerState);
	void HandleTrackerAccolade(const struct FAccoladePlayerTrackers& CurrentTrackPlayer);
	bool GetTrackPlayer(int PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex);
};


// Class Killstreak.KSMultiStateTargetingModule
// 0x0010 (0x0140 - 0x0130)
class UKSMultiStateTargetingModule : public UKSWeaponTargetingModule
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMultiStateTargetingModule");
		return ptr;
	}

};


// Class Killstreak.KSMVPDeterminant
// 0x0060 (0x0090 - 0x0030)
class UKSMVPDeterminant : public UDataAsset
{
public:
	TArray<EPlayerStatType>                            TopStats;                                                 // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EPlayerStatType, float>                       StatToWeightMap;                                          // 0x0040(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSMVPDeterminant");
		return ptr;
	}


	TArray<class UKSPersistentPlayerData*> GetOrderedPersistentPlayerDatasForMVPPoints(TArray<class UKSPersistentPlayerData*> UnorderedPersistentPlayerDatas);
	bool ComputeMVPPointsForPersistentPlayerData(class UKSPersistentPlayerData* PersistentPlayerData, int* OutMVPPoints);
};


// Class Killstreak.KSNamedLocation
// 0x0000 (0x0220 - 0x0220)
class AKSNamedLocation : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNamedLocation");
		return ptr;
	}

};


// Class Killstreak.KSNamedObject
// 0x0000 (0x0028 - 0x0028)
class UKSNamedObject : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNamedObject");
		return ptr;
	}


	struct FText GetKSName();
};


// Class Killstreak.KSNavAgentInterface
// 0x0000 (0x0028 - 0x0028)
class UKSNavAgentInterface : public UNavAgentInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavAgentInterface");
		return ptr;
	}

};


// Class Killstreak.KSNavArea
// 0x0008 (0x0050 - 0x0048)
class UKSNavArea : public UNavArea
{
public:
	EKSNavAreaType                                     NavAreaType;                                              // 0x0048(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavArea");
		return ptr;
	}

};


// Class Killstreak.KSNavigationQueryFilter
// 0x0028 (0x0070 - 0x0048)
class UKSNavigationQueryFilter : public UNavigationQueryFilter
{
public:
	class UClass*                                      DefaultFilter;                                            // 0x0048(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NoJumpFilter;                                             // 0x0050(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NoZiplineFilter;                                          // 0x0058(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      NoJumpNoZiplineFilter;                                    // 0x0060(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           MaxSearchNodes;                                           // 0x0068(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavigationQueryFilter");
		return ptr;
	}

};


// Class Killstreak.KSNavLinkProxy
// 0x0000 (0x0270 - 0x0270)
class AKSNavLinkProxy : public ANavLinkProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavLinkProxy");
		return ptr;
	}

};


// Class Killstreak.KSNavModifierComponent
// 0x0010 (0x0150 - 0x0140)
class UKSNavModifierComponent : public UNavModifierComponent
{
public:
	struct FVector                                     ComponentBoundsOffset;                                    // 0x0140(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavModifierComponent");
		return ptr;
	}


	void UpdateNavigationMesh();
	void UpdateCachedBounds();
	void SetAreaClassAndCacheBounds(class UClass* NewAreaClass);
};


// Class Killstreak.KSNavModifierVolume
// 0x0000 (0x0268 - 0x0268)
class AKSNavModifierVolume : public ANavModifierVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNavModifierVolume");
		return ptr;
	}

};


// Class Killstreak.KSNearMissComponent
// 0x0000 (0x0130 - 0x0130)
class UKSNearMissComponent : public UKSFXCurveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNearMissComponent");
		return ptr;
	}

};


// Class Killstreak.KSNeutralBombSpawner
// 0x0038 (0x0380 - 0x0348)
class AKSNeutralBombSpawner : public AKSLootSiteBase
{
public:
	struct FLootSiteDropInfo                           BombInfo;                                                 // 0x0348(0x0030) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bInitialSpawn;                                            // 0x0378(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRespawn;                                                 // 0x0379(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x037A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNeutralBombSpawner");
		return ptr;
	}

};


// Class Killstreak.KSNeutralBombZone
// 0x0048 (0x0470 - 0x0428)
class AKSNeutralBombZone : public AKSDropOffZone
{
public:
	int                                                BombZoneGroup;                                            // 0x0428(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBombZoneActive;                                         // 0x0430(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        BombZone;                                                 // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CameraName;                                               // 0x0448(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraTransitionInTime;                                   // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraTransitionOutTime;                                  // 0x0454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceCameraShoulder;                                     // 0x0458(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECameraShoulder                                    CameraShoulder;                                           // 0x0459(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x045A(0x0002) MISSED OFFSET
	float                                              CameraMaxRotation;                                        // 0x045C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CameraRotationLockout;                                    // 0x0460(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockPitch;                                               // 0x0461(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockYaw;                                                 // 0x0462(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCameraShake;                                             // 0x0463(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	class UClass*                                      CameraShake;                                              // 0x0468(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNeutralBombZone");
		return ptr;
	}

};


// Class Killstreak.KSStaticMeshComponent
// 0x0010 (0x0500 - 0x04F0)
class UKSStaticMeshComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSStaticMeshComponent");
		return ptr;
	}

};


// Class Killstreak.KSNoCollisionStaticMeshComponent
// 0x0000 (0x0500 - 0x0500)
class UKSNoCollisionStaticMeshComponent : public UKSStaticMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNoCollisionStaticMeshComponent");
		return ptr;
	}

};


// Class Killstreak.KSNoFlyZoneTracker
// 0x0058 (0x00F0 - 0x0098)
class UKSNoFlyZoneTracker : public UKSAccoladeTracker
{
public:
	int                                                QuantityDowns;                                            // 0x0098(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	TMap<class AKSPlayerState*, int>                   PlayerDowns;                                              // 0x00A0(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNoFlyZoneTracker");
		return ptr;
	}


	void UpdatePlayerTrackers(class AKSPlayerState* InstigatorPlayerState);
	void HandleTrackerAccolade(class AKSPlayerState* Player);
};


// Class Killstreak.KSNPETrackManager
// 0x0000 (0x0210 - 0x0210)
class UKSNPETrackManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNPETrackManager");
		return ptr;
	}

};


// Class Killstreak.KSNudgeComponent
// 0x0028 (0x00D8 - 0x00B0)
class UKSNudgeComponent : public UActorComponent
{
public:
	TArray<class UClass*>                              NudgeClassFilters;                                        // 0x00B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              NudgeSpeed;                                               // 0x00C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxNudgeDistance;                                         // 0x00C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               CachedNudgingActors;                                      // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSNudgeComponent");
		return ptr;
	}


	void GetNudgingActors(TArray<TWeakObjectPtr<class AActor>>* NudgingActors);
	struct FVector GetNudgeVectorWithActors(TArray<TWeakObjectPtr<class AActor>> NudgingActors);
	struct FVector GetNudgeVector();
};


// Class Killstreak.KSObjectHelper
// 0x0000 (0x0028 - 0x0028)
class UKSObjectHelper : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSObjectHelper");
		return ptr;
	}

};


// Class Killstreak.KSObjective
// 0x0000 (0x0028 - 0x0028)
class UKSObjective : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSObjective");
		return ptr;
	}


	void UnbindFromObjectiveTimerTick(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveTimerComplete(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveTimerActive(const struct FScriptDelegate& Callback);
	void UnbindFromObjectiveStateChanged(const struct FScriptDelegate& Callback);
	void TryToBroadcastObjectiveStateChanged();
	void StopObjectiveTimer();
	void StartObjectiveTimer(float InTime);
	void SetObjectiveState(const struct FKSObjectiveState& ObjectiveState);
	void SetObjectiveCaptureInfo(const struct FKSObjectiveCaptureInfo& ObjectiveCaptureInfo);
	void OnObjectiveTimerTickInternal(float Time);
	void OnObjectiveTimerCompleteInternal();
	void OnObjectiveTimerActiveInternal(bool Active);
	struct FKSObjectiveState GetPreviousObjectiveState();
	class UKSTimerComponent* GetObjectiveTimer();
	struct FKSObjectiveState GetObjectiveState();
	int GetObjectiveId();
	void ClearObjectiveCaptureInfo();
	void BindToObjectiveTimerTick(const struct FScriptDelegate& Callback);
	void BindToObjectiveTimerComplete(const struct FScriptDelegate& Callback);
	void BindToObjectiveTimerActive(const struct FScriptDelegate& Callback);
	void BindToObjectiveStateChanged(const struct FScriptDelegate& Callback);
};


// Class Killstreak.KSOutOfBoundsManager
// 0x0078 (0x0128 - 0x00B0)
class UKSOutOfBoundsManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x14];                                      // 0x00B0(0x0014) MISSED OFFSET
	float                                              OutOfBoundsWarningTime;                                   // 0x00C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutOfBoundsTickDamageTime;                                // 0x00C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              OutOfBoundsTickDamage;                                    // 0x00CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeSpentGroundedAllowedBeforeSave;                       // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	class UClass*                                      OutOfBoundsDamageType;                                    // 0x00D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowSaving;                                             // 0x00E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	class UAkAudioEvent*                               AnnouncerLineOnSaved;                                     // 0x00E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               AnnouncerLineOnEntered;                                   // 0x00F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CharacterOverlaps;                                        // 0x00F8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FTimerHandle                                CharacterWarningTimer;                                    // 0x0100(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                CharacterDamageTickTimer;                                 // 0x0108(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                         OverlapCheckComponent;                                    // 0x0110(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FTimerHandle                                TimeSpentGroundedTimerHandle;                             // 0x0118(0x0008) (CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultRecoveryUseTime;                                   // 0x0120(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0124(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSOutOfBoundsManager");
		return ptr;
	}


	void TickDamage();
	void OnOutOfBoundsWarningExpired();
	void OnCharacterOutOfWorld(class AKSCharacter* Character);
	void OnActorOverlapZoneEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapZoneBegin(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapVolumeEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnActorOverlapVolumeBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExpireTimeSpentGroundedTimer();
};


// Class Killstreak.KSOutOfBoundsManager_RoundGame
// 0x0020 (0x0148 - 0x0128)
class UKSOutOfBoundsManager_RoundGame : public UKSOutOfBoundsManager
{
public:
	float                                              SecondsIntoRoundToFreeze;                                 // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x14];                                      // 0x012C(0x0014) MISSED OFFSET
	class UKSPlayerMod*                                FrozenCharacterModAsset;                                  // 0x0140(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSOutOfBoundsManager_RoundGame");
		return ptr;
	}


	void OnRoundStarted(const struct FRoundInitState& RoundState);
	void OnFreezeEnd();
};


// Class Killstreak.KSOutOfBoundsRecoveryPoint
// 0x0010 (0x0258 - 0x0248)
class AKSOutOfBoundsRecoveryPoint : public ANavigationObjectBase
{
public:
	int                                                SideNum;                                                  // 0x0248(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x024C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSOutOfBoundsRecoveryPoint");
		return ptr;
	}

};


// Class Killstreak.KSOutOfBoundsZone
// 0x0018 (0x0238 - 0x0220)
class AKSOutOfBoundsZone : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	float                                              TickDamage;                                               // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WarningDuration;                                          // 0x022C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldDisableCollisionAtRoundEnd;                         // 0x0230(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0231(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSOutOfBoundsZone");
		return ptr;
	}


	void TurnOnDropBoundary();
	void TurnOffDropBoundary();
	void TurnOffCollision(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnActorOverlapZoneEnd(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorOverlapZoneBegin(class AActor* OverlappedActor, class AActor* OtherActor);
};


// Class Killstreak.KSOutOfBoundsVolume
// 0x0008 (0x0260 - 0x0258)
class AKSOutOfBoundsVolume : public AVolume
{
public:
	float                                              TickDamage;                                               // 0x0258(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WarningDuration;                                          // 0x025C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSOutOfBoundsVolume");
		return ptr;
	}


	void TurnOnCollision();
	void TurnOffCollision(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnActorOverlapVolumeEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnActorOverlapVolumeBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Killstreak.KSParticleModuleLocationSkelVertSurface
// 0x0000 (0x0090 - 0x0090)
class UKSParticleModuleLocationSkelVertSurface : public UParticleModuleLocationSkelVertSurface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSParticleModuleLocationSkelVertSurface");
		return ptr;
	}

};


// Class Killstreak.KSPathFollowingComponent
// 0x0000 (0x0298 - 0x0298)
class UKSPathFollowingComponent : public UCrowdFollowingComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPathFollowingComponent");
		return ptr;
	}

};


// Class Killstreak.KSPawnActionBase
// 0x0008 (0x00A0 - 0x0098)
class UKSPawnActionBase : public UPawnAction_BlueprintBase
{
public:
	class AKSCharacter*                                KSChar;                                                   // 0x0098(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnActionBase");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_Crouch
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_Crouch : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_Crouch");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_DodgeRoll
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_DodgeRoll : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_DodgeRoll");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_FreeFall
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_FreeFall : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_FreeFall");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_Jump
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_Jump : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_Jump");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_QuickMelee
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_QuickMelee : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_QuickMelee");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_Reload
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_Reload : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_Reload");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StartADS
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_StartADS : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StartADS");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StartAimAlternate
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_StartAimAlternate : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StartAimAlternate");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StartFire
// 0x0010 (0x00B0 - 0x00A0)
class UKSPawnAction_StartFire : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x00A0(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInfiniteAmmo;                                            // 0x00A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	int                                                PersistentAmmoCount;                                      // 0x00AC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StartFire");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StartSprint
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_StartSprint : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StartSprint");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StopADS
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_StopADS : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StopADS");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StopFire
// 0x0008 (0x00A8 - 0x00A0)
class UKSPawnAction_StopFire : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x00A0(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StopFire");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_StopSprint
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_StopSprint : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_StopSprint");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_SwapWeapon
// 0x0008 (0x00A8 - 0x00A0)
class UKSPawnAction_SwapWeapon : public UKSPawnActionBase
{
public:
	struct FGameplayTag                                EquipPoint;                                               // 0x00A0(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_SwapWeapon");
		return ptr;
	}

};


// Class Killstreak.KSPawnAction_Uncrouch
// 0x0000 (0x00A0 - 0x00A0)
class UKSPawnAction_Uncrouch : public UKSPawnActionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnAction_Uncrouch");
		return ptr;
	}

};


// Class Killstreak.KSPawnCommonInterface
// 0x0000 (0x0028 - 0x0028)
class UKSPawnCommonInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPawnCommonInterface");
		return ptr;
	}


	bool PrepareForNextRound(class AActor** ActorToDestroy);
};


// Class Killstreak.KSPayBackTracker
// 0x0010 (0x00A8 - 0x0098)
class UKSPayBackTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FTrackPlayerElim>                    PlayerElimTracker;                                        // 0x0098(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPayBackTracker");
		return ptr;
	}


	bool IsVictimStored(int VictimPlayerId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex);
	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
	bool CheckLastInstigator(int VictimId, int CurrentInstigatorId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex);
};


// Class Killstreak.KSPerformanceCaptureCamera
// 0x0000 (0x0220 - 0x0220)
class AKSPerformanceCaptureCamera : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPerformanceCaptureCamera");
		return ptr;
	}


	void GetNextCamera();
};


// Class Killstreak.KSPersistentPlayerData
// 0x0158 (0x0180 - 0x0028)
class UKSPersistentPlayerData : public UObject
{
public:
	bool                                               bIsBoundToMinPlayerData;                                  // 0x0028(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class AKSPlayerState*                              PlayerState;                                              // 0x0030(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0038(0x0010) MISSED OFFSET
	struct FKSPersistentPlayerId                       ID;                                                       // 0x0048(0x0010) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                TeamNum;                                                  // 0x0058(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FString                                     PlayerName;                                               // 0x0060(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnMinimumPlayerDataUpdatedDel;                            // 0x0070(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0080(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerDataTeamChangedDel;                               // 0x0098(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x18];                                      // 0x00A8(0x0018) MISSED OFFSET
	bool                                               bAbandoned;                                               // 0x00C0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataAbandonedDel;                       // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x18];                                      // 0x00D8(0x0018) MISSED OFFSET
	class UKSJobItem*                                  CachedJob;                                                // 0x00F0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedJobMasteryLevel;                                    // 0x00F8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedEliminations;                                       // 0x00FC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedDowns;                                              // 0x0100(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedAssists;                                            // 0x0104(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedDeaths;                                             // 0x0108(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedRevives;                                            // 0x010C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedMoney;                                              // 0x0110(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                CachedTotalCashEarned;                                    // 0x0114(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x0118(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0168(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPersistentPlayerData");
		return ptr;
	}


	bool IsAbandoned();
	bool HasATeam();
	int GetTotalCashEarned();
	int GetTeamNum();
	int GetRevives();
	class AKSPlayerState* GetPlayerState();
	struct FString GetPlayerName();
	int64_t GetPlayerId();
	int GetMoney();
	int GetJobMasteryLevel();
	class UKSJobItem* GetJob();
	int GetEliminations();
	int GetDowns();
	int GetDeaths();
	int GetAssists();
	void BoundPlayerStateDestroyed(class AActor* InActor);
};


// Class Killstreak.KSPhaseRuleComponent
// 0x0028 (0x00D8 - 0x00B0)
class UKSPhaseRuleComponent : public UKSGameRuleComponent
{
public:
	struct FScriptMulticastDelegate                    PhaseCompletedDel;                                        // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              ScoringScalar;                                            // 0x00C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              LastInitiatedPhaseTime;                                   // 0x00C4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRejectPhaseTimerExpiredForPostRound;                     // 0x00C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUseInitialSpawnPoints;                                   // 0x00C9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00CA(0x0002) MISSED OFFSET
	struct FName                                       LastPhaseName;                                            // 0x00CC(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPhaseActive;                                             // 0x00D4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPhaseRuleComponent");
		return ptr;
	}


	void SetTeamType(class AKSTeamState* Team, EExtractionTeamType TeamType);
	void SetTeamIntraScoreGoal(class AKSTeamState* Team, int Value);
	void SetTeamIntraScore(class AKSTeamState* Team, int Value);
	void SetGameModePhaseTime(float TimeSeconds, bool bCallTimerHasExpiredIfZero);
	void SetGameModePhaseNameAndTimer(const struct FName& NewPhaseName, float InTimerDuration, bool bCallTimerHasExpiredIfZero);
	void SetGameModePhaseName(const struct FName& NewPhaseName);
	void ResetTicketsForTeam(class AKSTeamState* Team, bool bToZero);
	void PhaseTimerExpired(const struct FName& PhaseName);
	void OnPhaseTimerExpired(const struct FName& PhaseName);
	void OnPhaseStarted(const struct FName& PhaseName, float TimeSeconds);
	void OnObjectiveSpawned(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveReset(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveHeld(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveExploded(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDropped(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDisarming(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDisarmed(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveDeactivated(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveContested(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveArming(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnObjectiveArmed(const TScriptInterface<class UKSObjective>& GameObjective);
	void OnGameObjectiveStateChanged(const TScriptInterface<class UKSObjective>& GameObjective);
	bool IsPhaseActive();
	void HandleTeamSidesFlipped();
	void HandlePhaseStarted();
	void HandlePhaseInterrupted();
	void GivePointsToTeam(class AKSTeamState* Team, int Points);
	bool GiveIntraPointsToTeam(class AKSTeamState* Team, int Points, bool bUseScoreScalar);
	class AKSGameState_Modular* GetGameStateModular();
	float GetGameModeRemainingPhaseTime();
	class AKSGameMode_Modular* GetGameModeModular();
	struct FName GetCurrentGamePhase();
	void CompletePhase(class AKSTeamState* LeadingTeam);
	void ChangeTicketsForTeam(class AKSTeamState* Team, int Count);
};


// Class Killstreak.KSPhysicsAssetUtilities
// 0x0000 (0x0028 - 0x0028)
class UKSPhysicsAssetUtilities : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPhysicsAssetUtilities");
		return ptr;
	}


	static bool RemovePhysicsAsset(class USkeletalMeshComponent* Mesh, class UPhysicsAsset* PhysicsAsset);
	static bool AppendPhysicsAsset(class USkeletalMeshComponent* Mesh, class UPhysicsAsset* PhysicsAsset, const struct FName& CollisionProfileName, bool SimulatePhysics, TArray<int>* OutNewBodyIndices);
};


// Class Killstreak.KSPingBeaconBase
// 0x0018 (0x0238 - 0x0220)
class AKSPingBeaconBase : public AActor
{
public:
	class UDataTable*                                  ContextualPingTypesDT;                                    // 0x0220(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerState*                              PlayerOwner;                                              // 0x0228(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0230(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPingBeaconBase");
		return ptr;
	}


	void SetupBeaconDisplay();
	void PingRemoved(int PingId, class AKSPlayerState* OwningPlayer);
	struct FLinearColor GetPingColorForBeacon();
	bool FindRowByType(EPingType PingType, struct FContextualPingTypesRow* ContextualPingRow);
};


// Class Killstreak.KSPingManager
// 0x0480 (0x0530 - 0x00B0)
class UKSPingManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPingFailureDel;                                         // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingAdded;                                              // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingRemoved;                                            // 0x00D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingChanged;                                            // 0x00E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSentVoiceLineOnly;                                      // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingAdded;                                          // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingRemoved;                                        // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSelfPingChanged;                                        // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FPingInfoChangeList                         ReplicatedPings;                                          // 0x0130(0x0120) (CPF_Net, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FPingInfo>                           LocallyPredictedPings;                                    // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EPingType, float>                             PingLifetimes;                                            // 0x0260(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EPingType, class UClass*>                     PingBeaconTypes;                                          // 0x02B0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	TMap<EPingType, int>                               MaxPingsForType;                                          // 0x0300(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EPingType, struct FVector_NetQuantize>        PingIconOffsets;                                          // 0x0350(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisplaySelfPingsOnNameplate;                             // 0x03A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWorldSelfPingsFollowPlayer;                              // 0x03A1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4E];                                      // 0x03A2(0x004E) MISSED OFFSET
	float                                              MaxPingDistance;                                          // 0x03F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CachedHoveredActorResetTime;                              // 0x03F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSPingBeaconBase*>                   ActiveBeacons;                                            // 0x03F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowPingRemoval;                                        // 0x0408(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	TMap<EPingType, class UAkAudioEvent*>              PingAudioCues;                                            // 0x0410(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0460(0x0008) MISSED OFFSET
	class AKSGameState_RoundGame*                      CachedRoundState;                                         // 0x0468(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSPlayerController*                         CachedOwner;                                              // 0x0470(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSTeamState*                                CachedTeam;                                               // 0x0478(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0480(0x0028) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       CachedHoveredActor;                                       // 0x04A8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x04B8(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       FullmapDisplayWidget;                                     // 0x04E0(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       OverlayDisplayWidget;                                     // 0x0508(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPingManager");
		return ptr;
	}


	void UpdateCachedHoveredActor(class AActor* NewCachedHoveredActor);
	void ShowOutline(class AActor* OutlinedActor);
	void ServerSendVoiceLineOnly(EPingMessage PingMessage);
	void ServerRemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	void ServerPingRequest(const struct FPingInfo& PingInfo);
	void ServerChangePing(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	void ResetCachedHoveredActor();
	void RemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	bool RemoveInternalPingInfo(int NewPingId, class AKSPlayerState* NewCreatingPlayer);
	bool RemoveHoveredPing(int PingId, class AKSPlayerState* PingingPlayer);
	void OnPingExpired(const struct FPingInfo& ExpiringPing);
	bool IsThrottled();
	bool IsSelfPing(EPingType PingType);
	bool IsInvisiblePingType(EPingType PingType);
	void HideOutline(class AActor* OutlinedActor);
	TArray<EPingType> GetPingTypesToCheck(EPingType PingType);
	float GetPingLifetimes(EPingType PingType);
	bool GetPingInfoByIdAndPlayer(int PingId, class AKSPlayerState* PingingPlayer, struct FPingInfo* OutPingInfo);
	int GetPingIdForDisplayId(int DisplayId, class AKSPlayerState* CreatingPlayer);
	int GetDisplayIdForPingId(int PingId, class AKSPlayerState* CreatingPlayer);
	void GameRoundOver(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	bool DoesWorldSelfPingFollowPlayer();
	void ClientPingRejected(EPingFailedType Reason, int PingId);
	void ClearPingsOfType(EPingType PingType);
	void ClearAllPingsForPlayer();
	bool CheckIfFriendlyCharacter(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter);
	bool CheckIfEnemyCharacter(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter);
	bool CheckIfDeployable(class AActor* ActorToCheck, class AKSCharacter* PlayerCharacter, bool bMustBeEnemyDeployable);
	void ChangePing(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	void AttemptRemovePing(int PingId, class AKSPlayerState* PingingPlayer);
	void AttemptPing2D(const struct FVector2D& WorldLocation2D);
	void AttemptManualPing(EPingType PingType, EPingMessage PingMessage, class AActor* PingedActor, bool bRemoveOtherPingsOfType);
	void AttemptContextualPing(bool DoubleClick);
	void AttemptCommunicationPing(EPingType PingType, EPingMessage PingMessage);
	void AddPing(const struct FPingInfo& PingInfo);
	void AddInternalPingInfo(int NewPingId, int NewDisplayId, class AKSPlayerState* NewCreatingPlayer);
	void AddHoveredPing(int PingId, class AKSPlayerState* PingingPlayer);
};


// Class Killstreak.KSPlayerActivityInstanceContainer
// 0x0058 (0x0080 - 0x0028)
class UKSPlayerActivityInstanceContainer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TMap<struct FInventoryId, class UKSActivityInstance*> ActivityInstances;                                        // 0x0030(0x0050) (CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerActivityInstanceContainer");
		return ptr;
	}

};


// Class Killstreak.KSPlayerCameraManager
// 0x0030 (0x27D0 - 0x27A0)
class AKSPlayerCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x27A0(0x0028) MISSED OFFSET
	int                                                ThermalScopePPCount;                                      // 0x27C8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x27CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerCameraManager");
		return ptr;
	}

};


// Class Killstreak.KSPlayerChallengesManager
// 0x0070 (0x0280 - 0x0210)
class UKSPlayerChallengesManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerChallengesReady;                                  // 0x0218(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerChallengesChanged;                                // 0x0228(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDailyChallengeTimerChanged;                       // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               ChallengesReady;                                          // 0x0248(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    TestPlayerChallengeComplete;                              // 0x0250(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0260(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLoginRewardClaimed;                                     // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerChallengesManager");
		return ptr;
	}


	bool SaveSeenChallenges(TArray<class UKSActivityInstance*> SeenChallenges);
	void RequestNewChallenge();
	void OnDailyChallengeTimerRefresh(const struct FInventoryId& InventoryTypeId);
	void OnChallengeProgressUpdated(const struct FInventoryTypeId& InventoryTypeId);
	bool GetUnseenChallenges(bool UnlockedOnly, TArray<class UKSActivityInstance*>* OutActivityInstances);
	int GetSecondsTillNewDailyChallenge();
	TMap<int, class UKSActivityInstance*> GetNewDailyChallengesRelativeTo(TArray<class UKSActivityInstance*> PriorList);
};


// Class Killstreak.KSPlayerInfo
// 0x0020 (0x00A0 - 0x0080)
class UKSPlayerInfo : public UPUMG_PlayerInfo
{
public:
	struct FScriptMulticastDelegate                    OnPlayerStatusChanged;                                    // 0x0080(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0090(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerInfo");
		return ptr;
	}


	void ViewExternalProfile();
	void ToggleDND();
	bool ShouldShowViewGamercardForPlayer();
	bool ShouldShowViewExternalProfile();
	bool ShouldShowInviteToPartyForPlayer();
	bool ShouldShowCrossplayIconForPlayer();
	bool IsSuggestedFriend();
	bool IsSamePortalAsLocalPlayer();
	bool IsRoCoFriend();
	bool IsRequestingFriend();
	bool IsPlayingThisGame();
	bool IsPendingFriend();
	bool IsOnline();
	bool IsMuted();
	bool IsInVoiceChannel();
	bool IsInQueue();
	bool IsInMatch();
	bool IsInLocalParty();
	bool IsInLobby();
	bool IsFriend();
	bool IsDND();
	bool InviteToParty(struct FText* OutErrorText);
	bool HasPortalRelationship();
	bool HasPortalInfoForClientPortal();
	bool HasHRRelationship();
	bool HasDeserter();
	struct FText GetStatusMessage();
	struct FText GetRichPresenceText();
	int GetRankedLevelProgress(int QueueId);
	int GetRankedLevel(int QueueId);
	int GetQuantityForItem(int ItemId);
	EKSPlayerInputType GetPlayerSelectedInputType();
	bool GetPlayersDisplayedSkin(class UKSItem** SkinItem);
	EKSPlatformType GetPlayerPlatformType();
	EKSPlayerOnlineStatus GetPlayerOnlineStatus(bool bAllowPartyStatus, bool bAllowFriendRequestStatus);
	int GetPlayerLevel();
	TArray<struct FPlayerAlias> GetPlayerAliases();
	bool GetEquippedAccountItem(EPlayerAccountSlot eSlot, class UKSItem** EquippedItem);
	int GetDurationForItem(int ItemId);
	int GetDeserterPenaltySeconds();
	bool CanBeSpectated();
	bool CanBeChallenged();
};


// Class Killstreak.KSPlayerInputDefault
// 0x0050 (0x0078 - 0x0028)
class UKSPlayerInputDefault : public UObject
{
public:
	TArray<struct FSettingConfigPair>                  SettingsConfig;                                           // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSInputActionNameTypePair>          KSInputActionNameTypePairs;                               // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSInputActionTiedNames>             KSInputActionTiedNames;                                   // 0x0048(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSCustomInputActionKey>             CustomInputActionKeys;                                    // 0x0058(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSCustomInputAxisKey>               CustomInputAxisKeys;                                      // 0x0068(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerInputDefault");
		return ptr;
	}

};


// Class Killstreak.KSPlayerInput
// 0x0310 (0x1640 - 0x1330)
class UKSPlayerInput : public UPGame_PlayerInput
{
public:
	TMap<struct FString, struct FString>               SavedSettingsConfig;                                      // 0x1330(0x0050) (CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xF4];                                      // 0x1380(0x00F4) MISSED OFFSET
	struct FVector2D                                   GamepadLookAcceleration;                                  // 0x1474(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinMouseSenseScaling;                                     // 0x147C(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxMouseSenseScaling;                                     // 0x1480(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TouchLookSensitivityADS;                                  // 0x1484(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x1488(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKeyMappingsUpdated;                                     // 0x1490(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, struct FKSCustomInputActionKeyMappings> KSCustomActionKeyMappings;                                // 0x14A0(0x0050) (CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x50];                                      // 0x14F0(0x0050) MISSED OFFSET
	TMap<struct FName, struct FKSCustomInputAxisKeyMappings> KSCustomAxisKeyMappings;                                  // 0x1540(0x0050) (CPF_Config, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x50];                                      // 0x1590(0x0050) MISSED OFFSET
	class UClass*                                      KSLeftAnalogStickFilterClass;                             // 0x15E0(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      KSRightAnalogStickFilterClass;                            // 0x15E8(0x0008) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSAnalogStickFilter*                        LeftAnalogStickFilter;                                    // 0x15F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x10];                                      // 0x15F8(0x0010) MISSED OFFSET
	class UKSAnalogStickFilter*                        RightAnalogStickFilter;                                   // 0x1608(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x10];                                      // 0x1610(0x0010) MISSED OFFSET
	struct FSoftObjectPath                             TouchRegionDeltaAxisAssistMultiplierCurvePath;            // 0x1620(0x0018) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 TouchRegionDeltaAxisAssistMultiplierCurve;                // 0x1638(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerInput");
		return ptr;
	}


	bool DoesInputTypeSupportChords(EKSInputType InputType);
};


// Class Killstreak.KSPlayerInventoryHelper
// 0x00A0 (0x01B8 - 0x0118)
class UKSPlayerInventoryHelper : public UPUMG_PlayerInventoryHelper
{
public:
	TMap<struct FInventoryId, struct FScriptMulticastDelegate> DynamicCallbacksPerInventoryId;                           // 0x0118(0x0050) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FInventoryTypeId, struct FScriptMulticastDelegate> DynamicCallbacksPerInventoryTypeId;                       // 0x0168(0x0050) (CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerInventoryHelper");
		return ptr;
	}


	void RemoveAllItemUpdatedCallbacks(const struct FScriptDelegate& Callback);
	void RemoveAllItemTypeUpdatedCallbacks(const struct FScriptDelegate& Callback);
	int GetCountByType(int ItemTypeId, int ItemSubTypeId, class AKSPlayerController* Player);
	int GetCount(int64_t ItemId, class AKSPlayerController* Player);
	struct FDateTime GetAcquiredTime(int64_t ItemId, class AKSPlayerController* Player);
	void AddItemUpdatedCallback(const struct FScriptDelegate& Callback, int64_t ItemId, class AKSPlayerController* Player);
	void AddItemTypeUpdatedCallback(const struct FScriptDelegate& Callback, int ItemTypeId, int ItemSubTypeId, class AKSPlayerController* Player);
};


// Class Killstreak.KSPlayerMod
// 0x00E0 (0x0310 - 0x0230)
class UKSPlayerMod : public UKSItem
{
public:
	bool                                               bIsPerk;                                                  // 0x0230(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBePickup;                                             // 0x0231(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0232(0x0006) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       FunctionalClass;                                          // 0x0238(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInstanceReplicated;                                    // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	int                                                ModUnlockTier;                                            // 0x0264(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EModInterferenceType                               AttachmentInteraction;                                    // 0x0268(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSingleInstanceStack;                                     // 0x0269(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStacksPerInstigator;                                     // 0x026A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x026B(0x0001) MISSED OFFSET
	int                                                MaxStackCount;                                            // 0x026C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EPlayerModType                                     ModType;                                                  // 0x0270(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldAssist;                                            // 0x0271(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0272(0x0006) MISSED OFFSET
	struct FGameplayTagContainer                       EffectCategories;                                         // 0x0278(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               TriggerEvents;                                            // 0x0298(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FName, int>                            AnimEventPriorityMap;                                     // 0x02A8(0x0050) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         RemovesFromLoadout;                                       // 0x02F8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLerpModifiers;                                           // 0x0308(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldLagCompensateEffects;                              // 0x0309(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x6];                                       // 0x030A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod");
		return ptr;
	}


	bool ShouldLerpModifiers();
	bool ShouldLagCompensateEffects();
	bool IsSingleInstanceStack();
	bool IsPerk();
	bool IsModTemporary();
	bool IsInstanceReplicated();
	TArray<struct FName> GetTriggerEvents();
	bool GetPerkCategory(class UPerkCategory** FoundPerkCategory);
	int GetModUnlockTier();
	EPlayerModType GetModType();
	EModInterferenceType GetModInteraction();
	int GetMaxStackCount();
	TSoftObjectPtr<class UClass> GetFunctionalClass();
	struct FGameplayTagContainer GetEffectCategories();
};


// Class Killstreak.KSPlayerMod_Accuracy
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_Accuracy : public UKSPlayerMod
{
public:
	float                                              BaseAccuracyMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Accuracy");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ActionRestrictor
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_ActionRestrictor : public UKSPlayerMod
{
public:
	bool                                               bRestrictSprint;                                          // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bRestrictDodgeRoll;                                       // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bRestrictMantleAndVault;                                  // 0x0312(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bRestrictQuickMelee;                                      // 0x0313(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bRestrictGadgetUse;                                       // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bRestrictInteracting;                                     // 0x0315(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0316(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ActionRestrictor");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Activated
// 0x0068 (0x0378 - 0x0310)
class UKSPlayerMod_Activated : public UKSPlayerMod
{
public:
	bool                                               bIsCharacterAbility;                                      // 0x0310(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0311(0x0003) MISSED OFFSET
	int                                                RequiredCharge;                                           // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MaximumCharge;                                            // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DefaultCharge;                                            // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRemoveIfExhausted;                                       // 0x0320(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0321(0x0003) MISSED OFFSET
	float                                              RefundFactor;                                             // 0x0324(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasLockout;                                              // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	float                                              LockoutTime;                                              // 0x032C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFullChargeOnRoundStart;                                  // 0x0330(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFullChargeOnReceipt;                                     // 0x0331(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActivateBeforeRoundStart;                             // 0x0332(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreNoFireZone;                                        // 0x0333(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEndOnDown;                                               // 0x0334(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEndOnDeath;                                              // 0x0335(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0336(0x0002) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         BuffsGivenOnActivation;                                   // 0x0338(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bKeepsTeamAliveIfUsable;                                  // 0x0348(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bKeepsTeamAliveIfActive;                                  // 0x0349(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x034A(0x0002) MISSED OFFSET
	float                                              AbilitySetupDuration;                                     // 0x034C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSetupLagCompensation;                                    // 0x0350(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	float                                              AbilityDuration;                                          // 0x0354(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCapBonusDuration;                                        // 0x0358(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0359(0x0003) MISSED OFFSET
	float                                              AbilityEndWarningTime;                                    // 0x035C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AbilityRecoveryDuration;                                  // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSelectableNormally;                                      // 0x0364(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSelectableWhileDowned;                                   // 0x0365(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0366(0x0002) MISSED OFFSET
	float                                              ChargePerSecond;                                          // 0x0368(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ChargePerHundredPoints;                                   // 0x036C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      CameraShake;                                              // 0x0370(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Activated");
		return ptr;
	}


	bool ShouldRemoveIfExhausted();
	bool ShouldCapBonusDuration();
	int GetRequiredCharge();
	float GetRefundFactor();
	int GetMaximumCharge();
	int GetDefaultCharge();
	TArray<TSoftObjectPtr<class UKSPlayerMod>> GetBuffs();
	float GetAbilitySetupDuration();
	float GetAbilityRecoveryDuration();
	float GetAbilityEndWarningTime();
	float GetAbilityDuration();
};


// Class Killstreak.KSPlayerMod_ActivatedTarget
// 0x0010 (0x0388 - 0x0378)
class UKSPlayerMod_ActivatedTarget : public UKSPlayerMod_Activated
{
public:
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         TargetBuffsGivenOnActivation;                             // 0x0378(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ActivatedTarget");
		return ptr;
	}


	TArray<TSoftObjectPtr<class UKSPlayerMod>> GetTargetBuffs();
};


// Class Killstreak.KSPlayerMod_ActivationConfig
// 0x0000 (0x0378 - 0x0378)
class UKSPlayerMod_ActivationConfig : public UKSPlayerMod_Activated
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ActivationConfig");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_AdjustCashRewards
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_AdjustCashRewards : public UKSPlayerMod
{
public:
	int                                                BonusCashPerDown;                                         // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_AdjustCashRewards");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_AdsMoveSpeed
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_AdsMoveSpeed : public UKSPlayerMod
{
public:
	float                                              AdsMoveSpeedMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_AdsMoveSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Aim
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_Aim : public UKSPlayerMod
{
public:
	bool                                               AimLocked;                                                // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CrosshairHidden;                                          // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0312(0x0002) MISSED OFFSET
	float                                              SensitivityMultiplier;                                    // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Aim");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_AngleConfig
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_AngleConfig : public UKSPlayerMod
{
public:
	float                                              AngleThreshold;                                           // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseDistance;                                             // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	float                                              DistanceThreshold;                                        // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x031C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_AngleConfig");
		return ptr;
	}


	bool CheckDistanceAndAngleFromEnemies(class AKSCharacter* InCharacter, bool bWithinDistance, bool bWithinAngle, bool bCheckLOS, bool bIgnoreDeadEnemies, bool* bInLOS);
	bool CheckDistanceAndAngle(class UObject* WorldContextObject, TArray<class AActor*> IgnoredActors, const struct FVector& start, const struct FVector& end, const struct FVector& DirectionToCheck, bool bWithinDistance, bool bWithinAngle, bool bCheckLOS, bool* bInLOS);
	bool CheckAngle(const struct FVector& Direction1, const struct FVector& Direction2, bool bWithinAngle);
};


// Class Killstreak.KSPlayerMod_ApplyModOnEvent
// 0x0018 (0x0328 - 0x0310)
class UKSPlayerMod_ApplyModOnEvent : public UKSPlayerMod
{
public:
	float                                              ModDuration;                                              // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         ModsToGiveOnEvent;                                        // 0x0318(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ApplyModOnEvent");
		return ptr;
	}


	void RemoveModInstances(class AKSPlayerState* ModOwner, TArray<class UKSPlayerModInstance*> ModInstancesToRemove);
	float GetModDuration();
	TArray<class UKSPlayerModInstance*> ApplyMod(class AKSPlayerState* ModOwner);
};


// Class Killstreak.KSPlayerMod_Blind
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_Blind : public UKSPlayerMod
{
public:
	bool                                               IsBlind;                                                  // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0311(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Blind");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_CarryDownedAllies
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_CarryDownedAllies : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_CarryDownedAllies");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Charge
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_Charge : public UKSPlayerMod
{
public:
	bool                                               bIsMultiplier;                                            // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0311(0x0003) MISSED OFFSET
	float                                              ChargeMultiplier;                                         // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsDiscount;                                              // 0x0318(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0319(0x0003) MISSED OFFSET
	int                                                ChargeDiscount;                                           // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Charge");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_DamageDealt
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_DamageDealt : public UKSPlayerMod
{
public:
	float                                              DamageDealtMultiplier;                                    // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlowedDamageDealtMultiplier;                              // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DeployableDamageDealtMultiplier;                          // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x031C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DamageDealt");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_DamageTaken
// 0x00D0 (0x03E0 - 0x0310)
class UKSPlayerMod_DamageTaken : public UKSPlayerMod
{
public:
	TArray<EDamageCategory>                            AffectedDamageCategories;                                 // 0x0310(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EHitLocationType>                           AffectedHitLocations;                                     // 0x0320(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DamageTakenMultiplier;                                    // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UParticleSystem>              DamageTakenParticle;                                      // 0x0338(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ReducesAgentsDamageTaken;                                 // 0x0360(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ImmuneToNonDamageEffects;                                 // 0x0361(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               NotifyDamageReduction;                                    // 0x0362(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0363(0x0005) MISSED OFFSET
	TSoftObjectPtr<class UAkAudioEvent>                HitBodyAudioEvent;                                        // 0x0368(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>                HitHeadAudioEvent;                                        // 0x0390(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>                HitByAudioEvent;                                          // 0x03B8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DamageTaken");
		return ptr;
	}


	TArray<EDamageCategory> GetAffectedDamageCategories();
};


// Class Killstreak.KSPlayerMod_DodgeRollDamageTaken
// 0x0000 (0x03E0 - 0x03E0)
class UKSPlayerMod_DodgeRollDamageTaken : public UKSPlayerMod_DamageTaken
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DodgeRollDamageTaken");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_DodgeRollLockout
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_DodgeRollLockout : public UKSPlayerMod
{
public:
	float                                              LockoutTimeMultiplier;                                    // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DodgeRollLockout");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_DownedHack
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_DownedHack : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DownedHack");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_DownedRoll
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_DownedRoll : public UKSPlayerMod
{
public:
	float                                              CooldownMultiplier;                                       // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceMultiplier;                                       // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedMultiplier;                                          // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AdditionalDownedHealth;                                   // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_DownedRoll");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_EffectImmunity
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_EffectImmunity : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_EffectImmunity");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_FullSpeedADS
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_FullSpeedADS : public UKSPlayerMod
{
public:
	float                                              FullSpeedAlpha;                                           // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_FullSpeedADS");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Gadget
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_Gadget : public UKSPlayerMod
{
public:
	float                                              GadgetThrowSpeedMutliplier;                               // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GadgetInnerRadiusMultiplier;                              // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GadgetOuterRadiusMutliplier;                              // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              GadgetFXSizeMultiplier;                                   // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Gadget");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_GiveEquipPoints
// 0x0020 (0x0330 - 0x0310)
class UKSPlayerMod_GiveEquipPoints : public UKSPlayerMod
{
public:
	struct FGameplayTagContainer                       EquipPointsToGive;                                        // 0x0310(0x0020) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_GiveEquipPoints");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_GiveItemOnActivation
// 0x0038 (0x03B0 - 0x0378)
class UKSPlayerMod_GiveItemOnActivation : public UKSPlayerMod_Activated
{
public:
	TSoftObjectPtr<class UKSItem>                      GivenItem;                                                // 0x0378(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UKSItem>>              GivenItems;                                               // 0x03A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_GiveItemOnActivation");
		return ptr;
	}


	TSoftObjectPtr<class UKSItem> GetGivenItem(int Index);
};


// Class Killstreak.KSPlayerMod_GiveItemOnEvent
// 0x0028 (0x0338 - 0x0310)
class UKSPlayerMod_GiveItemOnEvent : public UKSPlayerMod
{
public:
	TSoftObjectPtr<class UKSItem>                      ItemToGive;                                               // 0x0310(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_GiveItemOnEvent");
		return ptr;
	}


	void GiveItem(class AKSCharacter* ModOwner, const struct FScriptDelegate& GivenToEvent);
	TSoftObjectPtr<class UKSItem> GetItemToGive();
};


// Class Killstreak.KSPlayerMod_GiveWeaponConfig
// 0x0010 (0x03C0 - 0x03B0)
class UKSPlayerMod_GiveWeaponConfig : public UKSPlayerMod_GiveItemOnActivation
{
public:
	float                                              Radius;                                                   // 0x03B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanActivateInAir;                                        // 0x03B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03B5(0x0003) MISSED OFFSET
	float                                              ReclaimCharge;                                            // 0x03B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                AllowedActiveDeployableCount;                             // 0x03BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_GiveWeaponConfig");
		return ptr;
	}


	float GetReclaimCharge();
	float GetRadius();
	int GetAllowedActiveDeployableCount();
	bool CanActivateInAir();
};


// Class Killstreak.KSPlayerMod_GlobalMoveSpeed
// 0x0028 (0x0338 - 0x0310)
class UKSPlayerMod_GlobalMoveSpeed : public UKSPlayerMod
{
public:
	float                                              GlobalMoveSpeedMultiplier;                                // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSprintOverride;                                          // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	float                                              GlobalSprintSpeedMultiplier;                              // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDodgeRollOverride;                                       // 0x031C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x031D(0x0003) MISSED OFFSET
	float                                              GlobalDodgeRollSpeedMultiplier;                           // 0x0320(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCrouchOverride;                                          // 0x0324(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0325(0x0003) MISSED OFFSET
	float                                              GlobalCrouchSpeedMultiplier;                              // 0x0328(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CanSprintWhenAffected;                                    // 0x032C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CanDodgeRollWhenAffected;                                 // 0x032D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x2];                                       // 0x032E(0x0002) MISSED OFFSET
	float                                              LerpGoal;                                                 // 0x0330(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0334(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_GlobalMoveSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Hacking
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_Hacking : public UKSPlayerMod
{
public:
	float                                              HackSpeedMultiplier;                                      // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DehackSpeedMultiplier;                                    // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Hacking");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_HardLandAvoid
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_HardLandAvoid : public UKSPlayerMod
{
public:
	bool                                               AllowBunnyHopping;                                        // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0311(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HardLandAvoid");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_HealOnEvent
// 0x0020 (0x0330 - 0x0310)
class UKSPlayerMod_HealOnEvent : public UKSPlayerMod
{
public:
	bool                                               bHealUpTo;                                                // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHealAsPercentage;                                        // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0312(0x0002) MISSED OFFSET
	float                                              HealthPercentage;                                         // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealthAmount;                                             // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealDelay;                                                // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealPeriod;                                               // 0x0320(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                HealTickCount;                                            // 0x0324(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstTickImmediately;                                    // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HealOnEvent");
		return ptr;
	}


	bool GetHealUpTo();
	int GetHealTickCount();
	float GetHealthPercentage();
	float GetHealthAmount();
	float GetHealPeriod();
	float GetHealDelay();
	bool GetHealAsPercentage();
	bool GetFirstTickImmediately();
	void ApplyOverheal(class AKSCharacter* CharacterToHeal, class AKSCharacter* Healer);
	void ApplyHeal(class AKSCharacter* CharacterToHeal, class AKSCharacter* Healer);
};


// Class Killstreak.KSPlayerMod_HealthRegeneration
// 0x0018 (0x0328 - 0x0310)
class UKSPlayerMod_HealthRegeneration : public UKSPlayerMod
{
public:
	float                                              HealthRegenerationPerSecondAdded;                         // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Priority_HealthRegenerationPerSecondAdded;                // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealthRegenerationDelayAdded;                             // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Priority_HealthRegenerationDelayAdded;                    // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ShouldAllowHealthRegen;                                   // 0x0320(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0321(0x0003) MISSED OFFSET
	int                                                Priority_ShouldAllowHealthRegen;                          // 0x0324(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HealthRegeneration");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_HideFromTeam
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_HideFromTeam : public UKSPlayerMod
{
public:
	bool                                               bHideFriendlyStencil;                                     // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNoFriendlyDrone;                                         // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0312(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HideFromTeam");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_HideTarget
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_HideTarget : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HideTarget");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_HipfireSprint
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_HipfireSprint : public UKSPlayerMod
{
public:
	bool                                               bCanHipfireSprint;                                        // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanReloadSprint;                                         // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0312(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_HipfireSprint");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_InteractDamageTaken
// 0x0000 (0x03E0 - 0x03E0)
class UKSPlayerMod_InteractDamageTaken : public UKSPlayerMod_DamageTaken
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_InteractDamageTaken");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_KeepTeamAlive
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_KeepTeamAlive : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_KeepTeamAlive");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_MainCameraFov
// 0x0038 (0x0348 - 0x0310)
class UKSPlayerMod_MainCameraFov : public UKSPlayerMod
{
public:
	float                                              FieldOfViewOverride;                                      // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintFovOverride;                                        // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraBoomLengthBonus;                                    // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SprintCameraBoomLengthBonus;                              // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       SprintCameraShakeOverride;                                // 0x0320(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_MainCameraFov");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_MedPackSpeed
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_MedPackSpeed : public UKSPlayerMod
{
public:
	float                                              MedPackSpeedMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_MedPackSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_MedPackWhileMoving
// 0x0000 (0x0310 - 0x0310)
class UKSPlayerMod_MedPackWhileMoving : public UKSPlayerMod
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_MedPackWhileMoving");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_MeleeAttackSpeed
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_MeleeAttackSpeed : public UKSPlayerMod
{
public:
	float                                              MeleeAttackSpeedMultiplier;                               // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_MeleeAttackSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_MeleeMoveSpeed
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_MeleeMoveSpeed : public UKSPlayerMod
{
public:
	float                                              MeleeMoveSpeedMultiplier;                                 // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_MeleeMoveSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Omniscience
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_Omniscience : public UKSPlayerMod
{
public:
	float                                              MinimapZoomModifier;                                      // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Omniscience");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_OnDownOtherEvent
// 0x00B0 (0x03C0 - 0x0310)
class UKSPlayerMod_OnDownOtherEvent : public UKSPlayerMod
{
public:
	TMap<TSoftObjectPtr<class UClass>, int>            MeleeChargeBonusModePairs;                                // 0x0310(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                MeleeChargeBonusDefault;                                  // 0x0360(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	TMap<TSoftObjectPtr<class UClass>, int>            HeadshotChargeBonusModePairs;                             // 0x0368(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                HeadshotChargeBonusDefault;                               // 0x03B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_OnDownOtherEvent");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_PickupRange
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_PickupRange : public UKSPlayerMod
{
public:
	float                                              PickupRadius;                                             // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PickupCylinderRadius;                                     // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CompleteRadiusOverride;                                   // 0x0318(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0319(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_PickupRange");
		return ptr;
	}


	float GetPickupRadius();
};


// Class Killstreak.KSPlayerMod_PingOnOtherDowned
// 0x0048 (0x0358 - 0x0310)
class UKSPlayerMod_PingOnOtherDowned : public UKSPlayerMod
{
public:
	int                                                NumberOfPings;                                            // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                NumberOfEnemiesToPing;                                    // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ShouldPingDownedPlayer;                                   // 0x0318(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0319(0x0003) MISSED OFFSET
	float                                              SecondsToRevealPingedEnemies;                             // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PingPeriod;                                               // 0x0320(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              PingRadius;                                               // 0x0324(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PingAllEnemyTeams;                                        // 0x0328(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               BroadcastPingToAllies;                                    // 0x0329(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               DelayPingPastDownImmune;                                  // 0x032A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x032B(0x0005) MISSED OFFSET
	TSoftObjectPtr<class UParticleSystem>              EmitterTemplate;                                          // 0x0330(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_PingOnOtherDowned");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ProjectileDamage
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_ProjectileDamage : public UKSPlayerMod
{
public:
	float                                              BounceDamageMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ProjectileDamage");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ReloadAndRetrieve
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_ReloadAndRetrieve : public UKSPlayerMod
{
public:
	float                                              RetrieveTimeMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ReloadTimeMultiplier;                                     // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ReloadAndRetrieve");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ReloadTime
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_ReloadTime : public UKSPlayerMod
{
public:
	float                                              ReloadTimeMultiplier;                                     // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ReloadTime");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_RetrieveTime
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_RetrieveTime : public UKSPlayerMod
{
public:
	float                                              RetrieveTimeMultiplier;                                   // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_RetrieveTime");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_RevealTarget
// 0x0030 (0x0340 - 0x0310)
class UKSPlayerMod_RevealTarget : public UKSPlayerMod
{
public:
	struct FKSRevealInfo                               RevealParameters;                                         // 0x0310(0x0030) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_RevealTarget");
		return ptr;
	}


	struct FKSRevealInfo GetRevealParameters();
};


// Class Killstreak.KSPlayerMod_Revive
// 0x0030 (0x0340 - 0x0310)
class UKSPlayerMod_Revive : public UKSPlayerMod
{
public:
	float                                              ReviveTimeMultiplier;                                     // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasTextOverride;                                         // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	struct FText                                       ReviveText;                                               // 0x0318(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FName                                       ReviveInteractionMode;                                    // 0x0330(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HealChargeMultiplier;                                     // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x033C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Revive");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ReviverDamageTaken
// 0x0008 (0x03E8 - 0x03E0)
class UKSPlayerMod_ReviverDamageTaken : public UKSPlayerMod_DamageTaken
{
public:
	bool                                               bCountRemoteRevives;                                      // 0x03E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ReviverDamageTaken");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ShopGroup
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_ShopGroup : public UKSPlayerMod
{
public:
	TArray<struct FShopItemList>                       ShopGroups;                                               // 0x0310(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ShopGroup");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_ShowTeamHovers
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_ShowTeamHovers : public UKSPlayerMod
{
public:
	bool                                               ShowTeamHovers;                                           // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0311(0x0003) MISSED OFFSET
	int                                                Priority_ShowTeamHovers;                                  // 0x0314(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HoverCharacterLingerExtraTime;                            // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Priority_HoverCharacterLingerExtraTime;                   // 0x031C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_ShowTeamHovers");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_SprintSpeed
// 0x0008 (0x0318 - 0x0310)
class UKSPlayerMod_SprintSpeed : public UKSPlayerMod
{
public:
	float                                              SprintSpeedMultiplier;                                    // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0314(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_SprintSpeed");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_StartingEquipment
// 0x0028 (0x0338 - 0x0310)
class UKSPlayerMod_StartingEquipment : public UKSPlayerMod
{
public:
	TSoftObjectPtr<class UKSItem>                      EquipmentAsset;                                           // 0x0310(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_StartingEquipment");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_StartEquipNoFlinch
// 0x0000 (0x0338 - 0x0338)
class UKSPlayerMod_StartEquipNoFlinch : public UKSPlayerMod_StartingEquipment
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_StartEquipNoFlinch");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_Undetectable
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_Undetectable : public UKSPlayerMod
{
public:
	bool                                               HiddenFromReveals;                                        // 0x0310(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HiddenOnRadar;                                            // 0x0311(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HiddenFromRemoteExplosives;                               // 0x0312(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HiddenFromThermal;                                        // 0x0313(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               HiddenFromShotDetection;                                  // 0x0314(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               AffectsRevealTime;                                        // 0x0315(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0316(0x0002) MISSED OFFSET
	float                                              RevealTimeMultiplier;                                     // 0x0318(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x031C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_Undetectable");
		return ptr;
	}

};


// Class Killstreak.KSPlayerMod_VaultHeight
// 0x0010 (0x0320 - 0x0310)
class UKSPlayerMod_VaultHeight : public UKSPlayerMod
{
public:
	float                                              VaultHeight;                                              // 0x0310(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       VaultName;                                                // 0x0314(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x031C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMod_VaultHeight");
		return ptr;
	}

};


// Class Killstreak.KSPlayerModInst_Omniscience
// 0x0008 (0x01A0 - 0x0198)
class UKSPlayerModInst_Omniscience : public UKSPlayerModInstance
{
public:
	bool                                               bHandleEnemiesOnly;                                       // 0x0198(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0199(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerModInst_Omniscience");
		return ptr;
	}


	void OnNewOtherCharacter(class AKSCharacterBase* InCharacter);
	void HandleNewOtherCharacter(class AKSCharacterBase* InCharacter);
};


// Class Killstreak.KSPlayerModInst_WeaponAttachment
// 0x0048 (0x01E0 - 0x0198)
class UKSPlayerModInst_WeaponAttachment : public UKSPlayerModInstance
{
public:
	TArray<class UKSWeaponAttachment*>                 AttachmentsToGive;                                        // 0x0198(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EItemSourceType>                            ItemSourcesThatAllowAttachmentGiving;                     // 0x01A8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<EItemSourceType>                            ItemSourcesThatForbidAttachmentGiving;                    // 0x01B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAttachmentsPersistOnDrop;                                // 0x01C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C9(0x0007) MISSED OFFSET
	TArray<TWeakObjectPtr<class UKSWeaponAttachmentInstance>> GivenAttachmentInstances;                                 // 0x01D0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerModInst_WeaponAttachment");
		return ptr;
	}


	void WeaponAddedToOwnerInventory(class AKSWeapon* NewWeapon, const struct FGiveItemParameters& InGiveItemParameters);
	void OnAttachmentRemoved(class AKSWeapon* Weapon, class UKSWeaponAttachmentInstance* RemovedInstance);
	void OnAttachmentGivenSuccess(class UKSItem* ItemToGive, class UKSWeaponAttachmentInstance* GivenAttachment, const struct FGiveItemParameters& InGiveItemParameters);
	void OnAttachmentGiven(class UKSItem* ItemToGive, class UObject* GivenObject, const struct FGiveItemParameters& InGiveItemParameters, bool bSuccess);
};


// Class Killstreak.KSWidgetInfoActor
// 0x0028 (0x0248 - 0x0220)
class AKSWidgetInfoActor : public AInfo
{
public:
	TArray<struct FKSWidgetInfoParams>                 WidgetParamsToCreate;                                     // 0x0220(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSPlayerController*                         PlayerForWidget;                                          // 0x0230(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0238(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWidgetInfoActor");
		return ptr;
	}


	void OnHUDSetup();
};


// Class Killstreak.KSPlayerShop
// 0x0340 (0x0588 - 0x0248)
class AKSPlayerShop : public AKSWidgetInfoActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0248(0x0010) MISSED OFFSET
	class AKSPlayerState*                              PlayerState;                                              // 0x0258(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPurchaseAcknowledged;                                   // 0x0260(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRefundAcknowledged;                                     // 0x0270(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopManifestChanged;                                    // 0x0280(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemChanged;                                        // 0x0290(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemPurchased;                                      // 0x02A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemRefunded;                                       // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemActive;                                         // 0x02C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopItemInactive;                                       // 0x02D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopOpened;                                             // 0x02E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopClosed;                                             // 0x02F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              CashPerKSPoint;                                           // 0x0300(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSkipCashSpend;                                           // 0x0304(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDelayApplyPurchases;                                     // 0x0305(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0306(0x0002) MISSED OFFSET
	TArray<struct FShopItem>                           ShopManifest;                                             // 0x0308(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<EShopItemType, struct FShopItemList>          PrerequisiteMap;                                          // 0x0318(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EShopItemType, struct FShopItemList>          RestrictionMap;                                           // 0x0368(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FShopItemList>                       ToggleGroups;                                             // 0x03B8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x50];                                      // 0x03C8(0x0050) MISSED OFFSET
	struct FShopManifest                               ShopManifestMap;                                          // 0x0418(0x0120) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                NextTransactionId;                                        // 0x0538(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0xC];                                       // 0x053C(0x000C) MISSED OFFSET
	bool                                               bShopOpen;                                                // 0x0548(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0549(0x0001) MISSED OFFSET
	bool                                               bShopInitialized;                                         // 0x054A(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayersCanAccessShopWhileDead;                           // 0x054B(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	uint32_t                                           MinimumUndoableTransactionId;                             // 0x054C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerShopHistoryComponent*               PlayerShopHistoryComponent;                               // 0x0550(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAvailable;                                               // 0x0558(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0559(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShopAvailabilityChanged;                                // 0x0560(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnShopOptionsChanged;                                     // 0x0570(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FShopOptions                                ShopOptions;                                              // 0x0580(0x0006) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0586(0x0001) MISSED OFFSET
	bool                                               bDisableShopOnClose;                                      // 0x0587(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShop");
		return ptr;
	}


	void Undo();
	void TryToSetItemActive(EShopItemType ShopItemType, bool bActive);
	void TryToPurchaseItem(EShopItemType ShopItemType);
	void ToggleShop();
	void ServerTryToOpenShop();
	void ServerTryToCloseShop();
	void ServerAttemptRefund(const struct FPlayerShopTransaction& InRefundTransactionInfo, const struct FPlayerShopTransaction& InPurchaseTransactionInfo);
	void ServerAttemptPurchase(const struct FPlayerShopTransaction& InTransactionInfo);
	void ServerAttemptActivate(const struct FPlayerShopTransaction& InTransactionInfo, bool bActivate);
	void ResetManifest();
	void OpenShop();
	void OnRep_ShopOptions();
	void OnRep_ShopOpen();
	void OnRep_bAvailable();
	void OnPlayerSpawned(class AKSPlayerState* InPlayerState, class AKSCharacterBase* Character);
	void OnPlayerScoreChanged(const struct FKSScoreChangeEvent& ScoreEvent);
	void OnPlayerKilled(const struct FCombatEventInfo& EventInfo);
	void OnPlayerJobChanged();
	void OnOwnerDestroyed(class AActor* DestroyedActor);
	void OnAFKTimerRefreshed(class AKSPlayerController* InPlayerController);
	void NotifyShopItemRefunded(const struct FShopItem& ShopItem);
	void NotifyShopItemPurchased(const struct FShopItem& ShopItem);
	void NotifyShopItemInactive(const struct FShopItem& ShopItem);
	void NotifyShopItemChanged(const struct FShopItem& ShopItem);
	void NotifyShopItemActive(const struct FShopItem& ShopItem);
	bool IsShopOpen();
	void InitializeShopItems();
	struct FShopOptions GetShopOptions();
	bool GetShopItemByType(EShopItemType ShopItemType, struct FShopItem* Item);
	bool GetShopAvailability();
	TArray<EShopItemType> GetRestrictionsForType(EShopItemType ShopItemType);
	int GetPriceOfItem(class UKSItem* InItem);
	TArray<EShopItemType> GetPrerequisitesForType(EShopItemType ShopItemType);
	TArray<EShopItemType> GetItemsToDeactivateForType(EShopItemType ShopItemType);
	TArray<EShopItemType> GetDeactivatedItemsForType(EShopItemType ShopItemType);
	void EnableShopForPlayer(class AKSPlayerState* InPlayerState);
	void DisableShopForPlayer(class AKSPlayerState* InPlayerState);
	void CloseShop();
	void ClientRefundAcknowledge(const struct FPlayerShopTransaction& InRefundTransactionInfo, const struct FPlayerShopTransaction& InPurchaseTransactionInfo, bool bSuccess);
	void ClientPurchaseAcknowledge(const struct FPlayerShopTransaction& InTransactionInfo, bool bSuccess);
	void ClientOpenShop();
	void ClientCloseShop();
	bool CanRefundItemNow(EShopItemType ShopItemType);
	bool CanPurchaseItemNow(EShopItemType ShopItemType, bool* bOutAvailable, bool* bCanAfford);
	bool CanPlayersAccessShopWhileDead();
	void ApplyTransactions();
};


// Class Killstreak.KSPlayerShop_Job
// 0x0020 (0x05A8 - 0x0588)
class AKSPlayerShop_Job : public AKSPlayerShop
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0588(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShop_Job");
		return ptr;
	}

};


// Class Killstreak.KSPlayerShop_Custom
// 0x0000 (0x0588 - 0x0588)
class AKSPlayerShop_Custom : public AKSPlayerShop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShop_Custom");
		return ptr;
	}


	void CreateShopManifest();
};


// Class Killstreak.KSPlayerShopHistoryComponent
// 0x0010 (0x00C0 - 0x00B0)
class UKSPlayerShopHistoryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShopHistoryComponent");
		return ptr;
	}


	void ClearTransactionHistory();
};


// Class Killstreak.KSPlayerShopZone
// 0x0020 (0x0240 - 0x0220)
class AKSPlayerShopZone : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnZoneEntered;                                            // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnZoneLeft;                                               // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShopZone");
		return ptr;
	}


	void ZoneLeftByPlayer(class AKSPlayerState* PlayerState);
	void ZoneEnteredByPlayer(class AKSPlayerState* PlayerState);
	void OnPlayerStateDestroyed(class AActor* DestroyedPlayerState);
};


// Class Killstreak.KSPlayerShotListener
// 0x00E0 (0x0190 - 0x00B0)
class UKSPlayerShotListener : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    MinimapShotNofify;                                        // 0x00B0(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x58];                                      // 0x00C0(0x0058) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x0118(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       FullmapDisplayWidget;                                     // 0x0140(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UClass>                       OverlayDisplayWidget;                                     // 0x0168(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerShotListener");
		return ptr;
	}


	void OnKSGameStateDestroyed(class AActor* Actor);
	void ClientRecieveShotInfo(const struct FKSClientShotInfo& ShotInfo);
	void Authority_ProcessShotInfo(const struct FKSGlobalShotInfo& ShotInfo);
};


// Class Killstreak.KSPlayerStart
// 0x0080 (0x02D0 - 0x0250)
class AKSPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0250(0x0010) MISSED OFFSET
	bool                                               bInitialSpawnPoint;                                       // 0x0260(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRespawnPoint;                                            // 0x0261(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0262(0x0002) MISSED OFFSET
	int                                                SideNum;                                                  // 0x0264(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bBotOnly;                                                 // 0x0268(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPlayerOnly;                                              // 0x0269(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECharacterBehaviorState                            InitialBehaviorState;                                     // 0x026A(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseInitialBehaviorOverride;                              // 0x026B(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	ECharacterBehaviorState                            InitialBehaviorStateOverride;                             // 0x026C(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x026D(0x0003) MISSED OFFSET
	TArray<class UKSItem*>                             InventoryToGive;                                          // 0x0270(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             InitialSpawnInventoryToGive;                              // 0x0280(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSItem*>                             RespawnInventoryToGive;                                   // 0x0290(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        ModsToGive;                                               // 0x02A0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        InitialSpawnModsToGive;                                   // 0x02B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPlayerMod*>                        RespawnModsToGive;                                        // 0x02C0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerStart");
		return ptr;
	}


	void SetSideNum(int InSideNum);
	void Init(class AKSCharacter* Character, class AController* Controller);
	int GetSideNum();
	void CharacterLoadoutRestored(class AKSCharacter* Character);
};


// Class Killstreak.KSPlayerStart_Extraction
// 0x0000 (0x02D0 - 0x02D0)
class AKSPlayerStart_Extraction : public AKSPlayerStart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerStart_Extraction");
		return ptr;
	}

};


// Class Killstreak.KSPlayerState
// 0x0768 (0x0A88 - 0x0320)
class AKSPlayerState : public APGame_PlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0320(0x0008) MISSED OFFSET
	bool                                               bIsDemoRecording;                                         // 0x0328(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterOwnerChangedDel;                               // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBackupCharacterOwnerChangedDel;                         // 0x0340(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFriendlyFireInflicted;                                  // 0x0350(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              TrackedFriendlyFireDamage;                                // 0x0360(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReverseFriendlyFireEnabled;                              // 0x0364(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0365(0x0003) MISSED OFFSET
	float                                              PredictionFudge;                                          // 0x0368(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxPredictionPing;                                        // 0x036C(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTrackedActorBegin;                                      // 0x0370(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTrackedActorEnd;                                        // 0x0380(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	EIsPlayer                                          PlayerType;                                               // 0x0390(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0391(0x0007) MISSED OFFSET
	class AKSTeamState*                                r_Team;                                                   // 0x0398(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03A0(0x0008) MISSED OFFSET
	int                                                BackupTeamNum;                                            // 0x03A8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasServerTravelled;                                      // 0x03AC(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKSPlayerStateTeamChangedDel;                            // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x18];                                      // 0x03C0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnKSPlayerStateNameChangedDel;                            // 0x03D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x18];                                      // 0x03E8(0x0018) MISSED OFFSET
	TWeakObjectPtr<class AKSCharacterBase>             CharacterOwner;                                           // 0x0400(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSCharacterBase>             BackupCharacterOwner;                                     // 0x0408(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x30];                                      // 0x0410(0x0030) MISSED OFFSET
	EEliminationState                                  EliminatedState;                                          // 0x0440(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerEliminated;                                       // 0x0448(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPlayerInPlay;                                           // 0x0458(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDowned;                                                  // 0x0468(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0469(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerDownedChangedDel;                                 // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     LastKnownLocation;                                        // 0x0480(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LocalSideNum;                                             // 0x048C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bUIRelevant;                                              // 0x0490(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bMarkedUIIrrelevant;                                      // 0x0491(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData11[0x6];                                       // 0x0492(0x0006) MISSED OFFSET
	struct FSerializedMctsNetId                        r_ReplicatedNetId;                                        // 0x0498(0x0008) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData12[0x18];                                      // 0x04A0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRespawnTicketsChanged;                                  // 0x04B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	int                                                RespawnTickets;                                           // 0x04C8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class UKSTimerComponent*                           RespawnTimer;                                             // 0x04D0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           DisallowGiveUpTimer;                                      // 0x04D8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerTick;                                       // 0x04E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerActive;                                     // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnTimerComplete;                                   // 0x0500(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerTick;                                // 0x0510(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerActive;                              // 0x0520(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDisallowGiveUpTimerComplete;                            // 0x0530(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnScoreChanged;                                           // 0x0540(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMultiDownAchievedDel;                                   // 0x0550(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0560(0x0004) MISSED OFFSET
	int                                                Kills;                                                    // 0x0564(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                deaths;                                                   // 0x0568(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Assists;                                                  // 0x056C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                downs;                                                    // 0x0570(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DownSpree;                                                // 0x0574(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Revives;                                                  // 0x0578(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                eliminations;                                             // 0x057C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Headshots;                                                // 0x0580(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Hacks;                                                    // 0x0584(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Dehacks;                                                  // 0x0588(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MitigatedDamageDealt;                                     // 0x058C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                MitigatedDamageReceived;                                  // 0x0590(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RawDamageDealt;                                           // 0x0594(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RawDamageReceived;                                        // 0x0598(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                RoundsPlayed;                                             // 0x059C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TimeAlive;                                                // 0x05A0(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                timePlayed;                                               // 0x05A4(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x18];                                      // 0x05A8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnUIRelevantPlayerStateChangedDel;                        // 0x05C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSScoreChangeList                          ScoreChangeList;                                          // 0x05D0(0x0090) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSPlayerMatchStats*                         PreviewRecordedStats;                                     // 0x0660(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Money;                                                    // 0x0668(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                LastMoney;                                                // 0x066C(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMoneyEarned;                                            // 0x0670(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMoneyChanged;                                           // 0x0680(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bMoneyGivesCharge;                                        // 0x0690(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0691(0x0003) MISSED OFFSET
	int                                                Cash;                                                     // 0x0694(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LastCash;                                                 // 0x0698(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasReceivedStartingCash;                                 // 0x069C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x3];                                       // 0x069D(0x0003) MISSED OFFSET
	int                                                TotalCashEarned;                                          // 0x06A0(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LastCashEarned;                                           // 0x06A4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashChanged;                                            // 0x06A8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashEarnedChanged;                                      // 0x06B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnCashChangeEvent;                                        // 0x06C8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSCashChangeList                           CashChangeList;                                           // 0x06D8(0x0090) (CPF_Net, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldRestoreInventory;                                  // 0x0768(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x17];                                      // 0x0769(0x0017) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerModCharge;                                        // 0x0780(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerModActivationChange;                              // 0x0790(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNextModTier;                                            // 0x07A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Deprecated, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnModSelectConfirm;                                       // 0x07B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Deprecated, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData19[0x8];                                       // 0x07C0(0x0008) MISSED OFFSET
	bool                                               bOnlyChargeModsWhenAlive;                                 // 0x07C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x17];                                      // 0x07C9(0x0017) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModAddedDel;                                            // 0x07E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x18];                                      // 0x07F0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModRemovedDel;                                          // 0x0808(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x18];                                      // 0x0818(0x0018) MISSED OFFSET
	TArray<class UKSPlayerModInstance*>                ActiveMods;                                               // 0x0830(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UKSSpecialty*>                        Specialties;                                              // 0x0840(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnJobChanged;                                             // 0x0850(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSJobItem*                                  JobItem;                                                  // 0x0860(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                JobMasteryXpLevel;                                        // 0x0868(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x4];                                       // 0x086C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJobLoadFinishedDel;                                     // 0x0870(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x18];                                      // 0x0880(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnJobMasteryXpLevelChanged;                               // 0x0898(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData25[0x8];                                       // 0x08A8(0x0008) MISSED OFFSET
	class UKSSkinBundle*                               SkinItem;                                                 // 0x08B0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSkinChanged;                                            // 0x08B8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSLoadoutClass*                             LoadoutClass;                                             // 0x08C8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AKSItemDrop*>                         ItemsDroppedOnDeath;                                      // 0x08D0(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData26[0x18];                                      // 0x08E0(0x0018) MISSED OFFSET
	struct FKSCharacterGender                          Gender;                                                   // 0x08F8(0x0002) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FKSCharacterGender                          LocalGender;                                              // 0x08FA(0x0002) (CPF_Transient, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData27[0x4];                                       // 0x08FC(0x0004) MISSED OFFSET
	struct FGameplayTagContainer                       SkinTagContainer;                                         // 0x0900(0x0020) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData28[0x18];                                      // 0x0920(0x0018) MISSED OFFSET
	bool                                               bStale;                                                   // 0x0938(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0939(0x0007) MISSED OFFSET
	TArray<struct FString>                             AllyWidgetPoolName;                                       // 0x0940(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnShopItemPurchased;                                      // 0x0950(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemRefunded;                                       // 0x0960(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemActive;                                         // 0x0970(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShopItemInactive;                                       // 0x0980(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPersistentPlayerDataChanged;                            // 0x0990(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData30[0x20];                                      // 0x09A0(0x0020) MISSED OFFSET
	bool                                               bPollInProgress;                                          // 0x09C0(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bHasVoted;                                                // 0x09C1(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData31[0x6];                                       // 0x09C2(0x0006) MISSED OFFSET
	class UClass*                                      CurrentPollType;                                          // 0x09C8(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FKSPollData                                 CachedPollData;                                           // 0x09D0(0x0010) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCachedLocallyViewed;                                     // 0x09E0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData32[0x7];                                       // 0x09E1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterLocalViewChange;                               // 0x09E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class AActor>>               StimulatingObjects;                                       // 0x09F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSRevealManager*                            RevealManager;                                            // 0x0A08(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnElusiveTriggered;                                       // 0x0A10(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuickAndQuietTriggered;                                 // 0x0A20(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDangerCloseReviveOther;                                 // 0x0A30(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMedDroneReviveOther;                                    // 0x0A40(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTearGasDisorientOther;                                  // 0x0A50(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAPSDestroyedProjectile;                                 // 0x0A60(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnemyEquipmentWasEMPDisabled;                           // 0x0A70(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bBackfill;                                                // 0x0A80(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData33[0x3];                                       // 0x0A81(0x0003) MISSED OFFSET
	int                                                SavedHumanPlayerId;                                       // 0x0A84(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerState");
		return ptr;
	}


	void UpdatePollVotes(const struct FKSPollData& NewPollData);
	void TryToBroadCastUIRelevantInfoHasChanged();
	bool SpendCash(int cost);
	void SpawnedDropDestroyed(class AActor* Drop);
	void SetRevealManager(class AKSRevealManager* NewRevealManager);
	void SetMoney(int NewAmount);
	void SetGiveUpEnabled(bool bAllowed);
	void ServerPlayerProposePoll(class UClass* PollType);
	void ServerPlayerCastVote(bool bVoteInFavor);
	void SelectActiveMod(class UKSPlayerMod* NewMod);
	void RespawnTimerTick(float Seconds);
	void RespawnTimerComplete();
	void RespawnTimerActive(bool bActive);
	void ResetElimination();
	bool RemoveModInstance(class UKSPlayerModInstance* ModInst, bool bRemoveAll);
	bool RemoveMod(class UKSPlayerMod* Mod, bool RemoveAll);
	void PollEnded(const struct FKSPollResults& PollResults);
	bool PlayerProposePoll(class UClass* PollType);
	void PlayerCastVote(bool bVoteInFavor);
	void OnTeamUpdated();
	void OnSideNumUpdated();
	void OnReverseFriendlyFireEnabled();
	void OnRep_TotalCashEarned();
	void OnRep_Specialties();
	void OnRep_SkinItem();
	void OnRep_RespawnTimer();
	void OnRep_RespawnTickets();
	void OnRep_PlayerType();
	void OnRep_Money();
	void OnRep_MctsNetId();
	void OnRep_LoadoutClass();
	void OnRep_JobMasteryXpLevel();
	void OnRep_JobItem();
	void OnRep_HasVoted();
	void OnRep_Gender();
	void OnRep_Eliminated();
	void OnRep_Downed();
	void OnRep_DisallowGiveUpTimer();
	void OnRep_CurrentPollType();
	void OnRep_Cash();
	void OnRep_CachedPollData();
	void OnJobMasteryInventoryUpdated(const struct FInventoryId& InventoryId);
	void OnDeathDrop(class UKSItem* InItem, class AKSItemDrop* InDrop);
	void NotifyTearGasDisorientOther();
	void NotifyScoreChange(const struct FKSScoreChangeEvent& Event);
	void NotifyQuickAndQuietTriggered();
	void NotifyMedDroneReviveOther();
	void NotifyEnemyEquipmentWasEMPDisabled();
	void NotifyElusiveTriggered();
	void NotifyDangerCloseReviveOther();
	void NotifyCashChange(const struct FKSScoreChangeEvent& Event);
	void NotifyAPSDestroyedProjectile();
	void LoadoutSetSkin();
	bool IsWaitingForGiveUp();
	bool IsUIRelevant();
	bool IsReverseFriendlyFireEnabled();
	bool IsRespawning();
	bool IsPollInProgress();
	bool IsPlayer();
	bool IsInPlay();
	bool IsInParty();
	bool IsIndependentBot();
	bool IsEliminated();
	bool IsDowned();
	bool IsCharacterLocallyViewed();
	bool IsBackfilling();
	bool IsActorStimulatingPlayer(class AActor* Actor);
	bool HasRole(ECharacterRole RoleToCheck);
	bool HasModAny(TArray<class UKSPlayerMod*> TestPlayerMods);
	bool HasMod(class UKSPlayerMod* TestPlayerMod);
	bool HasHideTarget();
	bool GiveModInstance(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique, class UKSPlayerModInstance** Instance);
	bool GiveMod(class UKSPlayerMod* Mod, class AKSPlayerState* ModInstigator, bool Unique);
	int GetTotalCashEarned();
	float GetTimeUntilGiveUpAllowed();
	int GetStatValue(EPlayerStatType Stat);
	bool GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties);
	class UKSSkinBundle* GetSkinItem();
	int GetScore();
	int GetRevives();
	class AKSRevealManager* GetRevealManager();
	int GetRespawnTickets();
	float GetRemainingRespawnTime();
	class UPUMG_PlayerInfo* GetPlayerInfo(class APUMG_HUD* HUD);
	int GetPlayerId();
	class UKSPersistentPlayerData* GetPersistentPlayerData();
	int GetPartySize();
	void GetModTierProgress(int* Current, int* Target);
	TArray<class UKSPlayerMod*> GetModOptionsOfTier(int Tier);
	bool GetModInstancesOfType(EPlayerModType Type, TArray<class UKSPlayerModInstance*>* OutMods);
	bool GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods);
	float GetMMR();
	int64_t GetMctsPlayerId();
	bool GetLoadoutClass(class UKSLoadoutClass** OutLoadoutClass);
	int GetKills();
	int GetJobMasteryLevel();
	class UKSJobItem* GetJob();
	TArray<class AKSItemDrop*> GetItemsDroppedOnDeath();
	int GetInventoryItemQuantity(int ItemId);
	float GetInitialRespawnTime();
	int GetHeadshots();
	int GetHacks();
	bool GetGameModeMods(bool bIncludeChildMods, TArray<class UKSModInst_Activated*>* OutMods);
	int GetEliminations();
	EEliminationState GetEliminatedState();
	int GetDownSpree();
	int GetDowns();
	float GetDistanceSprinted();
	int GetDehacks();
	int GetDeaths();
	float GetCurrentTimePlayed();
	int GetCurrentRankedLevel();
	int GetCurrentModTier();
	int GetCurrentCash();
	class AKSCharacterBase* GetCharacterOwner();
	TMap<struct FString, float> GetBonusProgressionMultiplierFromEvents(const struct FString& Key);
	TMap<struct FString, float> GetBonusProgressionMultiplierFromBoosters(const struct FString& Key);
	float GetBonusProgressionMultiplier(const struct FString& Key);
	class AKSCharacterBase* GetBestCharacterOwner();
	class AKSCharacterBase* GetBackupCharacterOwner();
	int GetAssists();
	TArray<class UKSPlayerMod*> GetActiveMods();
	bool GetActivatableMods(bool bIncludeChildMods, TArray<class UKSModInst_Activated*>* OutMods);
	void FriendlyFirePenalty(bool IsKilled, class AKSPlayerState* Victim);
	void EnterPlay(bool bSkipResetEliminatedOrDownedTest, bool bSpendTicket);
	void EliminatePlayer();
	void EarnCash(int Earnings, bool bShareWithTeam, const struct FText& Reason, bool bBonus);
	void DisallowGiveUpTimerTick(float Seconds);
	void DisallowGiveUpTimerComplete();
	void DisallowGiveUpTimerActive(bool bActive);
	void ClientPollProposalFailed();
	void ClientNotifyFriendlyFireDamageApplied(float Amount);
	void ClientNotifyExceededReverseFriendlyFireThreshold();
	void ClaimLootItem(int LootItemId, int Quantity);
	void ChangeMoney(int Delta, const struct FText& Reason, bool bBonus);
	bool AnyActivatableModsActive();
	void AddScore(int InScore);
	void AddRevive(int Count);
	void AddPerSecondCharge();
	void AddKill(int Count);
	void AddHeadshot(int Count);
	void AddHack(int Count);
	void AddElimination(int Count);
	void AddDown(int Count);
	void AddDehack(int Count);
	void AddDeath(int Count);
	void AddAssist(int Count);
	bool ActivatableModAtIndexActive(int AbilityIndex);
	bool ActivatableGameModeModAtIndexActive(int AbilityIndex);
};


// Class Killstreak.KSPlayerState_Control
// 0x0000 (0x0A88 - 0x0A88)
class AKSPlayerState_Control : public AKSPlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerState_Control");
		return ptr;
	}

};


// Class Killstreak.KSPlayerState_Heist
// 0x0008 (0x0A90 - 0x0A88)
class AKSPlayerState_Heist : public AKSPlayerState
{
public:
	int                                                HardCashAmount;                                           // 0x0A88(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SoftCashAmount;                                           // 0x0A8C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerState_Heist");
		return ptr;
	}


	int GetSoftCash();
	int GetHardCash();
};


// Class Killstreak.KSPlayerStatsManager
// 0x0000 (0x0210 - 0x0210)
class UKSPlayerStatsManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerStatsManager");
		return ptr;
	}

};


// Class Killstreak.KSPlayerStimulusComponentBase
// 0x0028 (0x00D8 - 0x00B0)
class UKSPlayerStimulusComponentBase : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStartStimulatingPlayer;                                 // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStopStimulatingPlayer;                                  // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EKSStimulateTarget                                 StimulateTarget;                                          // 0x00D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bRegisterOnBeginPlay;                                     // 0x00D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00D2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerStimulusComponentBase");
		return ptr;
	}


	void UnregisterFromStimulusSystem();
	bool ShouldStopStimulatingPlayer(class AKSPlayerState* PlayerState);
	bool ShouldBeginStimulatingPlayer(class AKSPlayerState* PlayerState);
	void RegisterToStimulusSystem();
};


// Class Killstreak.KSPointOfInterest
// 0x0000 (0x0028 - 0x0028)
class UKSPointOfInterest : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPointOfInterest");
		return ptr;
	}


	void StagePOI();
	void EnablePOI();
	void DisablePOI();
};


// Class Killstreak.KSPOIBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UKSPOIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPOIBlueprintFunctionLibrary");
		return ptr;
	}


	static void SortPointsOfInterestByID(bool ShouldSortDescending, TArray<TScriptInterface<class UKSPointOfInterest>>* PointsOfInterest);
	static int GetPointOfInterestFavoredSide(const TScriptInterface<class UKSPointOfInterest>& PointOfInterest);
	static void GetAllPointsOfInterest(class UObject* WorldContextObject, TArray<TScriptInterface<class UKSPointOfInterest>>* OutPointsOfInterest);
	static TScriptInterface<class UKSPointOfInterest> ChooseRandomPointOfInterest(TArray<TScriptInterface<class UKSPointOfInterest>> PointsOfInterest);
};


// Class Killstreak.KSPollBase
// 0x00B8 (0x00E0 - 0x0028)
class UKSPollBase : public UObject
{
public:
	EPollAudience                                      PollAudience;                                             // 0x0028(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FText                                       PollTitle;                                                // 0x0030(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       PollSuccessfulMessage;                                    // 0x0048(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       PollUnsuccessfulMessage;                                  // 0x0060(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       AffirmativeOption;                                        // 0x0078(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       NegativeOption;                                           // 0x0090(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       AffirmativeOptionVoteCastMessage;                         // 0x00A8(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       NegativeOptionVoteCastMessage;                            // 0x00C0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	float                                              PollLengthInSeconds;                                      // 0x00D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPollBase");
		return ptr;
	}


	void OnPollStarted(class AKSGameState* GameState, int TeamNum);
	void OnPollPassed(class AKSGameState* GameState, int TeamNum);
	void OnPollFailed(class AKSGameState* GameState, int TeamNum);
	int GetNumberOfVotesToEnd(int VoterCount, bool bIsFullTeam);
	bool CanPlayerProposeThisPoll(class AKSPlayerState* Player);
	bool CanGameProposeThisPoll(class AKSGameState* GameState);
};


// Class Killstreak.KSPowerUp
// 0x0038 (0x0258 - 0x0220)
class AKSPowerUp : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnPowerUpPickedUp;                                        // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UBoxComponent*                               CollisionBox;                                             // 0x0230(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USphereComponent*                            OverlapSphere;                                            // 0x0238(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSProximityComponent*                       ProximityComponent;                                       // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                OwningTeam;                                               // 0x0248(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyOnProximity;                                      // 0x024C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x024D(0x0003) MISSED OFFSET
	float                                              DestroyDelay;                                             // 0x0250(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPowerUp");
		return ptr;
	}


	void SetTeamNum(int NewTeam);
	void OnRep_OwningTeam();
	void OnProximityUpdatedNative(class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FKSActorProximityInfo& ProximityInfo);
	void OnProximityOverlap(class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FKSActorProximityInfo& ProximityInfo);
	void OnPickedUp(class AActor* PickingUpActor);
	void HandleTeamUpdate(int NewTeam);
	bool CheckOverlapRelevance(class AActor* OverlappingActor);
	bool CheckNetRelevance(class AActor* Viewer);
	void BroadcastPickedUp(class AActor* PickingUpActor);
};


// Class Killstreak.KSPowerUp_Reequip
// 0x0050 (0x02A8 - 0x0258)
class AKSPowerUp_Reequip : public AKSPowerUp
{
public:
	struct FGameplayTagQuery                           ReequipWeaponTypesQuery;                                  // 0x0258(0x0048) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bDropLeftovers;                                           // 0x02A0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPowerUp_Reequip");
		return ptr;
	}

};


// Class Killstreak.KSPowerUpDrop
// 0x0000 (0x0380 - 0x0380)
class AKSPowerUpDrop : public AKSItemDrop
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPowerUpDrop");
		return ptr;
	}

};


// Class Killstreak.KSProjectile
// 0x06B0 (0x0910 - 0x0260)
class AKSProjectile : public AKSLagCompensatedActor
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0260(0x0078) MISSED OFFSET
	struct FKSEquipmentContainer                       EquipmentContainer;                                       // 0x02D8(0x0228) (CPF_Net, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	class UKSWeaponComponent*                          WeaponComponent;                                          // 0x0500(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              WeaponComponentEquipmentId;                               // 0x0508(0x0004) (CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UKSWeaponAsset*                              CachedWeaponAsset;                                        // 0x0510(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EProjectileWeaponComponentType                     WeaponComponentType;                                      // 0x0518(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x0520(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       SkinTagContainer;                                         // 0x0530(0x0020) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0550(0x0018) MISSED OFFSET
	float                                              HorizontalThrowSpeed;                                     // 0x0568(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSpeed;                                                 // 0x056C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bModifyInitialSpeedWithPitch;                             // 0x0570(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDeadOrDownedDrop;                                        // 0x0571(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bCanBeIntercepted;                                        // 0x0572(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0573(0x0005) MISSED OFFSET
	class USceneComponent*                             CollisionComponent0;                                      // 0x0578(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                              // 0x0580(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FHitResult                                  ProjectileHit;                                            // 0x0588(0x0088) (CPF_BlueprintVisible, CPF_Net, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	float                                              LifeSpanAfterDeactivate;                                  // 0x0610(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldHideOnDeactivate;                                  // 0x0614(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bStopped;                                                 // 0x0615(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0616(0x0002) MISSED OFFSET
	int                                                NumBounces;                                               // 0x0618(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                NumPenetrations;                                          // 0x061C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0620(0x0010) MISSED OFFSET
	float                                              AdditionalPredictionTimeLenience;                         // 0x0630(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AdditionalPredictionArcTime;                              // 0x0634(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitValidationLenience;                                    // 0x0638(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bValidateHitsWithCollision;                               // 0x063C(0x0001) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x3];                                       // 0x063D(0x0003) MISSED OFFSET
	struct FHitResult                                  StoppingHit;                                              // 0x0640(0x0088) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAttachWhenStopped;                                       // 0x06C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDetachWhenBumped;                                        // 0x06C9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSimulatePhysicsWhenStopped;                              // 0x06CA(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x15];                                      // 0x06CB(0x0015) MISSED OFFSET
	bool                                               bDealPointDamageAfterDetach;                              // 0x06E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x3];                                       // 0x06E1(0x0003) MISSED OFFSET
	float                                              DebugDrawLifetime;                                        // 0x06E4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bCreateClusterSegmentsOnStopped;                          // 0x06E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCreateClusterSegmentsOnExplode;                          // 0x06E9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x6];                                       // 0x06EA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponAssetSet;                                         // 0x06F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x10];                                      // 0x0700(0x0010) MISSED OFFSET
	class UKSWeaponAsset*                              WeaponAsset;                                              // 0x0710(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              ParentWeaponAsset;                                        // 0x0718(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSWeaponAsset*                              DamageWeaponAssetOverride;                                // 0x0720(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class AKSWeapon*                                   SpawningWeapon;                                           // 0x0728(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              TimeCooked;                                               // 0x0730(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SpawnLocation;                                            // 0x0734(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FRotator                                    SpawnRotation;                                            // 0x0740(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData12[0x4];                                       // 0x074C(0x0004) MISSED OFFSET
	class UPrimitiveComponent*                         PrimitiveCollisionComponent;                              // 0x0750(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     LocationLastFrame;                                        // 0x0758(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bActive;                                                  // 0x0764(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EProjectileExplosionType                           DeactivateExplosionType;                                  // 0x0765(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDeactivateInWater;                                       // 0x0766(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x5];                                       // 0x0767(0x0005) MISSED OFFSET
	bool                                               bCanBeKilled;                                             // 0x076C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x3];                                       // 0x076D(0x0003) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x0770(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSetInstigatorToKiller;                                   // 0x0774(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	float                                              CurrentHealth;                                            // 0x0778(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LifeSpanAfterKilled;                                      // 0x077C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bExplodeOnKilled;                                         // 0x0780(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bProjectileKillPending;                                   // 0x0781(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x6];                                       // 0x0782(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileKilled;                                       // 0x0788(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAffectsFriendly;                                         // 0x0798(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowFriendlyPlayersToDamage;                            // 0x0799(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPenetratesFriendly;                                      // 0x079A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAffectsEnemy;                                            // 0x079B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPenetratesEnemy;                                         // 0x079C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasPlayedExplosion;                                      // 0x079D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x2];                                       // 0x079E(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayExplosion;                                          // 0x07A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UParticleSystem*                             DefaultSpang;                                             // 0x07B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<TEnumAsByte<EPhysicalSurface>, class UParticleSystem*> SurfaceSpangs;                                            // 0x07B8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              SpinsPerSecond;                                           // 0x0808(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpeedToReachSpinsPerSecond;                               // 0x080C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     SpinAxis;                                                 // 0x0810(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSpinAfterDetaching;                                      // 0x081C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanBreakDestructibles;                                   // 0x081D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData18[0x2];                                       // 0x081E(0x0002) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0820(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanReclaim;                                              // 0x0828(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDestroyOnReclaim;                                        // 0x0829(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x2];                                       // 0x082A(0x0002) MISSED OFFSET
	float                                              InteractionDistanceOffset;                                // 0x082C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EProjectileReclaimPermission                       ReclaimPermissions;                                       // 0x0830(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldRestoreWeaponAssetOnReclaim;                       // 0x0831(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x2];                                       // 0x0832(0x0002) MISSED OFFSET
	float                                              ReclaimTime;                                              // 0x0834(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      ReclaimInteractionType;                                   // 0x0838(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                Reclaimer;                                                // 0x0840(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReclaimPending;                                          // 0x0848(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x3];                                       // 0x0849(0x0003) MISSED OFFSET
	int                                                ReclaimStock;                                             // 0x084C(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnReclaim;                                                // 0x0850(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldModifyVisibilityChecks;                            // 0x0860(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x3];                                       // 0x0861(0x0003) MISSED OFFSET
	float                                              VisibilityDistance;                                       // 0x0864(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShowOnHud;                                               // 0x0868(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x7];                                       // 0x0869(0x0007) MISSED OFFSET
	class UObject*                                     WidgetIcon;                                               // 0x0870(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       MinimapDisplayWidget;                                     // 0x0878(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       FullmapDisplayWidget;                                     // 0x08A0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       OverlayDisplayWidget;                                     // 0x08C8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EProjectileVisibilityType                          WidgetIconAudience;                                       // 0x08F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EProjectileVisibilityType                          OverlayIconAudience;                                      // 0x08F1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x6];                                       // 0x08F2(0x0006) MISSED OFFSET
	TArray<struct FProjectileWidgetInfo>               WidgetInfos;                                              // 0x08F8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                OriginalOwnerId;                                          // 0x0908(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData25[0x4];                                       // 0x090C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile");
		return ptr;
	}


	void UpdateSpinRotation(float DeltaSeconds);
	void TriggerExplosionFromHitResult(const struct FHitResult& HitResult, EProjectileExplosionType ExplosionType);
	void TriggerExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	void TakeoverDelayComplete();
	void SpawnSpang(const struct FHitResult& Hit);
	void SimulateExplosion();
	bool ShouldPenetrate(const struct FHitResult& HitResult);
	bool ShouldBounceOff(const struct FHitResult& HitResult);
	void SetWeaponAsset(class UKSWeaponAsset* InAsset);
	void SetHorizontalThrowSpeed(float InSpeed);
	void SetFumbled();
	void SetDamageOverrideWeaponAsset(class UKSWeaponAsset* InWeaponAsset);
	void ServerProcessPredictedHits(TArray<struct FLaggedProjectileHit> PredictedHits);
	void RecordPredictedHits(EProjectilePredictionType PredictionType, TArray<struct FHitResult>* HitResults);
	void RecordPredictedHit(const struct FHitResult& HitResult, EProjectilePredictionType PredictionType);
	bool Reclaim(class AKSCharacter* ReclaimingCharacter);
	void PlayFizzle(const struct FProjectileExplosionInfo& ExplosionInfo);
	void PlayExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	void OnTimeCookedSet();
	void OnRootComponentDetached(class USceneComponent* DetachedComponent);
	void OnRep_WeaponAsset();
	void OnRep_TimeCooked();
	void OnRep_StoppingHit();
	void OnRep_ProjectileHit();
	void OnRep_ParentWeaponAsset();
	void OnRep_CurrentHealth();
	bool OnProjectileStopped(const struct FHitResult& HitResult);
	bool OnProjectilePenetrated(const struct FHitResult& HitResult);
	bool OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void OnKilled(class AController* EventInstigator);
	void NotifyPredictedHitRejected();
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectilePenetrated(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	float ModifyDamageDealt(float DamageAmount, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser, class AActor* DamagedActor);
	bool IsFullyCooked();
	bool IsActive();
	class UKSWeaponComponent* GetWeaponComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	float GetTimeCooked();
	struct FRotator GetSpawnRotation();
	struct FVector GetSpawnLocation();
	class AKSWeapon* GetSpawningWeapon();
	int GetReclaimStock();
	struct FText GetReclaimPromptText(class AKSCharacter* Character);
	struct FText GetReclaimProgressText(class AKSCharacter* Character);
	class USceneComponent* GetProjectileUpdatedComponent();
	void GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes);
	int GetNumPenetrations();
	int GetNumBounces();
	class UProjectileMovementComponent* GetMovementComponent();
	float GetHorizontalThrowSpeed();
	class UKSWeaponAsset* GetDamageWeaponAsset();
	class AController* GetDamageInstigator();
	float GetDamageFalloffRangeScaler();
	class USceneComponent* GetComponentToRotate();
	class UKSProjectileClusterComponent* GetClusterComponent();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void FixupWeaponComponent();
	void DoRadialDamageDefault();
	bool DoesPenetrateFriendly();
	bool DoesPenetrateEnemy();
	bool DoesAffectFriendly();
	bool DoesAffectEnemy();
	TArray<class AActor*> DetermineIgnoredActors(const struct FHitResult& HitResult);
	void Deactivate();
	void CreateClusterSegmentsFromStoppingHit();
	float ComponentTakeDamage(class UPrimitiveComponent* HitComponent, float DamageAmount);
	bool CanEverBreakDestructibles();
	bool CanCharacterReclaim(class AKSCharacter* QueriedCharacter);
	void BroadcastExplosion(const struct FProjectileExplosionInfo& ExplosionInfo);
	bool AffectsActor(class AActor* InActor);
	bool AddAttachment(class UKSWeaponAttachment* InAttachment);
};


// Class Killstreak.KSProjectile_Grenade
// 0x00A8 (0x09B8 - 0x0910)
class AKSProjectile_Grenade : public AKSProjectile
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0910(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       OverlayWarningDisplayWidget;                              // 0x0920(0x0028) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnGrenadeProximity;                                       // 0x0948(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bTakeOverOnStopped;                                       // 0x0958(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0959(0x0003) MISSED OFFSET
	float                                              RepFuseTimeRemaining;                                     // 0x095C(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0960(0x0004) MISSED OFFSET
	float                                              CurrentFuseTime;                                          // 0x0964(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                FuseTimerHandle;                                          // 0x0968(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                FuseCookPauseTimerHandle;                                 // 0x0970(0x0008) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProximityWarningDelay;                                    // 0x0978(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0xC];                                       // 0x097C(0x000C) MISSED OFFSET
	bool                                               bSetFuseOnBounce;                                         // 0x0988(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0989(0x0003) MISSED OFFSET
	float                                              BounceFuseTime;                                           // 0x098C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSetFuseOnStopped;                                        // 0x0990(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0991(0x0003) MISSED OFFSET
	float                                              StoppedFuseTime;                                          // 0x0994(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bExplodesOnStopped;                                       // 0x0998(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0999(0x0007) MISSED OFFSET
	class USphereComponent*                            DetectionSphere;                                          // 0x09A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x1];                                       // 0x09A8(0x0001) MISSED OFFSET
	bool                                               bGeneratesTouchSenseEvents;                               // 0x09A9(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x6];                                       // 0x09AA(0x0006) MISSED OFFSET
	class UKSItemStimuliSourceComponent*               StimuliSourceComponent;                                   // 0x09B0(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_Grenade");
		return ptr;
	}


	void UnregisterTouchEvent(class AKSCharacter* KSCharacter);
	bool ShouldSetFuseOnStopped(const struct FHitResult& HitResult);
	bool ShouldExplodeOnStopped(const struct FHitResult& HitResult);
	bool ShouldExplodeOnBounce(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void SetOverlayWarningDisplayWidget(TSoftObjectPtr<class UClass> InWidget, bool bForce);
	void SetFuseTime(float InFuseTime);
	void RegisterTouchEvent(class AKSCharacter* KSCharacter);
	void OnRep_FuseTimeRemaining();
	bool IsInProximityOfLocalCharacter();
	bool IsFuseActive();
	float GetCurrentFuseTime();
	void FuseTimeExpired();
	bool CanSeeProximityWarning(class AController* QueriedPlayer);
	void CallOnLocalViewTargetChanged(class AKSPlayerController* InController, class AActor* OldViewTarget, class AActor* NewViewTarget);
};


// Class Killstreak.KSProjectile_ClusterGrenade
// 0x0038 (0x09F0 - 0x09B8)
class AKSProjectile_ClusterGrenade : public AKSProjectile_Grenade
{
public:
	class UKSProjectileClusterComponent*               ProjectileClusterComponent;                               // 0x09B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInflictDamageOnExplosion;                                // 0x09C0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x09C1(0x0007) MISSED OFFSET
	class UParticleSystem*                             ClusterExplosionEffect;                                   // 0x09C8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          ClusterExplosionDecalMaterial;                            // 0x09D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ClusterDecalScale;                                        // 0x09D8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09E4(0x0004) MISSED OFFSET
	class UStaticMesh*                                 StopMesh;                                                 // 0x09E8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_ClusterGrenade");
		return ptr;
	}


	class UKSProjectileClusterComponent* GetProjectileClusterComponent();
	bool DoesInflictDamageOnExplosion();
};


// Class Killstreak.KSSpreadProjectile
// 0x0040 (0x02A0 - 0x0260)
class AKSSpreadProjectile : public AKSLagCompensatedActor
{
public:
	class USceneComponent*                             CollisionComponent;                                       // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UProjectileMovementComponent*                ProjectileMovementComponent;                              // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0270(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpreadProjectile");
		return ptr;
	}


	bool OnProjectileStopped(const struct FHitResult& HitResult);
	bool OnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnProjectileBounced(const struct FHitResult& HitResult, const struct FVector& ImpactVelocity);
};


// Class Killstreak.KSGrenadeSpreadRule
// 0x0000 (0x0028 - 0x0028)
class UKSGrenadeSpreadRule : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGrenadeSpreadRule");
		return ptr;
	}


	TArray<struct FTransform> GetSpread(class UWorld* World, const struct FTransform& Transform, float Radius, float NormalZMin);
};


// Class Killstreak.KSSpikeBallSpreadRule
// 0x0000 (0x0028 - 0x0028)
class UKSSpikeBallSpreadRule : public UKSGrenadeSpreadRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpikeBallSpreadRule");
		return ptr;
	}

};


// Class Killstreak.KSGroundSpreadRule
// 0x0010 (0x0038 - 0x0028)
class UKSGroundSpreadRule : public UKSGrenadeSpreadRule
{
public:
	TArray<struct FVector>                             GroundSpreadVectors;                                      // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSGroundSpreadRule");
		return ptr;
	}

};


// Class Killstreak.KSClusterSpreadRule
// 0x0000 (0x0028 - 0x0028)
class UKSClusterSpreadRule : public UKSGrenadeSpreadRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSClusterSpreadRule");
		return ptr;
	}

};


// Class Killstreak.KSProjectile_GrenadeSpread
// 0x0368 (0x0D20 - 0x09B8)
class AKSProjectile_GrenadeSpread : public AKSProjectile_Grenade
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09B8(0x0008) MISSED OFFSET
	float                                              TimeToStartSpread;                                        // 0x09C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TickSpreadFrequency;                                      // 0x09C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTimerHandle                                TickSpreadTimerHandle;                                    // 0x09C8(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UClass*                                      SpreadRuleClass;                                          // 0x09D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              NormalZMin;                                               // 0x09D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09DC(0x0004) MISSED OFFSET
	struct FKSSpreadList                               SpreadList;                                               // 0x09E0(0x0120) (CPF_Net, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSpreadDistance;                                        // 0x0B00(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               PreventCollisionBeneathSpread;                            // 0x0B04(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0B05(0x0003) MISSED OFFSET
	struct FTimerHandle                                SpreadTimerHandle;                                        // 0x0B08(0x0008) (CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                          QueuedTransforms;                                         // 0x0B10(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<struct FVector>                             SpreadStartLocations;                                     // 0x0B20(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                SpreadProjectileCount;                                    // 0x0B30(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0B34(0x0004) MISSED OFFSET
	TArray<class AKSSpreadProjectile*>                 SpreadProjectiles;                                        // 0x0B38(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      SpreadProjectileToSpawn;                                  // 0x0B48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpreadProjectileRotationMin;                              // 0x0B50(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpreadProjectileRotationMax;                              // 0x0B54(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SpreadProjectileHeight;                                   // 0x0B58(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0B5C(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AKSProjectile_GrenadeSpread>> ChildSpreadGrenades;                                      // 0x0B60(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSProjectile_GrenadeSpread>  ParentSpreadGrenade;                                      // 0x0B70(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHealthPerTransform;                                    // 0x0B78(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0B7C(0x0004) MISSED OFFSET
	TArray<EDamageCategory>                            DamageTypeImmunities;                                     // 0x0B80(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SphereCollisionRadius;                                    // 0x0B90(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bExtinguishable;                                          // 0x0B94(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0B95(0x0003) MISSED OFFSET
	class UClass*                                      OverlapClassFilter;                                       // 0x0B98(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TEnumAsByte<EObjectTypeQuery>>              OverlapObjectTypes;                                       // 0x0BA0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UClass>>               ToDestroyOnOverlap;                                       // 0x0BB0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseDestroyOnOverlapList;                                 // 0x0BC0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x17];                                      // 0x0BC1(0x0017) MISSED OFFSET
	float                                              LingerDuration;                                           // 0x0BD8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0BDC(0x0004) MISSED OFFSET
	TArray<class AActor*>                              AffectedActors;                                           // 0x0BE0(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FTimerHandle>           LingeringAffectedActors;                                  // 0x0BF0(0x0050) (CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0C40(0x0004) MISSED OFFSET
	float                                              TickDamageAmount;                                         // 0x0C44(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      TickDamageClass;                                          // 0x0C48(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TickDamageFrequency;                                      // 0x0C50(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0C54(0x0004) MISSED OFFSET
	class UKSNavModifierComponent*                     KSNavModifierComponent;                                   // 0x0C58(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>            ParticleSystemComponents;                                 // 0x0C60(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UDecalComponent*>                     DecalComponents;                                          // 0x0C70(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                      MeshComponents;                                           // 0x0C80(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UParticleSystem*                             ParticleSystemTemplate;                                   // 0x0C90(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PreDeactivateTime;                                        // 0x0C98(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParticleOcclusionRadius;                                  // 0x0C9C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          DecalMaterial;                                            // 0x0CA0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DecalDepth;                                               // 0x0CA8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0CAC(0x0004) MISSED OFFSET
	class UObject*                                     MeshAsset;                                                // 0x0CB0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstance*                           FriendlyMaterial;                                         // 0x0CB8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstance*                           EnemyMaterial;                                            // 0x0CC0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MeshOutlineThickness;                                     // 0x0CC8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0CCC(0x0004) MISSED OFFSET
	class UClass*                                      SkeletalAnimClass;                                        // 0x0CD0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0CD8(0x0008) MISSED OFFSET
	struct FTransform                                  MeshTransform;                                            // 0x0CE0(0x0030) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0D10(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_GrenadeSpread");
		return ptr;
	}


	void UnlinkFromParent();
	void SetTimeUntilNextTickDamageSeconds(float NewTimeUntilNextTickDamageSeconds);
	void RemoveChild(class AKSProjectile_GrenadeSpread* RemovingChildSpreadGrenade);
	void ProcessNextSpreadTransform();
	void OnSpreadTransformRemoved(const struct FTransform& RemovedTransform);
	void OnSpreadTransformAdded(const struct FTransform& AddedTransform);
	void OnSpreadTick();
	void OnSpreadProjectileStopped(const struct FHitResult& HitResult);
	void OnLingerEnd(class AActor* LingerActor);
	void OnDamageTick();
	void OnBeginLingering();
	void OnAllSpreadTransformsRemoved();
	void OnAffectedDestroyed(class AActor* AffectedActor);
	void OnActorUnaffected(class AActor* UnaffectedActor);
	void OnActorDamaged(class AActor* DamagedActor, float Amount);
	void OnActorAffected(class AActor* AffectedActor);
	void LinkToParent(class AKSProjectile_GrenadeSpread* NewParentSpreadGrenade);
	bool IsMasterSpreadGrenade();
	bool IsLingering();
	void GiveMasterPrivilegesToOther(class AKSProjectile_GrenadeSpread* NewMasterSpreadGrenade, float NewTimeUntilNextTickDamageSeconds, bool bPassSelf);
	struct FKSSpreadList GetSpreadList();
	TWeakObjectPtr<class AKSProjectile_GrenadeSpread> GetParentSpreadGrenade();
	TArray<TWeakObjectPtr<class AKSProjectile_GrenadeSpread>> GetChildSpreadGrenades();
	TArray<class AActor*> GetAllAffectedActors();
	TArray<class AActor*> GetAffectedActors();
	class AKSProjectile_GrenadeSpread* DetermineNextMasterSpreadGrenade();
	void ConfigureSpreadTransformParticleSystem(class UParticleSystemComponent* ParticleSystem);
	void ConfigureSpreadTransformDecal(class UDecalComponent* Decal);
	void CleanupParticleSystemComponents();
	void CleanupMeshComponents();
	void BeginLingering();
	void AddChild(class AKSProjectile_GrenadeSpread* NewChildSpreadGrenade);
};


// Class Killstreak.KSProjectile_MacGuffin
// 0x0008 (0x0918 - 0x0910)
class AKSProjectile_MacGuffin : public AKSProjectile
{
public:
	bool                                               bAutomaticPickup;                                         // 0x0910(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0911(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_MacGuffin");
		return ptr;
	}

};


// Class Killstreak.KSProjectile_Melee
// 0x0018 (0x0928 - 0x0910)
class AKSProjectile_Melee : public AKSProjectile
{
public:
	class UClass*                                      ProjectileDamageType;                                     // 0x0910(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AActor*>                              HitActors;                                                // 0x0918(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_Melee");
		return ptr;
	}


	void PredictDamage(float DeltaTime);
	void LookAheadHit(class AActor* HitActor, const struct FHitResult& HitResult);
	void GetIgnoredActors(TArray<class AActor*>* OutIgnoredActors);
	void FlushHitIgnoreActors();
	void AllowFutureHitOnActor(class AActor* PreviouslyHitActor);
};


// Class Killstreak.KSProjectile_Pierce
// 0x0038 (0x0948 - 0x0910)
class AKSProjectile_Pierce : public AKSProjectile
{
public:
	float                                              ProjectileEdgeTolerance;                                  // 0x0910(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TEnumAsByte<ETraceTypeQuery>                       TraceChannel;                                             // 0x0914(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0915(0x0003) MISSED OFFSET
	TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypes;                                              // 0x0918(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDrawDebugLine;                                           // 0x0928(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0929(0x0007) MISSED OFFSET
	TArray<class AActor*>                              AlreadyHitActors;                                         // 0x0930(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasHitWall;                                              // 0x0940(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasHitEnemy;                                             // 0x0941(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0942(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_Pierce");
		return ptr;
	}

};


// Class Killstreak.KSProjectile_ProximityGrenade
// 0x0010 (0x09C8 - 0x09B8)
class AKSProjectile_ProximityGrenade : public AKSProjectile_Grenade
{
public:
	class UKSProximityComponent*                       ProximityComponent;                                       // 0x09B8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bInitializeProximityCheckingOnStopped;                    // 0x09C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x09C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_ProximityGrenade");
		return ptr;
	}


	void ProximityActorUpdated(class AActor* Actor, class UPrimitiveComponent* Component, const struct FKSActorProximityInfo& ProximityInfo);
	struct FVector GetProximityTraceRelativeLocation();
	class UPrimitiveComponent* GetProximityComponent();
};


// Class Killstreak.KSProjectile_RemoteTrigger
// 0x0048 (0x0A00 - 0x09B8)
class AKSProjectile_RemoteTrigger : public AKSProjectile_Grenade
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x09B8(0x0018) MISSED OFFSET
	bool                                               CanDetonateNow;                                           // 0x09D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCanDetonateBeforeStopping;                               // 0x09D1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x09D2(0x0006) MISSED OFFSET
	class UKSPlayerMod*                                DetectionMod;                                             // 0x09D8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x09E0(0x0008) MISSED OFFSET
	bool                                               bRequiresMatchingDetonator;                               // 0x09E8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x09E9(0x0003) MISSED OFFSET
	struct FVector                                     RelativeInteractionPoint;                                 // 0x09EC(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x1];                                       // 0x09F8(0x0001) MISSED OFFSET
	bool                                               DetectedEnemy;                                            // 0x09F9(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x6];                                       // 0x09FA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_RemoteTrigger");
		return ptr;
	}


	void ReportOwningClientLoaded();
	void OnRealActorStopped(class AKSProjectile_RemoteTrigger* RealProjectile);
	bool IsDetonatable();
};


// Class Killstreak.KSProjectile_ReviveDart
// 0x0048 (0x0958 - 0x0910)
class AKSProjectile_ReviveDart : public AKSProjectile
{
public:
	TWeakObjectPtr<class AKSCharacter>                 TargetCharacter;                                          // 0x0910(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0918(0x0010) MISSED OFFSET
	float                                              ReviveTime;                                               // 0x0928(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x092C(0x0004) MISSED OFFSET
	class UKSPlayerMod*                                TargetCharacterMod;                                       // 0x0930(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSucceed;                                                // 0x0938(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0948(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_ReviveDart");
		return ptr;
	}


	void OnReviveEnd(class AKSCharacter* RevivingCharacter, bool SuccessfulRevive);
};


// Class Killstreak.KSProjectile_ZiplineAnchor
// 0x0030 (0x0940 - 0x0910)
class AKSProjectile_ZiplineAnchor : public AKSProjectile
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0910(0x0020) MISSED OFFSET
	struct FVector                                     ProjectileTarget;                                         // 0x0930(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x093C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectile_ZiplineAnchor");
		return ptr;
	}

};


// Class Killstreak.KSProjectileClusterComponent
// 0x0060 (0x0110 - 0x00B0)
class UKSProjectileClusterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x00B0(0x000C) MISSED OFFSET
	EProjectileClusterSpreadType                       ProjectileClusterSpreadType;                              // 0x00BC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	struct FVector                                     ClusterSegmentSpawnOffset;                                // 0x00C0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLinkSpreadGrenades;                                      // 0x00CC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIgnoreZAxisForClusterDirection;                          // 0x00CD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAlwaysUseInitialClusterDirection;                        // 0x00CE(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x00CF(0x0001) MISSED OFFSET
	float                                              RandomMinPitch;                                           // 0x00D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RandomMaxPitch;                                           // 0x00D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RandomMinYaw;                                             // 0x00D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RandomMaxYaw;                                             // 0x00DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSProjectileClusterSegment>         ClusterSegmentDefinitions;                                // 0x00E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSProjectile*>                       ClusterSegments;                                          // 0x00F0(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnOwnedSegmentKilled;                                     // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectileClusterComponent");
		return ptr;
	}


	void OnSegmentKilled(class AKSProjectile* Segment);
	TArray<class AKSProjectile*> GetSpawnedSegments();
	struct FVector GetInitialClusterDirection();
	struct FTransform GetImpactRelativeSegmentTransform(const struct FHitResult& Hit, const struct FVector& PassThroughVector, const struct FVector& AdditionalOffset);
	struct FVector GetClusterSegmentSpawnOffset();
	TArray<struct FKSProjectileClusterSegment> GetClusterSegmentDefinitions();
	void CreateClusterSegments(const struct FHitResult& Hit, class AKSWeapon* WeaponUsed);
};


// Class Killstreak.KSProjectileMovementComponent
// 0x0030 (0x0200 - 0x01D0)
class UKSProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate                    OnProjectilePenetrated;                                   // 0x01D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     PreStopVelocity;                                          // 0x01E0(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              LifetimeUponStop;                                         // 0x01EC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	float                                              ProjectileVelocityDeflectDampener;                        // 0x01F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0xC];                                       // 0x01F4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjectileMovementComponent");
		return ptr;
	}

};


// Class Killstreak.KSProjWeaponTargetingModule
// 0x0020 (0x0170 - 0x0150)
class UKSProjWeaponTargetingModule : public UKSDefaultAimTargetingModule
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0150(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProjWeaponTargetingModule");
		return ptr;
	}

};


// Class Killstreak.KSProp_Physical
// 0x0010 (0x0230 - 0x0220)
class AKSProp_Physical : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x0220(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CollisionAkEvent;                                         // 0x0228(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProp_Physical");
		return ptr;
	}

};


// Class Killstreak.KSProximityComponent
// 0x00B0 (0x0160 - 0x00B0)
class UKSProximityComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnProximityInfoUpdated;                                   // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSProximityFilter                          ProximityFilter;                                          // 0x00C0(0x0020) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              MaxTimeBetweenUpdates;                                    // 0x00E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ECollisionChannel>                     LOSChannel;                                               // 0x00E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00E5(0x0003) MISSED OFFSET
	TMap<class AActor*, struct FKSActorProximityInfo>  ActorProximityInfoMap;                                    // 0x00E8(0x0050) (CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0138(0x0018) MISSED OFFSET
	class UPrimitiveComponent*                         RegisteredShape;                                          // 0x0150(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bProximityCheckingEnabled;                                // 0x0158(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSProximityComponent");
		return ptr;
	}


	void UnregisterOverlapShape(class UPrimitiveComponent* OverlapShape);
	bool ShouldTrackActor(class AActor* InActor);
	void SetProximityTraceOffset(const struct FVector& Offset);
	void SetProximityCheckingEnabled(bool Enabled);
	void RegisterOverlapShape(class UPrimitiveComponent* OverlapShape);
	void ProximityOverlapStart(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ProximityOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnProximityActorDestroyed(class AActor* DestroyedActor);
};


// Class Killstreak.KSPunishmentConfig
// 0x0030 (0x0060 - 0x0030)
class UKSPunishmentConfig : public UDataAsset
{
public:
	TArray<struct FPunishmentConfigEntry>              GoodBehaviorConfig;                                       // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FBadBehaviorConfigEntry>             BadBehaviorConfig;                                        // 0x0040(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FEndMatchPunishConfigEntry>          EndMatchPunishConfig;                                     // 0x0050(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPunishmentConfig");
		return ptr;
	}

};


// Class Killstreak.KSPunishmentManager
// 0x0068 (0x0278 - 0x0210)
class UKSPunishmentManager : public UKSActivityManagerBase
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0210(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPunishmentManager");
		return ptr;
	}

};


// Class Killstreak.KSPunishmentRuleComponent
// 0x0068 (0x0118 - 0x00B0)
class UKSPunishmentRuleComponent : public UKSGameRuleComponent
{
public:
	class UClass*                                      PunishmentConfigClass;                                    // 0x00B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UKSPunishmentConfig*                         PunishmentConfig;                                         // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               UseDeserterPenalty;                                       // 0x00C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	TMap<int64_t, struct FPlayerPunishmentTracker>     PlayerPunishmentTrackers;                                 // 0x00C8(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPunishmentRuleComponent");
		return ptr;
	}

};


// Class Killstreak.KSQueuesSettingsDefault
// 0x03A0 (0x03C8 - 0x0028)
class UKSQueuesSettingsDefault : public UObject
{
public:
	TArray<struct FKSQueueRow>                         QueueConfigRow;                                           // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET
	TArray<struct FKSMapListRow>                       MapListBaseConfigRow;                                     // 0x0088(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0098(0x0050) MISSED OFFSET
	TArray<struct FKSMapRow>                           MapBaseConfigRow;                                         // 0x00E8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x50];                                      // 0x00F8(0x0050) MISSED OFFSET
	TArray<struct FKSBonusProgressionRow>              BonusProgressionBaseConfigRow;                            // 0x0148(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x50];                                      // 0x0158(0x0050) MISSED OFFSET
	TArray<struct FKSSurrenderRow>                     SurrenderBaseConfigRow;                                   // 0x01A8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x50];                                      // 0x01B8(0x0050) MISSED OFFSET
	TArray<struct FKSQueueGroupRow>                    QueueGroupBaseConfigRow;                                  // 0x0208(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x50];                                      // 0x0218(0x0050) MISSED OFFSET
	TArray<struct FKSRankedProgressionRow>             RankedProgressionBaseConfigRow;                           // 0x0268(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0278(0x0050) MISSED OFFSET
	TArray<struct FKSLimitedTimeEventRow>              LimitedTimeEventBaseConfigRow;                            // 0x02C8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x50];                                      // 0x02D8(0x0050) MISSED OFFSET
	TArray<struct FKSRankedSeasonRow>                  RankedSeasonBaseConfigRow;                                // 0x0328(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x50];                                      // 0x0338(0x0050) MISSED OFFSET
	TArray<struct FString>                             ActiveLimitedTimeEventNames;                              // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     ActiveRankedSeasonKey;                                    // 0x0398(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSQueueSectionSort>                 QueueSectionSortConfigRow;                                // 0x03A8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FKSQueuePlatformFilter>              QueuePlatformFilter;                                      // 0x03B8(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSQueuesSettingsDefault");
		return ptr;
	}

};


// Class Killstreak.KSQuip
// 0x0030 (0x02C8 - 0x0298)
class UKSQuip : public UKSRadialMenuItem
{
public:
	struct FName                                       OverriddenAudioEventName;                                 // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAkAudioEvent>                QuipAudioEvent;                                           // 0x02A0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSQuip");
		return ptr;
	}

};


// Class Killstreak.KSQuipInstance
// 0x0010 (0x02D8 - 0x02C8)
class AKSQuipInstance : public AKSRadialMenuItemInstance
{
public:
	EKSVoicelineAudience                               VoicelineAudience;                                        // 0x02C8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	int                                                QuipCooldownGroup;                                        // 0x02CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              QuipCooldownDuration;                                     // 0x02D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSQuipInstance");
		return ptr;
	}

};


// Class Killstreak.KSRadialMenuManager
// 0x0020 (0x00D0 - 0x00B0)
class UKSRadialMenuManager : public UActorComponent
{
public:
	class AKSPlayerController*                         CachedOwner;                                              // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bThrottleQuipsAndComms;                                   // 0x00B8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	int                                                QuipsAndCommsAllowedBeforeThrottle;                       // 0x00BC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              QuipAndCommThrottleDetectionPeriod;                       // 0x00C0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              QuipAndCommThrottleCooldown;                              // 0x00C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                CurrentQuipsAndCommsBeforeThrottle;                       // 0x00C8(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bQuipsAndCommsCurrentlyThrottled;                         // 0x00CC(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRadialMenuManager");
		return ptr;
	}


	bool IsThrottled(EMercCosmeticSlot CosmeticSlot);
	void IncreaseUseCount(EMercCosmeticSlot CosmeticSlot);
	void EndThrottle(EMercCosmeticSlot CosmeticSlot);
	void DecreaseUseCount(EMercCosmeticSlot CosmeticSlot);
};


// Class Killstreak.KSRankedManager
// 0x0000 (0x0210 - 0x0210)
class UKSRankedManager : public UKSActivityManagerBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRankedManager");
		return ptr;
	}


	int GetRequiredPlacementMatches(const struct FString& SeasonKey);
	bool GetRankedSeasonKeyForQueue(int QueueId, struct FString* OutKey);
	int GetAllowedPartyRankRange(const struct FString& SeasonKey);
};


// Class Killstreak.KSRemoteReviverInterface
// 0x0000 (0x0028 - 0x0028)
class UKSRemoteReviverInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRemoteReviverInterface");
		return ptr;
	}

};


// Class Killstreak.KSRevealable
// 0x0000 (0x0028 - 0x0028)
class UKSRevealable : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRevealable");
		return ptr;
	}


	void BPI_UnrevealObject();
	void BPI_RevealObject(const struct FLinearColor& NewRevealColor);
	bool BPI_IsRevealed();
	bool BPI_IsHiddenFromReveals();
	float BPI_GetRevealTimeMultiplier();
};


// Class Killstreak.KSRevealManager
// 0x01C8 (0x03E8 - 0x0220)
class AKSRevealManager : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnServerRevealAdded;                                      // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_BlueprintCallable, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                FriendlyColor;                                            // 0x0230(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyColor;                                               // 0x0240(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                NeutralColor;                                             // 0x0250(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                FriendlyObjectiveColor;                                   // 0x0260(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyObjectiveColor;                                      // 0x0270(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                NeutralObjectiveColor;                                    // 0x0280(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AKSGameState*                                GameStateRef;                                             // 0x0290(0x0008) (CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSRevealInfoSerializerContainer            ActiveRevealInfoContainer;                                // 0x0298(0x0120) (CPF_Net, CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSRevealInfo>                       LocalActiveRevealInfos;                                   // 0x03B8(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x20];                                      // 0x03C8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRevealManager");
		return ptr;
	}


	void SetGameStateRef(class AKSGameState* NewGameState);
	void ReevaluateRevealedStatusForActor(class AActor* ActorToCheck);
	void Local_RemoveAllRevealsOfSourceForActor(EKSRevealSource RevealSourcesToRemove, class AActor* ActorToRemove);
	void Local_RemoveAllRevealsOfActor(class AActor* ActorToRemove);
	void Local_AddRevealInfo(const struct FKSRevealInfo& NewRevealInfo, float RevealTimeSeconds, float RevealDelaySeconds);
	class AKSGameState* GetGameStateRef();
	TArray<class AKSPlayerState*> GetAllRevealersForRevealedActor(class AActor* RevealedActor);
	void DetermineRevealParameters(class AActor* RevealTargetToCheck, class AKSPlayerState* PlayerStateToCheck, bool* bRevealTargetToPlayer, struct FLinearColor* OutRevealColor, bool* bShowPlayerRevealedUI, bool* bShowEnemyDetectedUI);
	void Authority_RequestReevaluateRevealedStatusForAllActorsOnAllClients();
	void Authority_RequestReevaluateRevealedStatusForActorOnAllClients(class AActor* ActorToCheck);
	void Authority_RemoveRevealInfo(const struct FKSRevealInfo& RevealInfoToRemove);
	void Authority_RemoveAllRevealsOfSourceForPlayer(EKSRevealSource RevealSourcesToRemove, class AKSPlayerState* PlayerStateToRemove);
	void Authority_RemoveAllRevealsOfActorForInstigator(class AActor* ActorToRemove, class UObject* OwningInstigator);
	void Authority_RemoveAllRevealsOfActorAtPriority(class AActor* ActorToRemove, EKSRevealPriority MaxRemovePriority);
	void Authority_RemoveAllRevealsOfActor(class AActor* ActorToRemove);
	void Authority_RemoveAllRevealsForPlayer(class AKSPlayerState* PlayerStateToRemove);
	void Authority_RemoveAllRevealsForInstigator(class UObject* OwningInstigator);
	void Authority_AddRevealInfo(const struct FKSRevealInfo& NewRevealInfo, float RevealTimeSeconds, float RevealDelaySeconds);
};


// Class Killstreak.KsReverbVolume
// 0x0000 (0x0290 - 0x0290)
class AKsReverbVolume : public AAkReverbVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KsReverbVolume");
		return ptr;
	}

};


// Class Killstreak.KSReverseTracker
// 0x0010 (0x00A8 - 0x0098)
class UKSReverseTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FPlayerDamageInfo>                   PlayerDamageInfo;                                         // 0x0098(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSReverseTracker");
		return ptr;
	}


	void StoreDamageTakenEvent(const struct FAdvancedCombatEvent& DamageEvent);
	void HandleTrackerAccolade(class AKSPlayerState* PlayerState);
	bool CheckVictimDamageInstigator(class AKSPlayerState* Instigator, class AKSPlayerState* Victim, struct FPlayerDamageInfo* OutPlayerInfo);
};


// Class Killstreak.KSRewardsCalculator
// 0x0000 (0x0028 - 0x0028)
class UKSRewardsCalculator : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRewardsCalculator");
		return ptr;
	}


	void GetStatsOrdering(TArray<EPlayerStatType>* StatsOrdering);
	bool GetRewardsFromStat(const struct FPlayerMatchStatInfo& PlayerStatInfo, float* OutExpRewardValue);
	void CalcPlayerRewards(int PlayerTeamNum, class UKSPlayerMatchStats* playerStats, class AKSPlayerController* PlayerController, struct FPlayerRewardsSummary* Rewards);
};


// Class Killstreak.KSSpectatorPawn
// 0x0000 (0x02A8 - 0x02A8)
class AKSSpectatorPawn : public ASpectatorPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpectatorPawn");
		return ptr;
	}


	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
};


// Class Killstreak.KSRideAlongSpectatorPawn
// 0x0000 (0x02A8 - 0x02A8)
class AKSRideAlongSpectatorPawn : public AKSSpectatorPawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRideAlongSpectatorPawn");
		return ptr;
	}

};


// Class Killstreak.KSRocket
// 0x0070 (0x0530 - 0x04C0)
class AKSRocket : public ACharacter
{
public:
	float                                              RocketRotationCatchUpRadians;                             // 0x04C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraInitialLockoutTime;                                 // 0x04C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET
	class USpringArmComponent*                         SpringArm;                                                // 0x04D0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCamera;                                               // 0x04D8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              ExplodeWeaponAsset;                                       // 0x04E0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FlightDuration;                                           // 0x04E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFlightDurationTimerTick;                                // 0x04F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFlightDurationTimerActive;                              // 0x0500(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnFlightDurationTimerComplete;                            // 0x0510(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSTimerComponent*                           FlightDurationTimer;                                      // 0x0520(0x0008) (CPF_Edit, CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRocket");
		return ptr;
	}


	void OnRep_FlightDurationTimer();
	void OnIgnitionKickoff();
	void NativeOnProjectileStopped(const struct FHitResult& HitResult);
	void NativeOnIgnitionKickoff();
	void NativeDetonate(const struct FProjectileExplosionInfo& ExplosionInfo);
	class UKSWeaponAsset* GetWeaponAsset();
	float GetFlightDuration();
	void GamepadLookUp(float Value);
	void GamepadLookRight(float Value);
	void FlightDurationTimerTick(float Seconds);
	void FlightDurationTimerComplete();
	void FlightDurationTimerActive(bool bActive);
	void EnableCameraControl();
	void Detonate(const struct FProjectileExplosionInfo& ExplosionInfo);
	void BroadcastDetonate(const struct FProjectileExplosionInfo& ExplosionInfo);
};


// Class Killstreak.KSRocketMovementComponent
// 0x0040 (0x0650 - 0x0610)
class UKSRocketMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              MaxSpeed;                                                 // 0x0610(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RocketAcceleration;                                       // 0x0614(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RocketIgniteTime;                                         // 0x0618(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              RocketRotationCatchUpDegrees;                             // 0x061C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSmoothRotation;                                          // 0x0620(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0621(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnIgnitionKickoff;                                        // 0x0628(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRocketStop;                                             // 0x0638(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRocketMovementComponent");
		return ptr;
	}


	void StopSimulating(const struct FHitResult& HitResult);
	void OnRocketStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);
	void OnIgnitionKickoffDelegate__DelegateSignature();
};


// Class Killstreak.KSRoundBasedObject
// 0x0010 (0x0230 - 0x0220)
class AKSRoundBasedObject : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	int                                                SideNum;                                                  // 0x0228(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ELocalRequirements                                 SkyDiverRelevanceRules;                                   // 0x022C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ELimitPerRound                                     SkyDiverLimit;                                            // 0x022D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x022E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRoundBasedObject");
		return ptr;
	}


	void ReceiveGameSetup();
	void OnSkyDiveStarted(class AKSCharacter* SkyDiver);
	void OnSkyDiveSkipped(class AKSCharacter* SkyDiver);
	void OnSkyDiveEnded(class AKSCharacter* SkyDiver);
	void OnRoundStarted(const struct FRoundInitState& RoundInitState);
	void OnRoundEnded(class AKSGameState* GameState, const struct FRoundResult& RoundResult);
	void OnGameSetup();
	bool IsSkyDivingActive();
	bool CheckPlayerForMatchingTeam(class APlayerController* PC);
	bool CheckLocalPlayerForMatchingTeam();
	bool CheckCharacterForMatchingTeam(class AKSCharacter* Character);
};


// Class Killstreak.KSRoundedSquareDeadZoneFilter
// 0x0008 (0x0040 - 0x0038)
class UKSRoundedSquareDeadZoneFilter : public UKSAnalogStickFilter
{
public:
	float                                              CardinalSize;                                             // 0x0038(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CornerRadius;                                             // 0x003C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRoundedSquareDeadZoneFilter");
		return ptr;
	}

};


// Class Killstreak.KSRoyaleSafeZone
// 0x0050 (0x0270 - 0x0220)
class AKSRoyaleSafeZone : public AActor
{
public:
	class UBoxComponent*                               ValidityZone;                                             // 0x0220(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset*                              ZoneDamageAsset;                                          // 0x0228(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              StartingRadius;                                           // 0x0230(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FSafeZoneParams                             OldParams;                                                // 0x0234(0x0010) (CPF_Net, CPF_Transient, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FSafeZoneParams                             NewParams;                                                // 0x0244(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_Transient, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              ZoneLerpVelocity;                                         // 0x0254(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZoneLerpAlpha;                                            // 0x0258(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CurrentCenter;                                            // 0x025C(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentRadius;                                            // 0x0268(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ZoneActive;                                               // 0x026C(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               IsShrinking;                                              // 0x026D(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x026E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRoyaleSafeZone");
		return ptr;
	}


	bool TryToDamage(class AActor* TargetActor, float AttemptedDamage);
	void StartShrink();
	void SetNewZoneParams(float NewRadius, float TimeToChange, class AActor* MustContainActor, float MustContainSafeRadius);
	void OnZoneActivated();
	void OnRep_ZoneActive();
	void OnRep_NewParams();
	void OnCircleUpdate(float NewRadius, const struct FVector& NewLocation);
	bool IsZoneActive();
};


// Class Killstreak.KSRuleBasedPhaseProxy
// 0x0040 (0x0068 - 0x0028)
class UKSRuleBasedPhaseProxy : public UKSGamePhaseProxyBase
{
public:
	struct FScriptMulticastDelegate                    OnPhaseCompleted;                                         // 0x0028(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailedToStart;                                          // 0x0038(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0048(0x0014) MISSED OFFSET
	struct FName                                       PhaseName;                                                // 0x005C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSRuleBasedPhaseProxy");
		return ptr;
	}


	static class UKSRuleBasedPhaseProxy* StartRuleBasedPhase(class UObject* WorldContextObject, class UKSPhaseRuleComponent* Rule, float TimeSeconds, const struct FName& PhaseName);
	void OnCompletedWithLeadingTeam(class AKSTeamState* LeadingTeam);
	void OnCompleted();
};


// Class Killstreak.KSSafeZone
// 0x0008 (0x0240 - 0x0238)
class AKSSafeZone : public AKSOutOfBoundsZone
{
public:
	int                                                SideNum;                                                  // 0x0238(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSafeZone");
		return ptr;
	}


	void UnRevealOverlappedCharacter(class AKSCharacter* Character);
	void RevealOverlappedCharacter(class AKSCharacter* Character);
};


// Class Killstreak.KSSceneComponentPoolStatics
// 0x0000 (0x0028 - 0x0028)
class UKSSceneComponentPoolStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSceneComponentPoolStatics");
		return ptr;
	}


	static class UTracerParticleSystemComponent* SpawnTracerEmitterWithRotation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, bool DeactivatesOnDestinationReached, float TravelSpeed, const struct FRotator& Rotation);
	static class UTracerParticleSystemComponent* SpawnTracerEmitter(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& start, const struct FVector& end, bool DeactivatesOnDestinationReached, float TravelSpeed);
	static class UTracerStaticMeshComponent* SpawnMeshTracerWithRotation(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed, const struct FRotator& Rotation);
	static class UTracerStaticMeshComponent* SpawnMeshTracer(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& start, const struct FVector& end, class AActor* Instigator, class UMaterial* FriendlyMaterial, class UMaterialInstance* EnemyMaterial, float TravelSpeed);
	static class UAkComponent* SpawnAkComponentAtLocation(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, class UAkAuxBus* EarlyReflectionsBus, const struct FVector& Location, const struct FRotator& Orientation, const struct FString& EventName, const struct FString& EarlyReflectionsBusName, EOcclusionType OcclusionType, bool UseDistance, bool UseDirection);
	static bool SetSwitchOnNextAkComponentInPool(class UObject* WorldContextObject, const struct FName& SwitchGroup, const struct FName& SwitchState);
	static bool SetRTPCValueOnNextAkComponentInPool(class UObject* WorldContextObject, const struct FName& RTPC, float Value, int InterpolationTimeMs);
};


// Class Killstreak.KSSettingsCallbackInterface
// 0x0000 (0x0028 - 0x0028)
class UKSSettingsCallbackInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSettingsCallbackInterface");
		return ptr;
	}


	bool GetSettingAsInt(const struct FString& Name, int* OutInt);
	bool GetSettingAsFloat(const struct FString& Name, float* OutFloat);
	bool GetSettingAsBool(const struct FString& Name, bool* OutBool);
	void BindSettingCallbacks(const struct FString& Name, const struct FSettingDelegateStruct& SettingDelegateStruct);
};


// Class Killstreak.KSSettingsCallbackStatics
// 0x0000 (0x0028 - 0x0028)
class UKSSettingsCallbackStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSettingsCallbackStatics");
		return ptr;
	}


	static TScriptInterface<class UKSSettingsCallbackInterface> GetLocalSettingsCallbackInterfaceFromPlayer(class APlayerController* InPlayer);
	static TScriptInterface<class UKSSettingsCallbackInterface> GetLocalSettingsCallbackInterface(class UObject* WorldContextObject);
	static bool GetLocalSettingAsIntFromPlayer(const struct FString& Name, class APlayerController* InPlayer, int* OutInt);
	static bool GetLocalSettingAsInt(const struct FString& Name, class UObject* WorldContextObject, int* OutInt);
	static bool GetLocalSettingAsFloatFromPlayer(const struct FString& Name, class APlayerController* InPlayer, float* OutFloat);
	static bool GetLocalSettingAsFloat(const struct FString& Name, class UObject* WorldContextObject, float* OutFloat);
	static bool GetLocalSettingAsBoolFromPlayer(const struct FString& Name, class APlayerController* InPlayer, bool* OutBool);
	static bool GetLocalSettingAsBool(const struct FString& Name, class UObject* WorldContextObject, bool* OutBool);
	static void BindSettingCallbackToPlayer(const struct FString& Name, const struct FSettingDelegateStruct& SettingDelegateStruct, class APlayerController* InPlayer);
	static void BindSettingCallback(const struct FString& Name, const struct FSettingDelegateStruct& SettingDelegateStruct, class UObject* WorldContextObject);
};


// Class Killstreak.KSShield
// 0x0030 (0x0250 - 0x0220)
class AKSShield : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnShieldDamagedDel;                                       // 0x0220(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0230(0x0018) MISSED OFFSET
	bool                                               bShieldEnabled;                                           // 0x0248(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0249(0x0003) MISSED OFFSET
	float                                              Health;                                                   // 0x024C(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSShield");
		return ptr;
	}


	void SetShieldEnabled(bool ShieldEnabled);
	void OnRep_ShieldEnabled();
	void OnRep_Health();
};


// Class Killstreak.KSShopRuleComponent
// 0x0070 (0x0120 - 0x00B0)
class UKSShopRuleComponent : public UKSGameRuleComponent
{
public:
	int                                                StartingCash;                                             // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bResetShopsOnTeamSidesFlipped;                            // 0x00B4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowShopAccessWhileDead;                                // 0x00B5(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableShopOnClose;                                      // 0x00B6(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDisableShopOnSignificantAction;                          // 0x00B7(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLockUndoEachRound;                                       // 0x00B8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	class UClass*                                      ShopClass;                                                // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<int64_t, class AKSPlayerShop*>                PlayerShops;                                              // 0x00C8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FShopOptions                                ShopOptions;                                              // 0x0118(0x0006) (CPF_Edit, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x011E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSShopRuleComponent");
		return ptr;
	}


	void OnGamePhaseChanged(const struct FName& NewPhaseName, const struct FName& PreviousPhaseName);
	class AKSPlayerShop* GetShopForPlayer(class AKSPlayerState* InPlayerState);
	bool CanPlayersAccessShopWhileDead();
};


// Class Killstreak.KSSightStimulusComponent
// 0x0018 (0x00F0 - 0x00D8)
class UKSSightStimulusComponent : public UKSPlayerStimulusComponentBase
{
public:
	float                                              MaximumStimulusDistance;                                  // 0x00D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumStimulusAngle;                                     // 0x00DC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     OffsetFromOwner;                                          // 0x00E0(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCheckForOffsetBlocks;                                    // 0x00EC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00ED(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSightStimulusComponent");
		return ptr;
	}

};


// Class Killstreak.KSSkinBundle
// 0x0098 (0x02D8 - 0x0240)
class UKSSkinBundle : public UKSItemBundle
{
public:
	TSoftObjectPtr<class UClass>                       RogueSelectCharacterClass;                                // 0x0240(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               StarterSkin;                                              // 0x0268(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   SkinFlatImage;                                            // 0x0270(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSJobItem>                   Job;                                                      // 0x0298(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_AssetRegistrySearchable, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bOverrideJobLobbyProps;                                   // 0x02C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02C1(0x0007) MISSED OFFSET
	TArray<struct FSoftObjectPath>                     LobbyPropsToPreload;                                      // 0x02C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSkinBundle");
		return ptr;
	}


	static TSoftObjectPtr<class UKSJobItem> StaticGetAssociatedJob(TSoftObjectPtr<class UKSSkinBundle> InSkinBundle);
	bool IsStarterSkin();
	TSoftObjectPtr<class UTexture2D> GetSkinImage();
	TSoftObjectPtr<class UKSJobItem> GetAssociatedJob();
};


// Class Killstreak.KSSkyDiveListener
// 0x0000 (0x0028 - 0x0028)
class UKSSkyDiveListener : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSkyDiveListener");
		return ptr;
	}

};


// Class Killstreak.KSSmoothingComponent
// 0x0030 (0x0240 - 0x0210)
class UKSSmoothingComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0210(0x0010) MISSED OFFSET
	struct FQuat                                       RotationOffset;                                           // 0x0220(0x0010) (CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	class AKSCharacter*                                CharacterOwner;                                           // 0x0230(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0238(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSmoothingComponent");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule
// 0x0018 (0x0040 - 0x0028)
class UKSSpawnRule : public UObject
{
public:
	struct FName                                       RuleName;                                                 // 0x0028(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               OverridePropertyNames;                                    // 0x0030(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule");
		return ptr;
	}


	void Initialize();
	bool GetWorldSettingsPropertyInt(const struct FName& PropertyName, int* OutInt);
	bool GetWorldSettingsPropertyFloat(const struct FName& PropertyName, float* OutFloat);
	bool GetWorldSettingsPropertyBool(const struct FName& PropertyName, bool* OutBool);
	float GetScoreForSpawn(class AController* Controller, class APlayerStart* PlayerStart);
	struct FName GetRuleName();
};


// Class Killstreak.KSSpawnRule_Bot
// 0x0000 (0x0040 - 0x0040)
class UKSSpawnRule_Bot : public UKSSpawnRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_Bot");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_Proximity
// 0x0008 (0x0048 - 0x0040)
class UKSSpawnRule_Proximity : public UKSSpawnRule
{
public:
	float                                              OuterRadius;                                              // 0x0040(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InnerRadius;                                              // 0x0044(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_Proximity");
		return ptr;
	}


	float GetScoreForDistance(const struct FVector& To, const struct FVector& From);
};


// Class Killstreak.KSSpawnRule_ObjectiveProximity
// 0x0000 (0x0048 - 0x0048)
class UKSSpawnRule_ObjectiveProximity : public UKSSpawnRule_Proximity
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_ObjectiveProximity");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_PIE
// 0x0000 (0x0040 - 0x0040)
class UKSSpawnRule_PIE : public UKSSpawnRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_PIE");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_PlayerEventProximity
// 0x0018 (0x0060 - 0x0048)
class UKSSpawnRule_PlayerEventProximity : public UKSSpawnRule_Proximity
{
public:
	float                                              RecordDuration;                                           // 0x0048(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bScoreDecaysWithTime;                                     // 0x004C(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bConsidersFriendlies;                                     // 0x004D(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bConsidersEnemies;                                        // 0x004E(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bConsidersSelf;                                           // 0x004F(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0050(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_PlayerEventProximity");
		return ptr;
	}


	void OnPlayerEventRecordExpire(const struct FKSPlayerEventRecord& KSPlayerEventRecord);
	void OnPlayerEvent(class AController* Controller);
	void BindToEvent();
};


// Class Killstreak.KSSpawnRule_PlayerProximity
// 0x0008 (0x0050 - 0x0048)
class UKSSpawnRule_PlayerProximity : public UKSSpawnRule_Proximity
{
public:
	bool                                               bConsiderFriendlies;                                      // 0x0048(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bConsiderEnemies;                                         // 0x0049(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseAverageScore;                                         // 0x004A(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x5];                                       // 0x004B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_PlayerProximity");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_Respawn
// 0x0000 (0x0040 - 0x0040)
class UKSSpawnRule_Respawn : public UKSSpawnRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_Respawn");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_Side
// 0x0008 (0x0048 - 0x0040)
class UKSSpawnRule_Side : public UKSSpawnRule
{
public:
	float                                              NullTeamScore;                                            // 0x0040(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_Side");
		return ptr;
	}

};


// Class Killstreak.KSSpawnRule_Vacant
// 0x0008 (0x0048 - 0x0040)
class UKSSpawnRule_Vacant : public UKSSpawnRule
{
public:
	float                                              RequiresAdjustmentScore;                                  // 0x0040(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_ExposeOnSpawn, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnRule_Vacant");
		return ptr;
	}

};


// Class Killstreak.KSSpawnSelectorComponent
// 0x0038 (0x00E8 - 0x00B0)
class UKSSpawnSelectorComponent : public UActorComponent
{
public:
	struct FName                                       FriendlyName;                                             // 0x00B0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSSpawnSelectorTier>                SpawnSelectorTiers;                                       // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET
	TArray<class APlayerStart*>                        PlayerStarts;                                             // 0x00D8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpawnSelectorComponent");
		return ptr;
	}


	TArray<struct FName> GetSelectorComponentFriendlyNameHierarchy();
	struct FName GetFriendlyName();
	void AddSpawnSelectorTier(const struct FScriptDelegate& OnSpawnSelectorTierCreated, float Tolerance, bool bAllowsNegativeScores);
	static void AddSpawnRuleToTier(class UKSSpawnRule* SpawnRule, float Multiplier, struct FKSSpawnSelectorTier* SpawnSelectorTier);
};


// Class Killstreak.KSSpecialty
// 0x0188 (0x03B8 - 0x0230)
class UKSSpecialty : public UKSItem
{
public:
	int                                                RequiredUnlockLevel;                                      // 0x0230(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   DynamicPoseImage;                                         // 0x0238(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   BannerIcon;                                               // 0x0260(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   LeftBannerIcon;                                           // 0x0288(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   RightBannerIcon;                                          // 0x02B0(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   SmallIcon;                                                // 0x02D8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         AvailableKillstreaks;                                     // 0x0300(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         AvailableAbilities;                                       // 0x0310(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSWeaponAsset>>       AvailableGadgets;                                         // 0x0320(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSWeaponAsset>>       AvailablePistols;                                         // 0x0330(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UKSWeaponAttachment>>  AvailableWeaponAttachments;                               // 0x0340(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	ESpecialtyRoleType                                 RoleType;                                                 // 0x0350(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UKSPlayerMod>>         AutoEquippedMods;                                         // 0x0358(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPerkCategory>                PerkSlotOneCategory;                                      // 0x0368(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UPerkCategory>                PerkSlotTwoCategory;                                      // 0x0390(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpecialty");
		return ptr;
	}


	class UTexture2D* GetDynamicPoseImage(bool bAllowSyncLoad);
};


// Class Killstreak.KSSpray
// 0x0028 (0x0318 - 0x02F0)
class UKSSpray : public UKSEmote
{
public:
	TSoftObjectPtr<class UKSActivity>                  StatTrackingActivity;                                     // 0x02F0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpray");
		return ptr;
	}


	TSoftObjectPtr<class UKSActivity> GetStatTrackingActivity();
};


// Class Killstreak.KSSprayInstance
// 0x0090 (0x0358 - 0x02C8)
class AKSSprayInstance : public AKSEmoteInstance
{
public:
	TEnumAsByte<ECollisionChannel>                     SprayTraceChannel;                                        // 0x02C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	float                                              SprayTraceDistance;                                       // 0x02CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FAimData                                    CachedAim;                                                // 0x02D0(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CachedSprayLocation;                                      // 0x0320(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    CachedSprayRotation;                                      // 0x032C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPrimitiveComponent>          CachedSprayTarget;                                        // 0x0338(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     CachedSprayNormal;                                        // 0x0340(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    CachedSprayRotationByNormal;                              // 0x034C(0x000C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSprayInstance");
		return ptr;
	}


	void ServerPlaySpray(const struct FAimData& InSprayAim);
};


// Class Killstreak.KSSpringArmComponent
// 0x0050 (0x02E0 - 0x0290)
class UKSSpringArmComponent : public USpringArmComponent
{
public:
	bool                                               bEnableSmoothLengthReturn;                                // 0x0290(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0291(0x0003) MISSED OFFSET
	float                                              SmoothLengthReturnSpeed;                                  // 0x0294(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SmoothingCurve;                                           // 0x0298(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UCurveVector*                                OffsetCurve;                                              // 0x02A0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bRelativeTargetOffset;                                    // 0x02A8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x02B0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x28];                                      // 0x02B8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSpringArmComponent");
		return ptr;
	}

};


// Class Killstreak.KSSprintCameraShake
// 0x0000 (0x0180 - 0x0180)
class UKSSprintCameraShake : public UKSVelocityCameraShake
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSprintCameraShake");
		return ptr;
	}


	void StopShakeOnStopSprint(bool NewSprint);
};


// Class Killstreak.KSPlayerMatchStats
// 0x0050 (0x0078 - 0x0028)
class UKSPlayerMatchStats : public UObject
{
public:
	TMap<EPlayerStatType, struct FPlayerMatchStatInfo> StatsByType;                                              // 0x0028(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSPlayerMatchStats");
		return ptr;
	}


	bool GetStat(EPlayerStatType StatType, struct FPlayerMatchStatInfo* OutStat);
};


// Class Killstreak.KSStoreItem
// 0x0000 (0x0080 - 0x0080)
class UKSStoreItem : public UPUMG_StoreItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSStoreItem");
		return ptr;
	}


	class UPUMG_StoreItem* GetDLCForVoucer();
	bool GetBundleContents(class UKSGameInstance* GameInstance, TArray<class UPUMG_StoreItem*>* BundleItems, TArray<class UPUMG_StoreItem*>* BlockedItems, TArray<class UPUMG_StoreItem*>* RefundedItems);
};


// Class Killstreak.KSStoreItemHelper
// 0x0090 (0x0310 - 0x0280)
class UKSStoreItemHelper : public UPUMG_StoreItemHelper
{
public:
	int                                                StoreVendorGroupId;                                       // 0x0280(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               StoreVendorsLoaded;                                       // 0x0284(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0285(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStoreItemNewStatusChange;                               // 0x0288(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<int>                                        RecentlySeenItems;                                        // 0x0298(0x0010) (CPF_ZeroConstructor, CPF_Config, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<int, TSoftObjectPtr<class UPUMG_StoreItem>>   ActiveStoreItems;                                         // 0x02A8(0x0050) (CPF_Transient, CPF_Protected, CPF_UObjectWrapper, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET
	bool                                               StoreHasUnseenItems;                                      // 0x0300(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0301(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSStoreItemHelper");
		return ptr;
	}


	bool RedeemInactiveBoost(int InactiveBoostId);
	bool RedeemDLCVoucher(class UPUMG_StoreItem* DLCVoucher);
	bool HasUnseenItems();
	bool HasRecentlySeenItem(int LootId);
	TArray<struct FAccountConsumableDetails> GetInactiveBoosts();
	TArray<struct FAccountConsumableDetails> GetActiveBoosts();
};


// Class Killstreak.KSSwapHandlerProfile
// 0x0010 (0x0038 - 0x0028)
class UKSSwapHandlerProfile : public UObject
{
public:
	TArray<struct FEquipPointDefinition>               EquipPointDefinitions;                                    // 0x0028(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSwapHandlerProfile");
		return ptr;
	}

};


// Class Killstreak.KSSwimmingAnimInst
// 0x0000 (0x10A0 - 0x10A0)
class UKSSwimmingAnimInst : public UKSCharacterAnimInst
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSwimmingAnimInst");
		return ptr;
	}


	void SwimNotifyTransitionStateLock(bool bShouldLock);
	void SwimNotifyTransitionEnd();
};


// Class Killstreak.KSSwimmingPhysicsVolume
// 0x0000 (0x0268 - 0x0268)
class AKSSwimmingPhysicsVolume : public APhysicsVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSSwimmingPhysicsVolume");
		return ptr;
	}

};


// Class Killstreak.KSTabletAnimInstance
// 0x0020 (0x0310 - 0x02F0)
class UKSTabletAnimInstance : public UKSAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x02F0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTabletAnimInstance");
		return ptr;
	}


	bool OpenTablet();
	void FullyOpened();
	void FullyClosed();
	bool CloseTablet();
	bool CheckFullyOpened();
	bool CheckFullyClosed();
};


// Class Killstreak.KSTabletMeshComponent
// 0x0000 (0x0D70 - 0x0D70)
class UKSTabletMeshComponent : public UKSSkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTabletMeshComponent");
		return ptr;
	}


	void OpenTablet();
	void OnOpenComplete();
	void OnCloseComplete();
	void CloseTablet();
};


// Class Killstreak.KSTargeter
// 0x0000 (0x0028 - 0x0028)
class UKSTargeter : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTargeter");
		return ptr;
	}


	class AActor* GetCurrentTarget();
};


// Class Killstreak.KSTargetingDetailsWidget
// 0x0008 (0x0240 - 0x0238)
class UKSTargetingDetailsWidget : public UUserWidget
{
public:
	float                                              CurrentDistance;                                          // 0x0238(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x023C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTargetingDetailsWidget");
		return ptr;
	}


	void OnCurrentDistanceChanged(float NewDistance);
};


// Class Killstreak.KSTeamCreator
// 0x0000 (0x0028 - 0x0028)
class UKSTeamCreator : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTeamCreator");
		return ptr;
	}

};


// Class Killstreak.KSTeamKillTracker
// 0x0018 (0x00B0 - 0x0098)
class UKSTeamKillTracker : public UKSAccoladeTracker
{
public:
	TArray<struct FPlayerTeamTracker>                  PlayerTeamKillTracker;                                    // 0x0098(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                TeamKillRequirement;                                      // 0x00A8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTeamKillTracker");
		return ptr;
	}


	void StoreCombatInfo(const struct FCombatEventInfo& ElimEvent);
	bool HasEliminateVictim(const struct FPlayerTeamTracker& PlayerTeamTracker, int VictimPlayerId);
	bool ContainsPlayer(class AKSPlayerState* PlayerState, struct FPlayerTeamTracker* PlayerTeamTracker, int* TrackerIndex);
	bool CheckRequirements(const struct FCombatEventInfo& ElimEvent);
};


// Class Killstreak.KSTeamState
// 0x0298 (0x04B8 - 0x0220)
class AKSTeamState : public AInfo
{
public:
	int                                                r_TeamNum;                                                // 0x0220(0x0004) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTeamEliminated;                                          // 0x0224(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bTeamEliminatedOrDowned;                                  // 0x0225(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0226(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTeamEliminated;                                         // 0x0228(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamEliminatedOrDowned;                                 // 0x0238(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamMemberEliminatedDel;                                // 0x0248(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTeamMemberDownedDel;                                    // 0x0258(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0268(0x0018) MISSED OFFSET
	TArray<class AKSPlayerState*>                      AllMembers;                                               // 0x0280(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSPlayerState*>                      PlayerMembers;                                            // 0x0290(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x02A0(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMemberAdded;                                            // 0x02B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnMemberRemoved;                                          // 0x02C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSRespawnConfig                            RespawnConfig;                                            // 0x02D0(0x0018) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	int                                                Respawns;                                                 // 0x02E8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRespawnsChangedDel;                                     // 0x02F0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnQueueChangedDel;                                 // 0x0300(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnRespawnConfigChangedDel;                                // 0x0310(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSPlayerState*>                      RespawnQueue;                                             // 0x0320(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSPersistentPlayerData*>             PersistentRespawnQueue;                                   // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                Score;                                                    // 0x0340(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                IntraScore;                                               // 0x0344(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                IntraScoreGoal;                                           // 0x0348(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RoundWins;                                                // 0x034C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                RoundLosses;                                              // 0x0350(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnScoreChanged;                                           // 0x0358(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntraScoreChanged;                                      // 0x0368(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntraScoreGoalChanged;                                  // 0x0378(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveRoleChanged;                                   // 0x0388(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EExtractionTeamType                                TeamType;                                                 // 0x0398(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0399(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPingAdded;                                              // 0x03A0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingRemoved;                                            // 0x03B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPingChanged;                                            // 0x03C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      JobSelectionClass;                                        // 0x03D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSJobSelectionComponent*                    JobSelectionComponent;                                    // 0x03D8(0x0008) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnJobSelectionComponentReady;                             // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x48];                                      // 0x03F0(0x0048) MISSED OFFSET
	int                                                TotalKills;                                               // 0x0438(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalDeaths;                                              // 0x043C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                TotalAssists;                                             // 0x0440(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                SideNum;                                                  // 0x0444(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                LocalSideNum;                                             // 0x0448(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x044C(0x0004) MISSED OFFSET
	TArray<class UKSPersistentPlayerData*>             PersistentTeamMembers;                                    // 0x0450(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentTeamMemberAdded;                              // 0x0460(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnPersistentTeamMemberRemoved;                            // 0x0470(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnTeamCanSurrenderChanged;                                // 0x0480(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               bTeamCanProposeSurrender;                                 // 0x0490(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x27];                                      // 0x0491(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTeamState");
		return ptr;
	}


	bool SubtractTickets(int NumTickets);
	bool ShouldKeepTeamAlive();
	void SetTeamType(EExtractionTeamType NewType);
	void ResetTeamElimination();
	bool RequestQueueRespawn(int Count);
	void OnTeamUpdated();
	void OnTeamMemberRemoved(class AKSPlayerState* LostMember);
	void OnTeamMemberEliminated(class AKSPlayerState* Member);
	void OnTeamMemberDowned(class AKSPlayerState* Member);
	void OnTeamMemberAdded(class AKSPlayerState* NewMember);
	void OnSurrenderPollStarted();
	void OnSurrenderPollFailed();
	void OnSideNumUpdated();
	void OnRep_TeamType();
	void OnRep_TeamEliminatedOrDowned();
	void OnRep_TeamEliminated();
	void OnRep_TeamCanProposeSurrender();
	void OnRep_Score();
	void OnRep_Respawns();
	void OnRep_RespawnQueue();
	void OnRep_RespawnConfig();
	void OnRep_JobSelectionComponent();
	void OnRep_IntraScoreGoal();
	void OnRep_IntraScore();
	void OnPlayerLogout(class AController* Controller);
	void NewPingRequest(const struct FPingInfo& PingInfo);
	void NewPingRemoveRequest(int PingId, class AKSPlayerState* PingingPlayer);
	void NewPingChangeRequest(int PingId, class AKSPlayerState* PingingPlayer, class AKSPlayerState* AcknowledgingPlayer);
	bool IsEliminated();
	bool IsDefending();
	bool IsAttacking();
	EExtractionTeamType GetTeamType();
	TArray<class AKSPlayerState*> GetSortedPlayers();
	struct FKSRespawnConfig GetRespawnConfig();
	int GetRemainingRespawns();
	int GetPlayersRemaining(bool DownAsDead);
	int GetNumberOfPlayers();
	int GetNumberOfHumanPlayers();
	int GetNumberOfBotPlayers();
	int GetLivesRemaining(bool CountDowned);
	int GetExpectedTeamSize();
	void GetAllPersistentTeamMembers(TArray<class UKSPersistentPlayerData*>* OutPersistentTeamMembers);
	TArray<class AKSPlayerState*> GetAllMembers();
	void ForceResetTeamElimination();
	void EliminateTeam();
	bool AllPlayersEliminatedOrDowned();
};


// Class Killstreak.KSTeamState_Control
// 0x0008 (0x04C0 - 0x04B8)
class AKSTeamState_Control : public AKSTeamState
{
public:
	int                                                ControlScore;                                             // 0x04B8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTeamState_Control");
		return ptr;
	}

};


// Class Killstreak.KSThreatComponent
// 0x00E8 (0x0198 - 0x00B0)
class UKSThreatComponent : public UActorComponent
{
public:
	float                                              ThreatRefreshPeriod;                                      // 0x00B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentThreat;                                            // 0x00B4(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ThreatBucketValue;                                        // 0x00B8(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x00BC(0x000C) MISSED OFFSET
	class UKSThreatComponent*                          OwningThreat;                                             // 0x00C8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSThreatComponent*>                  OwnedThreats;                                             // 0x00D0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                OwningCharacter;                                          // 0x00E0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSCharacter>                 LocalPlayerCharacter;                                     // 0x00E8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	float                                              SelfThreatValue;                                          // 0x0100(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AllyThreatValue;                                          // 0x0104(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultThreatValue;                                       // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	TArray<float>                                      BucketValues;                                             // 0x0110(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseFocused;                                              // 0x0120(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	float                                              FocusedValue;                                             // 0x0124(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FocusedWeight;                                            // 0x0128(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FocusedInnerAngle;                                        // 0x012C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0130(0x0004) MISSED OFFSET
	float                                              FocusedOuterAngle;                                        // 0x0134(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0138(0x0004) MISSED OFFSET
	bool                                               bUseFocusTarget;                                          // 0x013C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x3];                                       // 0x013D(0x0003) MISSED OFFSET
	float                                              FocusTargetValue;                                         // 0x0140(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FocusTargetWeight;                                        // 0x0144(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FocusTargetInnerAngle;                                    // 0x0148(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	float                                              FocusTargetOuterAngle;                                    // 0x0150(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	bool                                               bUseProximity;                                            // 0x0158(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	float                                              ProximityValue;                                           // 0x015C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProximityWeight;                                          // 0x0160(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProximityInnerDistance;                                   // 0x0164(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProximityOuterDistance;                                   // 0x0168(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseBehind;                                               // 0x016C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3];                                       // 0x016D(0x0003) MISSED OFFSET
	float                                              BehindValue;                                              // 0x0170(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BehindWeight;                                             // 0x0174(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BehindInnerAngle;                                         // 0x0178(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	float                                              BehindOuterAngle;                                         // 0x0180(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	bool                                               bUseEffectiveRange;                                       // 0x0188(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0189(0x0003) MISSED OFFSET
	float                                              EffectiveRangeValue;                                      // 0x018C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EffectiveRangeWeight;                                     // 0x0190(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSThreatComponent");
		return ptr;
	}


	void DebugThreatLevels(bool Show);
};


// Class Killstreak.KSTimerComponent
// 0x00C0 (0x0170 - 0x00B0)
class UKSTimerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    TimerActive;                                              // 0x00B0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TimerComplete;                                            // 0x00C0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FPGame_ReplicatedTimer                      ReplicatedTimer;                                          // 0x00D0(0x0038) (CPF_Net, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FKSTimerState                               TimerState;                                               // 0x0108(0x0008) (CPF_Net, CPF_RepNotify, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	struct FKSTimerState                               LocalTimerState;                                          // 0x0110(0x0008) (CPF_Transient, CPF_DuplicateTransient, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0118(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTimerComponent");
		return ptr;
	}


	void StopTimer();
	void StartTimer(float Seconds);
	void OnRep_TimerState();
	bool IsTimerComplete();
	bool IsTimerActive();
	float GetTimeRemaining();
	float GetInitialTime();
};


// Class Killstreak.KSTitle
// 0x0018 (0x0248 - 0x0230)
class UKSTitle : public UKSItem
{
public:
	struct FText                                       TitleText;                                                // 0x0230(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSTitle");
		return ptr;
	}

};


// Class Killstreak.KSUISessionManager
// 0x0098 (0x00C0 - 0x0028)
class UKSUISessionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x7B];                                      // 0x0028(0x007B) MISSED OFFSET
	bool                                               bAchievementIntegrationEnabled;                           // 0x00A3(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasInitialInventory;                                     // 0x00A4(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	int                                                DivertFromQueueId;                                        // 0x00A8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                DivertToQueueId;                                          // 0x00AC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EQueueDivertType                                   QueueDivertType;                                          // 0x00B0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	float                                              ShelteredMMAttemptTimeout;                                // 0x00B4(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ShelteredMMLevelLimit;                                    // 0x00B8(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	int                                                ForcedBotMatchLimit;                                      // 0x00BC(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSUISessionManager");
		return ptr;
	}

};


// Class Killstreak.KSVehicle
// 0x0380 (0x0610 - 0x0290)
class AKSVehicle : public AWheeledVehicle
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0290(0x0010) MISSED OFFSET
	class UKSVehicleMovementComponent4W*               KSVehicleMovementComponent;                               // 0x02A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x02A8(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSVehicleSeatComponent*>             Seats;                                                    // 0x02B0(0x0010) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class AKSCharacter*, class UKSVehicleSeatComponent*> RiderMap;                                                 // 0x02C0(0x0050) (CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnVehicleSeatingChanged;                                  // 0x0310(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FText                                       VehicleName;                                              // 0x0320(0x0018) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToGetIn;                                              // 0x0338(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSpeedToEnter;                                          // 0x033C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAngleFromVehicleToInteract;                            // 0x0340(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SwapToDriverSeatHoldTime;                                 // 0x0344(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSCharacter*                                Driver;                                                   // 0x0348(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSRiderSeatPair>                    Riders;                                                   // 0x0350(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_RepNotify, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSCharacter*>                        Interacters;                                              // 0x0360(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0370(0x0001) MISSED OFFSET
	bool                                               PreventRiderSilhouette;                                   // 0x0371(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0372(0x0002) MISSED OFFSET
	float                                              DetachedParachuteLinearDamping;                           // 0x0374(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeUntilParachuteDestroyed;                              // 0x0378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ParachuteDetachImpulse;                                   // 0x037C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               ParachuteImpulseBoneNames;                                // 0x0388(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      ParachuteMesh;                                            // 0x0398(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x38];                                      // 0x03A0(0x0038) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnManualDetachmentAvailable;                              // 0x03D8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnManualDetachmentUnavailable;                            // 0x03E8(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03F8(0x0008) MISSED OFFSET
	TArray<struct FName>                               ValidInteractionTypes;                                    // 0x0400(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USpringArmComponent*                         SpringArm;                                                // 0x0410(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCameraComponent*                            MainCamera;                                               // 0x0418(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0420(0x0018) MISSED OFFSET
	float                                              RiderCameraBlendTime;                                     // 0x0438(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RiderCameraBlendExponent;                                 // 0x043C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraXTurnRate;                                          // 0x0440(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraYTurnRate;                                          // 0x0444(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraDeadZoneRate;                                       // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraMinHorizontalAngle;                                 // 0x044C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraMaxHorizontalAngle;                                 // 0x0450(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraMinVerticalAngle;                                   // 0x0454(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CameraMaxVerticalAngle;                                   // 0x0458(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FReplicatedViewInfo                         ViewInfo;                                                 // 0x045C(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              MaxHealth;                                                // 0x0464(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              CurrentHealth;                                            // 0x0468(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	float                                              CurrentHealthStage;                                       // 0x0470(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVehicleHealthChanged;                                   // 0x0478(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               Destroyed;                                                // 0x0488(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0489(0x0003) MISSED OFFSET
	struct FVector                                     LocalImpulsePosition;                                     // 0x048C(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        DestroyedMesh;                                            // 0x0498(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UPrimitiveComponent*>                 DamageableComponents;                                     // 0x04A0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	TMap<float, struct FKSVehicleDestructionStage>     HealthStages;                                             // 0x04B8(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<EDamageCategory, float>                       Vulnerabilities;                                          // 0x0508(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DamageImpulseMultiplier;                                  // 0x0558(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	class UKSWeaponAsset*                              DestructionDamageWeapon;                                  // 0x0560(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      DestructionDamageTypeClass;                               // 0x0568(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x40];                                      // 0x0570(0x0040) MISSED OFFSET
	float                                              MinSpeedToDamageHitPlayer;                                // 0x05B0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSpeedToDamageHitPlayer;                                // 0x05B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinPlayerDamageMultiplier;                                // 0x05B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxPlayerDamageMultiplier;                                // 0x05BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              PlayerDamageCooldown;                                     // 0x05C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinSpeedForImpactDamage;                                  // 0x05C4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSpeedForImpactDamage;                                  // 0x05C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinImpactDamage;                                          // 0x05CC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxImpactDamage;                                          // 0x05D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              VehicleDamageCooldown;                                    // 0x05D4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinImpactAngleFromVehicleUp;                              // 0x05D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxImpactAngleFromVehicleUp;                              // 0x05DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinAngleToSlideCorrect;                                   // 0x05E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAngleToSlideCorrect;                                   // 0x05E4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxSlideCorrectionSpeed;                                  // 0x05E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0xC];                                       // 0x05EC(0x000C) MISSED OFFSET
	class UKSWeaponAsset*                              ImpactDamageWeapon;                                       // 0x05F8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      ImpactDamageTypeClass;                                    // 0x0600(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           PlayerHitComponent;                                       // 0x0608(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_EditConst, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVehicle");
		return ptr;
	}


	void VehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void VehicleFeatureReleased();
	void VehicleFeaturePressed();
	void VehicleFeature(bool Pressed);
	void UseReleased();
	void UsePressed();
	void TurnCameraY(float Rate);
	void TurnCameraX(float Rate);
	void SwapReleased();
	void SwapPressed();
	void StopParachute();
	void Steer(float Value);
	void StartParachute();
	void ServerVehicleFeature(bool Pressed);
	void ServerUpdateRotation(const struct FReplicatedViewInfo& NewViewInfo);
	void ServerHorn(bool Pressed);
	void ServerGetOut(class AKSCharacter* Rider);
	void ServerGetInNextEmptySeat(class AKSCharacter* Rider);
	void ServerAirSpeed(float Value);
	void RiderDestroyed(class AActor* DestroyedActor);
	void ResetVehicle(const struct FRoundInitState& RoundInitState);
	void ResetInput();
	void ResetCameraRotations();
	void PlayHealthStageChange(const struct FKSVehicleDestructionStage& Stage);
	void OnRep_Riders();
	void OnRep_Driver();
	void OnRep_Destroyed();
	void OnRep_CurrentHealthStage();
	void OnRep_CurrentHealth();
	void MoveForward(float Value);
	void HornReleased();
	void HornPressed();
	void Horn(bool Pressed);
	void HideParachute();
	bool GetInHighestPriorityEmptySeat(class AKSCharacter* Rider);
	class AKSCharacter* GetDriver();
	void Explode();
	void ExitPressed();
	void Deteriorate();
	void BroadcastVehicleFeature(bool Pressed);
	void BroadcastHorn(bool Pressed);
	void Brake(float Value);
	void AirSpeed(float Value);
};


// Class Killstreak.KSVehicle_Remote
// 0x00A0 (0x06B0 - 0x0610)
class AKSVehicle_Remote : public AKSVehicle
{
public:
	class AKSCharacter*                                OwningCharacter;                                          // 0x0610(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     JumpVector;                                               // 0x0618(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     JumpGroundTraceVector;                                    // 0x0624(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              JumpCooldown;                                             // 0x0630(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0634(0x000C) MISSED OFFSET
	float                                              TotalBatteryDuration;                                     // 0x0640(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              UpdateReplicatedBatteryTimerPeriod;                       // 0x0644(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0648(0x0010) MISSED OFFSET
	struct FPGame_ReplicatedTimer                      ReplicatedBatteryTimer;                                   // 0x0658(0x0038) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              RevealHoldDuration;                                       // 0x0690(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RevealConeAngle;                                          // 0x0694(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RevealMaxDistance;                                        // 0x0698(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RevealEffectDuration;                                     // 0x069C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x06A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVehicle_Remote");
		return ptr;
	}


	void SetOwningCharacter(class AKSCharacter* Rider);
	void OnRep_OwningCharacter();
	void Jump();
	void GetRemainingBattery(float* RemainingTime, float* TotalTime);
	void ExecuteReveal();
};


// Class Killstreak.KSVehicleMovementComponent4W
// 0x0050 (0x0458 - 0x0408)
class UKSVehicleMovementComponent4W : public UWheeledVehicleMovementComponent4W
{
public:
	bool                                               ParachuteDeployed;                                        // 0x0408(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ParachuteDetached;                                        // 0x0409(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x040A(0x0002) MISSED OFFSET
	float                                              SpeedToConsiderParachuteDeployment;                       // 0x040C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceToDeployParachute;                                // 0x0410(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceToDetachParachute;                                // 0x0414(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DistanceToAllowManualDetachment;                          // 0x0418(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeUntilParachuteDeployed;                               // 0x041C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ParachuteDownwardSpeed;                                   // 0x0420(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ManualDetachmentAllowed;                                  // 0x0424(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	float                                              ReorientedPitch;                                          // 0x0428(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToReorientPitch;                                      // 0x042C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FallingTurnSpeed;                                         // 0x0430(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              SlowFallingSpeed;                                         // 0x0434(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefaultFallingSpeed;                                      // 0x0438(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FastFallingSpeed;                                         // 0x043C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToReachDesiredFallSpeed;                              // 0x0440(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AirSpeedInput;                                            // 0x0444(0x0004) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAngleToPreventRoll;                                    // 0x0448(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xC];                                       // 0x044C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVehicleMovementComponent4W");
		return ptr;
	}


	void StopParachute();
	void StartParachute();
	void OnRep_ParachuteDeployed();
	void OnRep_ManualDetachmentAllowed();
	void AttemptManualDetachment();
};


// Class Killstreak.KSVehicleSeatComponent
// 0x0050 (0x0260 - 0x0210)
class UKSVehicleSeatComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0210(0x0004) MISSED OFFSET
	struct FReplicatedViewInfo                         AimCameraViewInfo;                                        // 0x0214(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x021C(0x0018) MISSED OFFSET
	struct FName                                       AttachSocket;                                             // 0x0234(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	class UAnimMontage*                                GetInSequence;                                            // 0x0240(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAnimMontage*                                GetOutSequence;                                           // 0x0248(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAnimSequence*                               IdleSequence;                                             // 0x0250(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UAnimSequence*                               LeanOutSequence;                                          // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVehicleSeatComponent");
		return ptr;
	}


	class USpringArmComponent* GetSeatSpringArm();
};


// Class Killstreak.KSVehicleWheel
// 0x0078 (0x0168 - 0x00F0)
class UKSVehicleWheel : public UVehicleWheel
{
public:
	TMap<TEnumAsByte<EPhysicalSurface>, class UParticleSystem*> WheelEffectMap;                                           // 0x00F0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    WheelParticleSystem;                                      // 0x0140(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       AttachSocketOverrideName;                                 // 0x0148(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       VehicleSpeedParticleParameter;                            // 0x0150(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              EffectSpeedInterpolationAlpha;                            // 0x0158(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumWheelEffectSpeed;                                  // 0x015C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaximumWheelEffectSpeed;                                  // 0x0160(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0164(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVehicleWheel");
		return ptr;
	}

};


// Class Killstreak.KSViewModel
// 0x0408 (0x0628 - 0x0220)
class AKSViewModel : public AActor
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0220(0x0060) MISSED OFFSET
	struct FName                                       ViewModelName;                                            // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FKSEquipmentContainer                       EquipmentContainer;                                       // 0x0288(0x0228) (CPF_ContainsInstancedReference, CPF_NativeAccessSpecifierPrivate)
	struct FVector                                     MaxAxisRotation;                                          // 0x04B0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              IdleSecondsToResetRotation;                               // 0x04BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ResetRotationSpeedRadians;                                // 0x04C0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RotationRatePerAxis;                                      // 0x04C4(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x48];                                      // 0x04D0(0x0048) MISSED OFFSET
	bool                                               bModelDataIsDirty;                                        // 0x0518(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	class UKSWeaponAsset*                              DesiredWeaponAsset;                                       // 0x0520(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<unsigned char, class UKSWeaponAttachment*>    DesiredAttachments;                                       // 0x0528(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponComponent*                          ActiveWeaponComponent;                                    // 0x0578(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UKSWeaponAttachmentCosmeticInst*>     ActiveAttachmentCosmetics;                                // 0x0580(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              ActiveWeaponModelMeshComponent;                           // 0x0590(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSEquipmentId                              PendingWeaponComponentId;                                 // 0x0598(0x0004) (CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x059C(0x0004) MISSED OFFSET
	class UKSWeaponAsset*                              PendingWeaponAsset;                                       // 0x05A0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponComponent*                          PendingWeaponComponent;                                   // 0x05A8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x50];                                      // 0x05B0(0x0050) UNKNOWN PROPERTY: PendingWeaponCosmeticIds
	TArray<struct FPendingCosmeticInfo>                PendingInfos;                                             // 0x0600(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ModelUpdateDebounceTime;                                  // 0x0610(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0xC];                                       // 0x0614(0x000C) MISSED OFFSET
	bool                                               bClearActiveModelWhileTransitioning;                      // 0x0620(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0621(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSViewModel");
		return ptr;
	}


	void OnAnimInstanceInitialized();
	void BeginRotationReset();
};


// Class Killstreak.KSViewModelInterface
// 0x0000 (0x0028 - 0x0028)
class UKSViewModelInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSViewModelInterface");
		return ptr;
	}


	struct FName GetViewModelName();
};


// Class Killstreak.KSVOComponent
// 0x00C8 (0x0178 - 0x00B0)
class UKSVOComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00B0(0x0018) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x00C8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x38];                                      // 0x00D0(0x0038) MISSED OFFSET
	float                                              GlobalCooldownDuration;                                   // 0x0108(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	TMap<int, float>                                   CooldownGroupMap;                                         // 0x0110(0x0050) (CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              TimeNextEventCanPlayAfter;                                // 0x0160(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptDelegate                             OnVOLineFinished;                                         // 0x0164(0x0014) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              VODuckingAmount;                                          // 0x0174(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVOComponent");
		return ptr;
	}


	void TeamStateChanged(class AKSPlayerState* PlayerState);
	void ServerPostVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PostVOToServer(const struct FKSVoicelineEvent& VoicelineEvent);
	void PostVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void PlayerStateChanged(class AKSPlayerState* PlayerState);
	void OwnerPossessedBy(class AController* Controller);
	void OnReadyToPlay();
	void ForcePlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void FinishedLineCallback(EAkCallbackType in_eType, class UAkCallbackInfo* in_pCallbackInfo);
	void ConditionalPlayVO(const struct FKSVoicelineEvent& VoicelineEvent);
	void BindToTeamStateEvents(class AKSTeamState* TeamState);
	void BindToPlayerStateEvents(class AKSPlayerState* PlayerState);
	void BindToPlayerControllerEvents(class AKSPlayerController* PlayerController);
	void BindToPingManagerEvents(class UKSPingManager* PingManager);
	void BindToGameStateEvents(class AKSGameState* GameState);
	void BindToEvents();
	void BindToCharacterEvents(class AKSCharacter* Character);
	void BindToActivatableModEvents(class UKSModInst_Activated* ActivatableMod);
	void AnnounceBombSpotted(bool Armed);
};


// Class Killstreak.KSVoiceActor
// 0x0000 (0x0028 - 0x0028)
class UKSVoiceActor : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVoiceActor");
		return ptr;
	}

};


// Class Killstreak.KSVOPriorityManager
// 0x0018 (0x00C8 - 0x00B0)
class UKSVOPriorityManager : public UActorComponent
{
public:
	EKSVoiceOverPriority                               AnnouncerSquelchThreshold;                                // 0x00B0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSVoiceOverPriority                               AnnouncerDuckThreshold;                                   // 0x00B1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSVoiceOverPriority                               CharacterSquelchThreshold;                                // 0x00B2(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EKSVoiceOverPriority                               CharacterDuckThreshold;                                   // 0x00B3(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	TArray<struct FPriorityVoiceLine>                  PlayingLines;                                             // 0x00B8(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSVOPriorityManager");
		return ptr;
	}

};


// Class Killstreak.KSWaterFXVolume
// 0x0078 (0x02D0 - 0x0258)
class AKSWaterFXVolume : public ATriggerVolume
{
public:
	float                                              WaterFXUpdatePeriod;                                      // 0x0258(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              SurfaceOffsetZ;                                           // 0x025C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<class AActor*, float>                         ActorCountdownMap;                                        // 0x0260(0x0050) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_EditConst, CPF_NativeAccessSpecifierPublic)
	struct FBoxSphereBounds                            CachedBounds;                                             // 0x02B0(0x001C) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWaterFXVolume");
		return ptr;
	}


	void OnWaterFXTriggered(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
	void OnWaterExited(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
	void OnWaterEntered(class AActor* TriggeringActor, const struct FVector& SurfaceRelevantLocation, bool bIsFullySubmerged);
};


// Class Killstreak.KSWAttachmentCosmetic_VarScope
// 0x0010 (0x01B8 - 0x01A8)
class UKSWAttachmentCosmetic_VarScope : public UKSWeaponAttachmentCosmeticInst
{
public:
	class UKSWeaponAttachment_VarScope*                VariableScopeAsset;                                       // 0x01A8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      ScopeZoomIndex;                                           // 0x01B0(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWAttachmentCosmetic_VarScope");
		return ptr;
	}


	void OnRep_ScopeZoomIndex();
};


// Class Killstreak.KSWayPoint
// 0x00A0 (0x02F8 - 0x0258)
class AKSWayPoint : public AKSMapPoint
{
public:
	TMap<class AKSWayPointSet*, struct FKSWayPointLink> WayPointSetLinks;                                         // 0x0258(0x0050) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FKSWayPointLink                             DefaultWayPointLinks;                                     // 0x02A8(0x0020) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	float                                              DefensePointProbability;                                  // 0x02C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefensePointWaitTimeMin;                                  // 0x02CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DefensePointWaitTimeMax;                                  // 0x02D0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	TArray<class AKSDefensePoint*>                     DefensePointsForward;                                     // 0x02D8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class AKSDefensePoint*>                     DefensePointsReverse;                                     // 0x02E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWayPoint");
		return ptr;
	}


	TArray<class AKSWayPoint*> GetNextWayPoints(class AKSWayPointSet* WayPointSet);
};


// Class Killstreak.KSWayPointSet
// 0x0038 (0x0258 - 0x0220)
class AKSWayPointSet : public AActor
{
public:
	int                                                WayPointSet;                                              // 0x0220(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
	TArray<class AKSWayPoint*>                         Waypoints;                                                // 0x0228(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<int>                                        ForwardSides;                                             // 0x0238(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<int>                                        ReversingSides;                                           // 0x0248(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWayPointSet");
		return ptr;
	}


	void UpdateWayPointVisuals();
	bool ShouldSideReverseOnThisWaypointSet(int SideNum);
	void LinkWayPoints();
	bool CanSideUseThisWaypointSet(int SideNum);
};


// Class Killstreak.KSWayPointSetCollection
// 0x00A0 (0x00C8 - 0x0028)
class UKSWayPointSetCollection : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0028(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWayPointSetCollection");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_Aimed
// 0x0140 (0x0858 - 0x0718)
class AKSWeapon_Aimed : public AKSWeapon
{
public:
	struct FAimData                                    CachedAim;                                                // 0x0718(0x0050) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	uint16_t                                           LastHitValidationRequestId;                               // 0x0768(0x0002) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x076A(0x0006) MISSED OFFSET
	TMap<uint16_t, struct FHitValidationRecoveryInfo>  HitValidationRecoveryList;                                // 0x0770(0x0050) (CPF_Transient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bAimOverShoulder;                                         // 0x07C0(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x07C1(0x0003) MISSED OFFSET
	float                                              CachedAimBonus;                                           // 0x07C4(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bApplyAccuracyServerSide;                                 // 0x07C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2B];                                      // 0x07C9(0x002B) MISSED OFFSET
	float                                              Range;                                                    // 0x07F4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EFiredReplicationFlags                             FiredReplicationFlags;                                    // 0x07F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x07F9(0x0007) MISSED OFFSET
	class UKSAimCorrectionData*                        AimAssistCorrectionData;                                  // 0x0800(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowAimCorrection;                                      // 0x0808(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0809(0x0003) MISSED OFFSET
	float                                              HeadAimCorrectionOffset;                                  // 0x080C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadAimCorrectionOffsetPC;                                // 0x0810(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadAimCorrectionRange;                                   // 0x0814(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionOffset;                                  // 0x0818(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionOffsetPC;                                // 0x081C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyAimCorrectionRange;                                   // 0x0820(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowHipAimCorrection;                                   // 0x0824(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0825(0x0003) MISSED OFFSET
	float                                              HeadHipAimCorrectionOffset;                               // 0x0828(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadHipMouseAimCorrectionOffset;                          // 0x082C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HeadHipAimCorrectionRange;                                // 0x0830(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyHipAimCorrectionOffset;                               // 0x0834(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyHipMouseAimCorrectionOffset;                          // 0x0838(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BodyHipAimCorrectionRange;                                // 0x083C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ValidationSweepRadius;                                    // 0x0840(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimOriginOffsetLenience;                                  // 0x0844(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              AimOriginAngularLenience;                                 // 0x0848(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              MinimumShotDirCoincidence;                                // 0x084C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AdvancedDisplay, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              CosAngularLenience;                                       // 0x0850(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0854(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Aimed");
		return ptr;
	}


	void ValidateReceivedAimData(struct FAimData* ReceivedAim);
	void ValidateHitWithAimData(const struct FAimData& ReceivedAim, struct FHitResult* Hit);
	static struct FAimData StaticDefaultGetAimFromOrigin(const struct FTransform& InOrigin);
	static struct FAimData StaticDefaultGetAim(class UKSWeaponAsset* InWeaponAsset, class AActor* InWeaponOwner, EKSCharacterAimMode InAimMode);
	void ServerSetAimOverShoulder(bool bNewAimDownSights);
	void ServerReFireWeaponAimed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim);
	void ServerProcessHits(const struct FAimData& ReceivedAim, TArray<struct FKSCompressedHit> CompressedHits, uint16_t RequestID);
	void ServerFireWeaponAimedCompressed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim, uint16_t LastRequestId);
	void ServerFireWeaponAimed(const struct FWeaponStateChangeRequest& request, const struct FAimData& ReceivedAim);
	bool IsInOrTransitioningToAOS();
	bool IsInOrTransitioningToAlternate();
	bool IsInOrTransitioningToADS();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	void InternalGetActorsToIgnore(TArray<class AActor*>* ActorsToIgnore);
	float GetRange();
	EKSCharacterAimMode GetOwnerAimMode();
	float GetHeadAimCorrectionRange();
	float GetHeadAimCorrectionOffset(bool bMouse);
	struct FFullFireRepData GetFullFireRepData();
	float GetCurrentAccuracy();
	struct FAimData GetCachedAim();
	struct FAimData GetAim();
	TArray<class AActor*> GetActorsToIgnore();
	void ApplyView(const struct FAimData& InAim, struct FAimData* OutAim);
	bool ApplyAimAssist(struct FAimData* InOutAim);
	void ApplyAccuracy(const struct FAimData& InAim, struct FAimData* OutAim);
	bool AllowAimCorrection();
};


// Class Killstreak.KSWeapon_Build
// 0x00C8 (0x0920 - 0x0858)
class AKSWeapon_Build : public AKSWeapon_Aimed
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0858(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInvalidBuildPlacementDel;                               // 0x0870(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0880(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnValidBuildPlacementDel;                                 // 0x0898(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     BuildLocationOffset;                                      // 0x08A8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceHorizontal;                         // 0x08B4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceVertical;                           // 0x08B8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxAdjustBuildDistanceOffGround;                          // 0x08BC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSBuildPreview*                             BuildPreviewActor;                                        // 0x08C0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSBuildState                                      BuildState;                                               // 0x08C8(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3F];                                      // 0x08C9(0x003F) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBuildSpawned;                                           // 0x0908(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0918(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Build");
		return ptr;
	}


	void OnRep_BuildState();
	void GetDesiredBuildLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation);
	class UClass* GetBuildPreviewActorClass();
	class UClass* GetBuildActorClass();
};


// Class Killstreak.KSWeapon_DirectTarget
// 0x0018 (0x0730 - 0x0718)
class AKSWeapon_DirectTarget : public AKSWeapon
{
public:
	class AActor*                                      ActiveTarget;                                             // 0x0718(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FKSTargeterConfig                           TargeterConfig;                                           // 0x0720(0x000C) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x072C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_DirectTarget");
		return ptr;
	}


	void SubmitTargetSelection(class AActor* TargetCandidate);
	void PopulateValidTargets(TArray<class AActor*>* ValidTargetArray);
	void OnActiveTargetDestroyed(class AActor* DestroyedActor);
	bool IsTargetValid(class AActor* TestActor);
	void ClientRejectTargetSelection();
};


// Class Killstreak.KSWeapon_Projectile
// 0x0008 (0x0860 - 0x0858)
class AKSWeapon_Projectile : public AKSWeapon_Aimed
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0858(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Projectile");
		return ptr;
	}


	void OnFullyCooked();
	struct FName GetProjectileInfoKey();
};


// Class Killstreak.KSWeapon_GrenadeThrow
// 0x0038 (0x0898 - 0x0860)
class AKSWeapon_GrenadeThrow : public AKSWeapon_Projectile
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0860(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGrenadeThrown;                                          // 0x0878(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0888(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_GrenadeThrow");
		return ptr;
	}


	void OnFuseTimerExpired(float MinHandRemainingFuse);
	void DoFumble();
};


// Class Killstreak.KSWeapon_MacGuffin
// 0x0010 (0x0868 - 0x0858)
class AKSWeapon_MacGuffin : public AKSWeapon_Aimed
{
public:
	bool                                               bDropOffSuccess;                                          // 0x0858(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHasBeenDropped;                                          // 0x0859(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x085A(0x0002) MISSED OFFSET
	float                                              DropThrowSpeed;                                           // 0x085C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              DropPositionOffset;                                       // 0x0860(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0864(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_MacGuffin");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_Melee
// 0x0078 (0x08D0 - 0x0858)
class AKSWeapon_Melee : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnMeleeHit;                                               // 0x0858(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0868(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileSpawned;                                      // 0x0880(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0890(0x0020) MISSED OFFSET
	class AKSProjectile*                               Projectile;                                               // 0x08B0(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AKSProjectile*                               FakeProjectile;                                           // 0x08B8(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAsset_Melee*                        MeleeWeaponAsset;                                         // 0x08C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsInQuickMelee;                                          // 0x08C8(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x08C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Melee");
		return ptr;
	}


	bool ShouldThrowWeapon();
	void OnRep_Projectile();
	void OnOwnerAimStateChanged(EKSCharacterAimMode WeaponStateChange);
	void OnLungingChanged(bool Lunging);
	void JumpToFire(EWeaponStateNew PreviousState);
	void IncPrefireSkipWindow();
	class AKSProjectile* GetProjectile();
};


// Class Killstreak.KSWeapon_Proximity
// 0x0068 (0x0780 - 0x0718)
class AKSWeapon_Proximity : public AKSWeapon
{
public:
	class UClass*                                      ProximityComponentClass;                                  // 0x0718(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSProximityComponent*                       ProximityComponent;                                       // 0x0720(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCacheProximityActorsWhileFiring;                         // 0x0728(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bProximityActiveOnlyInHand;                               // 0x0729(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x072A(0x0006) MISSED OFFSET
	TArray<class AActor*>                              ProximityActors;                                          // 0x0730(0x0010) (CPF_ZeroConstructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              CachedProximityActors;                                    // 0x0740(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_RepNotify, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>                 ProximityComponents;                                      // 0x0750(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class UPrimitiveComponent*>                 CachedProximityComponents;                                // 0x0760(0x0010) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnCachedProximityActorsUpdatedDel;                        // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Proximity");
		return ptr;
	}


	void ProximityActorUpdated(class AActor* Actor, class UPrimitiveComponent* Component, const struct FKSActorProximityInfo& ProximityInfo);
	void OnCachedProximityActorsUpdated();
	struct FVector GetProximityTraceRelativeLocation();
	class UPrimitiveComponent* GetProximityComponent();
	TArray<class AActor*> GetCachedProximityActors();
};


// Class Killstreak.KSWeapon_RemoteRocket
// 0x0040 (0x0758 - 0x0718)
class AKSWeapon_RemoteRocket : public AKSWeapon
{
public:
	float                                              CameraBlendTime;                                          // 0x0718(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<EViewTargetBlendFunction>              CameraBlendFunction;                                      // 0x071C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x071D(0x0003) MISSED OFFSET
	float                                              CameraBlendExp;                                           // 0x0720(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               CameraLockOutgoing;                                       // 0x0724(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0725(0x0003) MISSED OFFSET
	float                                              PostDestroyDelay;                                         // 0x0728(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x072C(0x0004) MISSED OFFSET
	class UClass*                                      RemoteRocketToSpawn;                                      // 0x0730(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     RemoteRocketRelativeLocation;                             // 0x0738(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class AKSRocket*                                   SpawnedRemoteRocket;                                      // 0x0748(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class AController*                                 RocketController;                                         // 0x0750(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_RemoteRocket");
		return ptr;
	}


	void OnRocketDestroyed(class AActor* RocketActor);
	void OnPostDestroyDelayComplete();
	class AKSRocket* GetSpawnedRocket();
	struct FTransform GetRocketSpawnWorldTransform();
};


// Class Killstreak.KSWeapon_RemoteThrow
// 0x0030 (0x08C8 - 0x0898)
class AKSWeapon_RemoteThrow : public AKSWeapon_GrenadeThrow
{
public:
	struct FScriptMulticastDelegate                    OnDetonatorEquipped;                                      // 0x0898(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x08A8(0x0010) MISSED OFFSET
	class UKSWeaponAsset*                              DetonatorAsset;                                           // 0x08B8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               ReadyForDetonator;                                        // 0x08C0(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x08C1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_RemoteThrow");
		return ptr;
	}


	void SwapToDetonator();
	void OnProjectileReleased();
	void OnAttachedChargeDestroyed(class AActor* DestroyedCharge);
	void GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges);
};


// Class Killstreak.KSWeapon_RemoteThrowAndTrigger
// 0x0010 (0x08D8 - 0x08C8)
class AKSWeapon_RemoteThrowAndTrigger : public AKSWeapon_RemoteThrow
{
public:
	bool                                               bUseSequentialDetonation;                                 // 0x08C8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x08C9(0x0003) MISSED OFFSET
	struct FName                                       AltFireSubWeaponName;                                     // 0x08CC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_RemoteThrowAndTrigger");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_RemoteTrigger
// 0x0060 (0x0778 - 0x0718)
class AKSWeapon_RemoteTrigger : public AKSWeapon
{
public:
	struct FScriptMulticastDelegate                    OnRemoteThrowEquipped;                                    // 0x0718(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0728(0x0020) MISSED OFFSET
	TArray<TWeakObjectPtr<class AKSProjectile_RemoteTrigger>> AttachedCharges;                                          // 0x0748(0x0010) (CPF_Net, CPF_ZeroConstructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxDetonationRange;                                       // 0x0758(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDetonationReady;                                        // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSWeaponAsset>               RemoteThrowAsset;                                         // 0x0770(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_RemoteTrigger");
		return ptr;
	}


	void SwapOffDetonator();
	void OnAttachedChargeKilled(class AKSProjectile* KilledProjectile);
	void OnAttachedChargeDestroyed(class AActor* DestroyedCharge);
	void GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges);
	void Detonate();
};


// Class Killstreak.KSWeapon_RemoteVehicle
// 0x0048 (0x0760 - 0x0718)
class AKSWeapon_RemoteVehicle : public AKSWeapon
{
public:
	class UClass*                                      RemoteVehicleToSpawn;                                     // 0x0718(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FTransform                                  RemoteVehicleRelativeTransform;                           // 0x0720(0x0030) (CPF_Edit, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class AKSVehicle_Remote*                           SpawnedRemoteVehicle;                                     // 0x0750(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0758(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_RemoteVehicle");
		return ptr;
	}


	void VehicleDestroyed();
};


// Class Killstreak.KSWeapon_ReviveDirect
// 0x0000 (0x0730 - 0x0730)
class AKSWeapon_ReviveDirect : public AKSWeapon_DirectTarget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_ReviveDirect");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_ReviveDartDirect
// 0x0028 (0x0758 - 0x0730)
class AKSWeapon_ReviveDartDirect : public AKSWeapon_ReviveDirect
{
public:
	TWeakObjectPtr<class AKSProjectile_ReviveDart>     DartProjectile;                                           // 0x0730(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSucceed;                                                // 0x0738(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x0748(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_ReviveDartDirect");
		return ptr;
	}


	void OnReviveSucceed();
	void OnReviveFailed();
};


// Class Killstreak.KSWeapon_Targeted
// 0x0040 (0x0758 - 0x0718)
class AKSWeapon_Targeted : public AKSWeapon
{
public:
	struct FScriptMulticastDelegate                    DisplayTargetList;                                        // 0x0718(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TargetSelectCancelled;                                    // 0x0728(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	TArray<class AActor*>                              PotentialTargets;                                         // 0x0738(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               SelectTargetOnRetrieve;                                   // 0x0748(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0749(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       TargetedActor;                                            // 0x074C(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0754(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Targeted");
		return ptr;
	}


	bool TargetCurrentlyValid(class AActor* TestTarget);
	void SubmitTargetedActor(class AActor* TargetActor);
	void ConfirmTargetSelection(class AActor* TargetActor);
	void CancelTargetSelection();
};


// Class Killstreak.KSWeapon_ReviveDrone
// 0x0010 (0x0768 - 0x0758)
class AKSWeapon_ReviveDrone : public AKSWeapon_Targeted
{
public:
	class UClass*                                      DroneClass;                                               // 0x0758(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        DroneActor;                                               // 0x0760(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_ReviveDrone");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_ReviveDroneDirect
// 0x0080 (0x07B0 - 0x0730)
class AKSWeapon_ReviveDroneDirect : public AKSWeapon_ReviveDirect
{
public:
	struct FScriptMulticastDelegate                    OnDroneReviveBegin;                                       // 0x0730(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneReviveComplete;                                    // 0x0740(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneAbort;                                             // 0x0750(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneTargetRevive;                                      // 0x0760(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneTargetDied;                                        // 0x0770(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneDestroyed;                                         // 0x0780(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDroneSpawned;                                           // 0x0790(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      DroneClass;                                               // 0x07A0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AKSAgent_RevivalDrone>        DroneActor;                                               // 0x07A8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_ReviveDroneDirect");
		return ptr;
	}


	void OnRep_DroneActor();
	void OnDroneDestroy(class AActor* SupposedDroneActor);
	void OnDroneAborted();
	void GetDesiredSpawnLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation);
};


// Class Killstreak.KSWeapon_Shotgun
// 0x0010 (0x0868 - 0x0858)
class AKSWeapon_Shotgun : public AKSWeapon_Aimed
{
public:
	TArray<struct FAimData>                            CachedPelletSpread;                                       // 0x0858(0x0010) (CPF_ZeroConstructor, CPF_Deprecated, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Shotgun");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_TargetFriendly
// 0x0000 (0x0730 - 0x0730)
class AKSWeapon_TargetFriendly : public AKSWeapon_DirectTarget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_TargetFriendly");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_TargetSurface
// 0x0028 (0x0880 - 0x0858)
class AKSWeapon_TargetSurface : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnSurfaceTargetFireFailure;                               // 0x0858(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSurfaceValidityChanged;                                 // 0x0868(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	bool                                               ValidTarget;                                              // 0x0878(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0879(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_TargetSurface");
		return ptr;
	}

};


// Class Killstreak.KSWeapon_Zipline
// 0x0038 (0x0890 - 0x0858)
class AKSWeapon_Zipline : public AKSWeapon_Aimed
{
public:
	struct FScriptMulticastDelegate                    OnEndPointUpdated;                                        // 0x0858(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	class UClass*                                      ZipLineClass;                                             // 0x0868(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AKSZipLine*                                  Zipline;                                                  // 0x0870(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ETraceTypeQuery>                       PreviewTraceChannel;                                      // 0x0878(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0879(0x0003) MISSED OFFSET
	float                                              MaxRange;                                                 // 0x087C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinRange;                                                 // 0x0880(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ProjectileSpeed;                                          // 0x0884(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0888(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeapon_Zipline");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAnimInstance
// 0x00A0 (0x0390 - 0x02F0)
class UKSWeaponAnimInstance : public UKSAnimInstance
{
public:
	float                                              m_fIKBlendInTime;                                         // 0x02F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              m_fIKBlendOutTime;                                        // 0x02F4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     m_vADSOffset;                                             // 0x02F8(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               m_bIsMoving;                                              // 0x0304(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0305(0x0003) MISSED OFFSET
	float                                              m_fMovingAlpha;                                           // 0x0308(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                m_nFireImpulseCounter;                                    // 0x030C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               m_bFireImpulse;                                           // 0x0310(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0311(0x0003) MISSED OFFSET
	float                                              m_fADSAlpha;                                              // 0x0314(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               m_bIsSprinting;                                           // 0x0318(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0319(0x0003) MISSED OFFSET
	float                                              m_fLeadingPitch;                                          // 0x031C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              m_fLeadingYaw;                                            // 0x0320(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              m_fLeadingPitchADS;                                       // 0x0324(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              m_fLeadingYawADS;                                         // 0x0328(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingPitch;                                             // 0x032C(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingYaw;                                               // 0x033C(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingPitchADS;                                          // 0x034C(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FWeaponLeadingInfo                          LeadingYawADS;                                            // 0x035C(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x036C(0x000C) MISSED OFFSET
	int                                                m_LandImpulseCounter;                                     // 0x0378(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                m_JumpImpulseCounter;                                     // 0x037C(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               m_bFoldIronSights;                                        // 0x0380(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	int                                                WeaponAnimIndex;                                          // 0x0384(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bPlayerCrouching;                                         // 0x0388(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	float                                              TempPhoneFlip;                                            // 0x038C(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAnimInstance");
		return ptr;
	}


	void SetWeaponState(class UKSWeaponComponent* OwningWeaponComponent, EWeaponStateNew OldState, EWeaponStateNew NewState);
	void SetShieldActive(bool bIsShieldActive);
	void SetScopeScaleAlpha(float NewAlpha);
	void SetRevolverChamberRotatae(const struct FRotator& NewRevolverChamberRot);
	void PlayFireAnimationBP();
	void InitSetWeaponState(EWeaponStateNew NewWeaponState);
	void InitSetUseWeaponAdditive(bool bUseAdditive);
	void InitSetScopeMeshScale(float NewAlpha, bool bIsRevolver, bool bIsMultiStageReload);
	void InitSetHideMagazine(float HideMagazineAlpha);
	void InitSetFoldingStock(bool bIsStockFolded, const struct FRotator& StockRotationTarget, const struct FRotator& StockAltRotationTarget);
};


// Class Killstreak.KSWeaponAsset_Build
// 0x0058 (0x08D0 - 0x0878)
class UKSWeaponAsset_Build : public UKSWeaponAsset
{
public:
	TSoftObjectPtr<class UClass>                       SoftBuildActorClass;                                      // 0x0878(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       SoftBuildPreviewActorClass;                               // 0x08A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              BuildActivationDelay;                                     // 0x08C8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x08CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_Build");
		return ptr;
	}


	TSoftObjectPtr<class UClass> GetSoftBuildPreviewActorClass();
	TSoftObjectPtr<class UClass> GetSoftBuildActorClass();
	float GetBuildActivationDelay();
};


// Class Killstreak.KSWeaponAsset_WithProjectile
// 0x0080 (0x08F8 - 0x0878)
class UKSWeaponAsset_WithProjectile : public UKSWeaponAsset
{
public:
	TSoftObjectPtr<class UClass>                       ProjectileClass;                                          // 0x0878(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSWeaponAsset>               ProjectileWeaponAsset;                                    // 0x08A0(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FKSProjectileWeaponInfo>             AdditionalProjectileWeaponInfos;                          // 0x08C8(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              RadialDamageOriginOffsetDistance;                         // 0x08D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              TimeToFullyCook;                                          // 0x08DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CookSpeedMultiplierCurve;                                 // 0x08E0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 CookDamageMultiplierCurve;                                // 0x08E8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UCurveFloat*                                 BounceDamageMultiplierCurve;                              // 0x08F0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_WithProjectile");
		return ptr;
	}


	float GetTimeToFullyCook();
	float GetRadialDamageOriginOffsetDistance();
	struct FKSProjectileWeaponInfo GetProjectileWeaponInfo(const struct FName& Key);
	TSoftObjectPtr<class UKSWeaponAsset> GetProjectileWeaponAsset();
	float GetProjectileRadius();
	float GetProjectileMaxSpeed();
	float GetProjectileMaxSimulationTimeStep();
	float GetProjectileMaxSimulationIterations();
	float GetProjectileInitialSpeed(float PitchAngle);
	float GetProjectileGravityScale();
	TSoftObjectPtr<class UClass> GetProjectileClass();
	float GetCookSpeedMultiplier(float TimeCooked);
	float GetCookDamageMultiplier(float TimeCooked);
	float GetBounceDamageMultiplier(int NumBounces);
};


// Class Killstreak.KSWeaponAsset_Grenade
// 0x0040 (0x0938 - 0x08F8)
class UKSWeaponAsset_Grenade : public UKSWeaponAsset_WithProjectile
{
public:
	bool                                               bAllowCooking;                                            // 0x08F8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x08F9(0x0003) MISSED OFFSET
	float                                              MinimumCookTime;                                          // 0x08FC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              FuseTime;                                                 // 0x0900(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinHandRemainingFuse;                                     // 0x0904(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFuseTicksInHand;                                         // 0x0908(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0909(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       GrenadeClass;                                             // 0x0910(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_Grenade");
		return ptr;
	}


	float GetMinimumCookTime();
	float GetMinHandRemainingFuse();
	float GetFuseTime();
	bool GetFuseTicksInHand();
	bool AllowCooking();
};


// Class Killstreak.KSWeaponAsset_Melee
// 0x0038 (0x0930 - 0x08F8)
class UKSWeaponAsset_Melee : public UKSWeaponAsset_WithProjectile
{
public:
	struct FVector                                     MeleeSphereOffset;                                        // 0x08F8(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MeleeSphereRadius;                                        // 0x0904(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<TEnumAsByte<EObjectTypeQuery>>              OverlapObjectTypes;                                       // 0x0908(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TEnumAsByte<ETraceTypeQuery>                       TraceChannel;                                             // 0x0918(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0919(0x0003) MISSED OFFSET
	float                                              MaxLungeDistance;                                         // 0x091C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MaxLungeDuration;                                         // 0x0920(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeConeHalfAngle;                                       // 0x0924(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LungeConeOriginDistanceOffset;                            // 0x0928(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x092C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_Melee");
		return ptr;
	}


	TArray<TEnumAsByte<EObjectTypeQuery>> GetOverlapObjectTypes();
	TEnumAsByte<ETraceTypeQuery> GetMeleeTraceChannel();
	float GetMeleeSphereRadius();
	struct FVector GetMeleeSphereOffset();
	float GetMaxLungeDuration();
	float GetMaxLungeDistance();
	float GetLungeConeHalfAngle();
};


// Class Killstreak.KSWeaponAsset_Pierce
// 0x0030 (0x0928 - 0x08F8)
class UKSWeaponAsset_Pierce : public UKSWeaponAsset_WithProjectile
{
public:
	float                                              DamageScalarAfterWalls;                                   // 0x08F8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x08FC(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       PierceClass;                                              // 0x0900(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_Pierce");
		return ptr;
	}


	float GetDamageScalarAfterWalls();
};


// Class Killstreak.KSWeaponAsset_Shotgun
// 0x0028 (0x08A0 - 0x0878)
class UKSWeaponAsset_Shotgun : public UKSWeaponAsset
{
public:
	int                                                PelletsPerShot;                                           // 0x0878(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimDownSightsAccuracy;                                    // 0x087C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseSpreadPattern;                                        // 0x0880(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0881(0x0007) MISSED OFFSET
	TArray<struct FVector2D>                           SpreadPattern;                                            // 0x0888(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              HitPercentageForHeadshot;                                 // 0x0898(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x089C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAsset_Shotgun");
		return ptr;
	}


	void GetSpreadPattern(TArray<struct FVector2D>* OutPattern);
	int GetPelletsPerShot();
	float GetHitPercentageForHeadshot();
	float GetAimDownSightsAccuracy();
	bool DoesUseSpreadPattern();
};


// Class Killstreak.KSWeaponAttachment
// 0x00A0 (0x02D0 - 0x0230)
class UKSWeaponAttachment : public UKSItem
{
public:
	TSoftObjectPtr<class UClass>                       FunctionalClass;                                          // 0x0230(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UClass>                       CosmeticClass;                                            // 0x0258(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       ValidAttachPoints;                                        // 0x0280(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       CompatibleWeaponTypes;                                    // 0x02A0(0x0020) (CPF_Edit, CPF_Config, CPF_DisableEditOnInstance, CPF_AssetRegistrySearchable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldBeInAttachmentCollection;                          // 0x02C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_AssetRegistrySearchable, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02C1(0x0007) MISSED OFFSET
	class UAttachmentCollection*                       GlobalWeaponAttachmentCollection;                         // 0x02C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_EditConst, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment");
		return ptr;
	}


	void GetValidAttachPoints(struct FGameplayTagContainer* OutAttachPoints);
	TSoftObjectPtr<class UClass> GetFunctionalClass();
	TSoftObjectPtr<class UClass> GetCosmeticClass();
	void GetCompatibleWeaponTypes(struct FGameplayTagContainer* OutWeaponTypes);
	bool CanAttachToWeaponType(const struct FGameplayTag& InWeaponType);
	bool CanAttachTo(class AKSWeapon* InWeapon, struct FGameplayTagContainer* AvailableAttachPoints);
};


// Class Killstreak.KSWeaponAttachment_AccuracyKick
// 0x0028 (0x02F8 - 0x02D0)
class UKSWeaponAttachment_AccuracyKick : public UKSWeaponAttachment
{
public:
	bool                                               bReplaceKickbackModule;                                   // 0x02D0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02D1(0x0007) MISSED OFFSET
	class UKickbackModule*                             KickbackModule;                                           // 0x02D8(0x0008) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              KickbackResetTime;                                        // 0x02E0(0x0004) (CPF_Edit, CPF_ExportObject, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bModifyKickbackScale;                                     // 0x02E4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02E5(0x0003) MISSED OFFSET
	float                                              KickbackScale;                                            // 0x02E8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bModifyBaseAccuracy;                                      // 0x02EC(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	float                                              BaseAccuracyMultiplier;                                   // 0x02F0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_AccuracyKick");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachment_DefaultAmmo
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_DefaultAmmo : public UKSWeaponAttachment
{
public:
	int                                                DefaultAmmoIncrease;                                      // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_DefaultAmmo");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachment_ExtMagazine
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_ExtMagazine : public UKSWeaponAttachment
{
public:
	int                                                ClipSize;                                                 // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_ExtMagazine");
		return ptr;
	}


	int GetClipSize();
};


// Class Killstreak.KSWeaponAttachment_ExtMagPercent
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_ExtMagPercent : public UKSWeaponAttachment
{
public:
	float                                              ClipSizeIncreaseMultiplier;                               // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EExtendedMagazineRounding                          RoundingType;                                             // 0x02D4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02D5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_ExtMagPercent");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachment_LongBarrel
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_LongBarrel : public UKSWeaponAttachment
{
public:
	float                                              FalloffRangeMultiplier;                                   // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_LongBarrel");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachment_QuickMag
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_QuickMag : public UKSWeaponAttachment
{
public:
	float                                              ReloadPeriodMultiplier;                                   // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_QuickMag");
		return ptr;
	}


	float GetReloadPeriodMultiplier();
};


// Class Killstreak.KSWeaponAttachment_Reactive
// 0x0058 (0x0328 - 0x02D0)
class UKSWeaponAttachment_Reactive : public UKSWeaponAttachment
{
public:
	bool                                               UtilizeOnComponentStateChanged;                           // 0x02D0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnFire;                                            // 0x02D1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnReload;                                            // 0x02D2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnInactive;                                          // 0x02D3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnHolster;                                           // 0x02D4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnIdleTimer;                                         // 0x02D5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x02D6(0x0002) MISSED OFFSET
	float                                              TimerResetOnIdle;                                         // 0x02D8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAimModeChanged;                                  // 0x02DC(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               HideOnADS;                                                // 0x02DD(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAnyPlayerDeath;                                  // 0x02DE(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnKillingAnEnemyWithAnything;                      // 0x02DF(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnKillingAnEnemyWithYourReactiveWeapon;            // 0x02E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnYourDeath;                                         // 0x02E1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UtilizeOnAnyPlayerDowned;                                 // 0x02E2(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnDowningAnEnemyWithAnything;                      // 0x02E3(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnDowningAnEnemyWithYourReactiveWeapon;            // 0x02E4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnYourDown;                                          // 0x02E5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UtilizeOnOwnedPawnInstigateDamage;                        // 0x02E6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamagingAnEnemyWithAnything;                     // 0x02E7(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamagingAnEnemyWithYourReactiveWeapon;           // 0x02E8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               ResetOnYouTakeDamage;                                     // 0x02E9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnDamageThresholdWithYourReactiveWeaponOnly;       // 0x02EA(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x02EB(0x0001) MISSED OFFSET
	float                                              TargetTriggerDamageThreshold;                             // 0x02EC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TimerOnDamageThresholdReset;                              // 0x02F0(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               UtilizeOnMultiDownAchieved;                               // 0x02F4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnMutlipleDownsWithAnything;                       // 0x02F5(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               TriggerOnMutlipleDownsWithYourReactiveWeapon;             // 0x02F6(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x02F7(0x0001) MISSED OFFSET
	int                                                TargetNumberOfDownsToAchieve;                             // 0x02F8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x02FC(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       CosmeticStateReplicatorClass;                             // 0x0300(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_Reactive");
		return ptr;
	}


	TSoftObjectPtr<class UClass> GetCosmeticStateClass();
};


// Class Killstreak.KSWeaponAttachment_Scope
// 0x0000 (0x02D0 - 0x02D0)
class UKSWeaponAttachment_Scope : public UKSWeaponAttachment
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_Scope");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachment_ScopeFixedFOV
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_ScopeFixedFOV : public UKSWeaponAttachment_Scope
{
public:
	float                                              AimDownSightsFov;                                         // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_ScopeFixedFOV");
		return ptr;
	}


	float GetAimDownSightsFieldOfView();
};


// Class Killstreak.KSWeaponAttachment_ScopeMultiply
// 0x0008 (0x02D8 - 0x02D0)
class UKSWeaponAttachment_ScopeMultiply : public UKSWeaponAttachment_Scope
{
public:
	float                                              ScopeMultiplier;                                          // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_ScopeMultiply");
		return ptr;
	}


	float GetScopeMultiplier();
};


// Class Killstreak.KSWeaponAttachment_Silencer
// 0x0010 (0x02E0 - 0x02D0)
class UKSWeaponAttachment_Silencer : public UKSWeaponAttachment
{
public:
	float                                              AudibleRange;                                             // 0x02D0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bModifyFalloffRange;                                      // 0x02D4(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02D5(0x0003) MISSED OFFSET
	float                                              FalloffRangeMultiplier;                                   // 0x02D8(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_Silencer");
		return ptr;
	}


	float GetAudibleRange();
};


// Class Killstreak.KSWeaponAttachment_VarScope
// 0x0018 (0x02E8 - 0x02D0)
class UKSWeaponAttachment_VarScope : public UKSWeaponAttachment_Scope
{
public:
	TArray<float>                                      ScopeSettings;                                            // 0x02D0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EKSVariableScopeType                               ScopeType;                                                // 0x02E0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02E0(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachment_VarScope");
		return ptr;
	}


	TArray<float> GetScopeFOVOptions(class UKSWeaponAsset* InAsset);
	float GetScopeFOV(class UKSWeaponAsset* InAsset, int nIndex);
	int GetNumScopeOptions();
};


// Class Killstreak.KSWeaponAttachmentInstance
// 0x0080 (0x0130 - 0x00B0)
class UKSWeaponAttachmentInstance : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B0(0x0020) MISSED OFFSET
	class AKSWeapon*                                   WeaponOwner;                                              // 0x00D0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponAttachmentCosmeticInst*             AttachmentCosmeticComponent;                              // 0x00D8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x00E0(0x0018) MISSED OFFSET
	struct FKSEquipRepInfo                             AttachPoint;                                              // 0x00F8(0x0014) (CPF_Edit, CPF_Net, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x14];                                      // 0x010C(0x0014) MISSED OFFSET
	class UKSWeaponAttachment*                         AttachmentAsset;                                          // 0x0120(0x0008) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bPersistsOnWeaponDrop;                                    // 0x0128(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0129(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachmentInstance");
		return ptr;
	}


	void SetPersistsOnWeaponDrop(bool bEnable);
	void OnUnattached();
	void OnRep_AttachPoint();
	void OnRep_AttachmentAsset();
	void OnAttached();
	bool IsAttached();
	bool GetPersistsOnWeaponDrop();
	class AKSWeapon* GetOwningWeapon();
	struct FGameplayTag GetAttachPoint();
	class UKSWeaponAttachment* GetAttachmentAsset();
};


// Class Killstreak.KSWeaponAttachmentInst_Reactive
// 0x0008 (0x0138 - 0x0130)
class UKSWeaponAttachmentInst_Reactive : public UKSWeaponAttachmentInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachmentInst_Reactive");
		return ptr;
	}

};


// Class Killstreak.KSWeaponAttachmentInst_VarScope
// 0x0010 (0x0140 - 0x0130)
class UKSWeaponAttachmentInst_VarScope : public UKSWeaponAttachmentInstance
{
public:
	class UKSWeaponAttachment_VarScope*                VariableScopeAsset;                                       // 0x0130(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      ScopeZoomIndex;                                           // 0x0138(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachmentInst_VarScope");
		return ptr;
	}


	void ServerSetScopeZoomIndex(unsigned char NewIndex);
};


// Class Killstreak.KSWeaponAttachmentSkinDetails
// 0x0060 (0x0090 - 0x0030)
class UKSWeaponAttachmentSkinDetails : public UPrimaryDataAsset
{
public:
	TSoftObjectPtr<class UKSWeaponAsset>               Weapon;                                                   // 0x0030(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_AssetRegistrySearchable, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       AttachmentCosmetic;                                       // 0x0058(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_AssetRegistrySearchable, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FDataTableInfo>                      AssetOverrideTables;                                      // 0x0080(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponAttachmentSkinDetails");
		return ptr;
	}

};


// Class Killstreak.KSWeaponComponent
// 0x0500 (0x0618 - 0x0118)
class UKSWeaponComponent : public UKSEquipmentCosmeticComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET
	EWeaponComponentTickType                           WeaponComponentTickType;                                  // 0x0120(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowTickingOnItemDropActor;                             // 0x0121(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      ForcedWeaponLODWhenLocallyViewed;                         // 0x0122(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceResidentFlagOnWeaponTextures;                       // 0x0123(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowAnimationAsItemDrop;                                // 0x0124(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EWeaponStateNew                                    WeaponState;                                              // 0x0125(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_DisableEditOnTemplate, CPF_EditConst, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	EWeaponStateNew                                    InitialState;                                             // 0x0126(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0127(0x0001) MISSED OFFSET
	class UKSWeaponAsset*                              WeaponAsset;                                              // 0x0128(0x0008) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPendingFire;                                             // 0x0130(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      InitialAmmoInClip;                                        // 0x0131(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      AmmoInClip;                                               // 0x0132(0x0001) (CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bInitializationStarted;                                   // 0x0133(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bInitializationCompleted;                                 // 0x0134(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAmmoChangedDel;                                         // 0x0138(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0148(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFireRateChangedDel;                                     // 0x0160(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0170(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponComponentInitializationCompletedDel;              // 0x0178(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x19];                                      // 0x0188(0x0019) MISSED OFFSET
	bool                                               bCachedWeaponVisibility;                                  // 0x01A1(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x2];                                       // 0x01A2(0x0002) MISSED OFFSET
	float                                              MeshMaxDrawDistance;                                      // 0x01A4(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUseMaxDistForCharacterOwnedWeapons;                      // 0x01A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHideAncillaryMagazine;                                   // 0x01A9(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x2];                                       // 0x01AA(0x0002) MISSED OFFSET
	int                                                AncillaryMagazineIndex;                                   // 0x01AC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bIsGrenade;                                               // 0x01B0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bUsesHeavyGadget;                                         // 0x01B1(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x2];                                       // 0x01B2(0x0002) MISSED OFFSET
	struct FName                                       MeleeComboTarget;                                         // 0x01B4(0x0008) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               FlaggedForThrownMelee;                                    // 0x01BC(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	EWeaponComponentAttachmentType                     WeaponAttachType;                                         // 0x01BD(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x2];                                       // 0x01BE(0x0002) MISSED OFFSET
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x01C0(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UPhysicsAsset*                               PhysicsAsset;                                             // 0x01C8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       WeaponSkeletalMeshCollisionProfileName;                   // 0x01D0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bLoadWeaponSkeletalMeshComponentOnServer;                 // 0x01D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	TArray<struct FName>                               ActiveRequiredDedicatedServerCharacterBoneNames;          // 0x01E0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	EVisibilityBasedAnimTickOption                     MeshComponentVisibilityBasedAnimTickOption;               // 0x01F0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bAllowMeshCompositing;                                    // 0x01F1(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x6];                                       // 0x01F2(0x0006) MISSED OFFSET
	class USkeletalMesh*                               ScopeMesh;                                                // 0x01F8(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                ScopeAttachmentTag;                                       // 0x0200(0x0008) (CPF_Edit, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMesh*                               MagazineMesh;                                             // 0x0208(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                MagazineAttachmentTag;                                    // 0x0210(0x0008) (CPF_Edit, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMesh*                               StockMesh;                                                // 0x0218(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                StockAttachmentTag;                                       // 0x0220(0x0008) (CPF_Edit, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMesh*                               SilencerMesh;                                             // 0x0228(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                SilencerAttachmentTag;                                    // 0x0230(0x0008) (CPF_Edit, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class USkeletalMesh*                               GripMesh;                                                 // 0x0238(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FGameplayTag                                GripAttachmentTag;                                        // 0x0240(0x0008) (CPF_Edit, CPF_EditConst, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FName>                               KeywordsForCompositingMesh;                               // 0x0248(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       BaseMeshOverrideKeyword;                                  // 0x0258(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       MeshNeedsCPUAccessKeyword;                                // 0x0260(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       PhysicsAssetOverrideKeyword;                              // 0x0268(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      AnimInstance;                                             // 0x0270(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       AnimInstanceOverrideKeyword;                              // 0x0278(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       EquipSocketOverride;                                      // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSWeaponSkeletalMeshComponent*              WeaponSkeletalMeshComponent;                              // 0x0288(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bHideOnCreation;                                          // 0x0290(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bDuplicate;                                               // 0x0291(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x2];                                       // 0x0292(0x0002) MISSED OFFSET
	struct FName                                       DuplicateSocket;                                          // 0x0294(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x4];                                       // 0x029C(0x0004) MISSED OFFSET
	class UKSWeaponSkeletalMeshComponent*              DuplicateSkeletalMeshComponent;                           // 0x02A0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bWeaponLoweringEnabled;                                   // 0x02A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData14[0x3];                                       // 0x02A9(0x0003) MISSED OFFSET
	struct FName                                       CharacterRightShoulderBoneName;                           // 0x02AC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CharacterRightElbowBoneName;                              // 0x02B4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CharacterLeftShoulderBoneName;                            // 0x02BC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CharacterLeftElbowBoneName;                               // 0x02C4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       CharacterChestBoneName;                                   // 0x02CC(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FName                                       WeaponBarrelBoneName;                                     // 0x02D4(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponLowerSphereTraceRadius;                             // 0x02DC(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponLowerTestDistanceAdjustment;                        // 0x02E0(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData15[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	TArray<struct FAncillaryWeaponMeshInfo>            AncillaryMeshData;                                        // 0x02E8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_AdvancedDisplay, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              WeaponLowerViewDotThreshold;                              // 0x02F8(0x0004) (CPF_ZeroConstructor, CPF_Config, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bResetLocked;                                             // 0x02FC(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData16[0x3];                                       // 0x02FD(0x0003) MISSED OFFSET
	uint32_t                                           NextBroadcastId;                                          // 0x0300(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	uint32_t                                           LastBroadcastReceived;                                    // 0x0304(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TArray<class USkeletalMeshComponent*>              AncillaryMeshes;                                          // 0x0308(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	bool                                               bPreventRetreive;                                         // 0x0318(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceDisableLHIK;                                        // 0x0319(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileSprinting;                                // 0x031A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileMoving;                                   // 0x031B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileCrouching;                                // 0x031C(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandMelee;                                         // 0x031D(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileIdle;                                     // 0x031E(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachHandWhileZiplining;                                // 0x031F(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceAttachHandIfNotNonCom;                              // 0x0320(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bForceDisableRHIK;                                        // 0x0321(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bAttachRightHand;                                         // 0x0322(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bReplicateWeaponStateAsVariable;                          // 0x0323(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceBroadcastAllWeaponStateChanges;                     // 0x0324(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForceReliableWeaponStateBroadcast;                       // 0x0325(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData17[0x2];                                       // 0x0326(0x0002) MISSED OFFSET
	int                                                ShotsFiredSinceLastReload;                                // 0x0328(0x0004) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bFirstReload;                                             // 0x032C(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldBroadcastEmptyFire;                                // 0x032D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldReliablyBroadcastEmptyFire;                        // 0x032E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldReliablyBroadcastAmmoChanges;                      // 0x032F(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnWeaponComponentStateChangedDel;                         // 0x0330(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData18[0x18];                                      // 0x0340(0x0018) MISSED OFFSET
	bool                                               bIsInAction;                                              // 0x0358(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bNonComUseLimitedMovement;                                // 0x0359(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bComUseLimitedMovement;                                   // 0x035A(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bEngUseLimitedMovement;                                   // 0x035B(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData19[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    ZoomFOVChanged;                                           // 0x0360(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	EKSCharacterAimMode                                CachedAimMode;                                            // 0x0370(0x0001) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData20[0x3];                                       // 0x0371(0x0003) MISSED OFFSET
	float                                              DefaultAimCameraTransitionTime;                           // 0x0374(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimOverShoulderCameraTransitionTime;                      // 0x0378(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AimDownSightsCameraTransitionTime;                        // 0x037C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnWeaponComponentAimModeChangedDel;                       // 0x0380(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData21[0x38];                                      // 0x0390(0x0038) MISSED OFFSET
	TArray<class UKSWeaponAttachmentCosmeticInst*>     AttachmentCosmetics;                                      // 0x03C8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	ESkinObjectParentingType                           SkinObjectParenting;                                      // 0x03D8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData22[0x3];                                       // 0x03D9(0x0003) MISSED OFFSET
	int                                                ActiveIndex;                                              // 0x03DC(0x0004) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEquipmentBecomeActiveDel;                               // 0x03E0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData23[0x18];                                      // 0x03F0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEquipmentEndActiveDel;                                  // 0x0408(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData24[0x28];                                      // 0x0418(0x0028) MISSED OFFSET
	class UAnimMontage*                                ActiveReloadMontage;                                      // 0x0440(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UAnimMontage*                                ActiveWeaponReloadMontage;                                // 0x0448(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bMultiStageReload;                                        // 0x0450(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bSpeedloaded;                                             // 0x0451(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               PostReloadTimerIsActive;                                  // 0x0452(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               EnableAimsDuringReload;                                   // 0x0453(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bShieldIsActive;                                          // 0x0454(0x0001) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData25[0x33];                                      // 0x0455(0x0033) MISSED OFFSET
	TArray<struct FName>                               ApparelObjectsToListenTo;                                 // 0x0488(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FDataTableInfo>                      BaseAssetDataTables;                                      // 0x0498(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bCreateDataTableForLegacyAssets;                          // 0x04A8(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData26[0x7];                                       // 0x04A9(0x0007) MISSED OFFSET
	class UDynamicSkinTable*                           AssetDataTableManager;                                    // 0x04B0(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMultiSkinObject*                            SkinObject;                                               // 0x04B8(0x0008) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSkinObjectAdded;                                         // 0x04C0(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData27[0x17];                                      // 0x04C1(0x0017) MISSED OFFSET
	struct FVector                                     ViewModelScale;                                           // 0x04D8(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FRotator                                    ViewModelRotation;                                        // 0x04E4(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ViewModelLocationOffset;                                  // 0x04F0(0x000C) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData28[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	float                                              WeaponCombatStateCooldown;                                // 0x0500(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ForceNonCombatShotBlockDistance;                          // 0x0504(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UClass*                                      TargetingVisualizationClass;                              // 0x0508(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsTargeting;                                             // 0x0510(0x0001) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0511(0x0007) MISSED OFFSET
	class UKSWeaponTargetingModule*                    TargetingVisualizerInstance;                              // 0x0518(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UForceFeedbackEffect*                        VibrationEffect;                                          // 0x0520(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UForceFeedbackEffect*                        AlternateVibrationEffect;                                 // 0x0528(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UForceFeedbackAttenuation*                   AlternativeVibrationAttenuation;                          // 0x0530(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class URecoilProfileAsset*                         RecoilProfileAsset;                                       // 0x0538(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bIsMeleeWeaponComponent;                                  // 0x0540(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData30[0x7];                                       // 0x0541(0x0007) MISSED OFFSET
	struct FString                                     VFXSpangKeywordPrefix;                                    // 0x0548(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     DecalSpangKeywordPrefix;                                  // 0x0558(0x0010) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_Config, CPF_GlobalConfig, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FName                                       VFXSpangDefaultKeyword;                                   // 0x0568(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<TEnumAsByte<EPhysicalSurface>, struct FName>  VFXSpangKeywordMap;                                       // 0x0570(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)
	struct FName                                       DecalSpangDefaultKeyword;                                 // 0x05C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	TMap<TEnumAsByte<EPhysicalSurface>, struct FName>  DecalSpangKeywordMap;                                     // 0x05C8(0x0050) (CPF_Transient, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponComponent");
		return ptr;
	}


	bool UsingAccuracyLoss();
	void UpdateOwnerLocallyViewed(bool bIsLocallyViewed);
	void UpdateAimDownSightsBlurValues();
	void TriggerEngagement();
	void TriggerCombat();
	void TickViewerAim(float DeltaTime);
	void TickNonViewerAim(float DeltaTime);
	void StopDefaultAim();
	void StopAimOverShoulder();
	void StopAimDownSights();
	void StopAimAlternate();
	void StartDefaultAim();
	void StartAimOverShoulder();
	void StartAimDownSights();
	void StartAimAlternate();
	bool ShouldBroadcastWeaponStateChange(const struct FKSWeaponDataUpdateContainer& OldState, const struct FKSWeaponDataUpdateContainer& NewState, bool* bReliable);
	void SetWeaponVisibility(bool Visible);
	void SetGamepadTriggerEffect(TEnumAsByte<EGamepadTriggerType> TriggerType, unsigned char TriggerStartPosition, unsigned char TriggerStopPosition, unsigned char TriggerHapticStrength);
	void ReportNewWeaponLowerAlpha(float NewAlpha, float DeltaTime, bool ForceReset);
	void PostCreateWeaponSkeletalMeshComponent(class UKSWeaponSkeletalMeshComponent* CreatedWeaponSkeletalMeshComponent);
	void OnWeaponStateChanged(EWeaponStateNew OldState, EWeaponStateNew NewState);
	void OnUnsetAsActivePrimaryWeapon();
	void OnSkyDiveStarted(class AKSCharacter* SkyDiver);
	void OnSkyDiveSkipped(class AKSCharacter* SkyDiver);
	void OnSkyDiveEnded(class AKSCharacter* SkyDiver);
	void OnSetAsActivePrimaryWeapon();
	void OnRep_WeaponState();
	void OnRep_WeaponAsset();
	void OnRep_InitialState();
	void OnRep_AmmoInClip();
	void OnInvalidFire();
	void OnInitialize();
	void OnFireWeaponFull(const struct FFullFireRepData& Data);
	void OnFireWeapon(const struct FAimData& Aim);
	void OnEmptyFire();
	void OnActiveMaterialsApplied(class USkinnableSkeletalMeshComponent* SkinnableSkelComp);
	void NotifyStopFireReceived();
	bool IsWeaponSilenced();
	bool IsWeaponPendingFireWithValidAmmo();
	bool IsTargetingEnabled();
	bool IsReloading();
	bool IsPrimaryActiveWeapon();
	bool IsModelViewer();
	bool IsClipEmpty();
	bool IsAimingOverShoulder();
	bool IsAimingDownSights();
	bool IsAimingAlternate();
	bool IsAiming();
	bool IsAimedAtFriendly();
	bool IsAimedAtEnemy();
	bool IsActiveWeapon();
	EWeaponStateNew GetWeaponState();
	void GetWeaponSkeletalMeshComponents(TArray<class UKSWeaponSkeletalMeshComponent*>* OutKSWeaponSkeletalMeshComponents);
	class UKSWeaponSkeletalMeshComponent* GetWeaponSkeletalMeshComponentNew();
	class USkeletalMeshComponent* GetWeaponSkeletalMeshComponent();
	class UKSWeaponAsset* GetWeaponAsset();
	class UAnimInstance* GetWeaponAnimInstance();
	float GetWalkSpeedModifier();
	struct FVector GetViewModelScale();
	struct FRotator GetViewModelRotation();
	struct FVector GetViewModelLocationOffet();
	class UForceFeedbackEffect* GetVibrationEffect();
	static struct FName GetVFXSpangKeyword(TEnumAsByte<EPhysicalSurface> SurfaceType);
	class UClass* GetTargetingVisualizationClass();
	class UKSWeaponTargetingModule* GetTargetingModuleInstance();
	struct FName GetScopeSocketName();
	float GetRetrieveTime();
	float GetReloadTime();
	struct FName GetMuzzleSocketName();
	float GetMovementAccuracyPenalty();
	float GetMaxHipFireAccuracy();
	float GetMaxFiringAccuracyLoss();
	float GetMaxFiringAccuracyGain();
	float GetMaxAimedFiringAccuracyGain();
	float GetMaxAimedAccuracy();
	float GetMagnifierValue();
	void GetLoadedAccumulatedAttachmentOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData);
	float GetInAirAccuracyModifier();
	float GetFiringTime();
	class UKSWeaponSkeletalMeshComponent* GetDuplicateSkeletalMeshComponentNew();
	class USkeletalMeshComponent* GetDuplicateSkeletalMeshComponent();
	static struct FName GetDecalSpangKeyword(TEnumAsByte<EPhysicalSurface> SurfaceType);
	float GetDamageModifier(class UClass* DamageTypeClass);
	EVariableFireRateState GetCurrentFireRateState();
	float GetCurrentFireRate();
	float GetCurrentAccuracy();
	float GetCrouchAccuracyModifier();
	unsigned char GetClipSize();
	float GetBaseRetrieveTime();
	float GetBaseReloadTime();
	float GetBaseFiringTime();
	float GetBaseAccuracy();
	void GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments);
	void GetAttachmentCosmeticInstances(TArray<class UKSWeaponAttachmentCosmeticInst*>* OutWeaponAttachmentCosmetics);
	TArray<class USkeletalMeshComponent*> GetAncillaryMeshes();
	int GetAmmoInOwnerInventory();
	unsigned char GetAmmoInClip();
	class UForceFeedbackEffect* GetAlternativeVibrationEffect();
	class UForceFeedbackAttenuation* GetAlternativeVibrationAttenuation();
	float GetAimOverShoulderAccuracyModifier();
	EKSCharacterAimMode GetAimMode();
	float GetAdjustedRetrieveRate();
	float GetAdjustedReloadRate();
	float GetAdjustedFiringRate();
	int GetActiveIndex();
	float GetAccuracyReturnRate();
	float GetAccuracyReturnDelay();
	float GetAccuracyLossPerShot();
	float GetAccuracyGainPerShot();
	float GetAccuracyDecayRate();
	static struct FName GenerateSurfaceBasedKeyword(const struct FString& Prefix, TEnumAsByte<EPhysicalSurface> SurfaceType);
	void ForceRetrieveWeapon();
	void ForceRetrieveState();
	void ForceHolsterWeapon();
	void ForceAttachWeaponToHolsterSocket();
	void ForceAttachWeaponToActiveSocket();
	void ForceAimUpdate();
	void EventUpdateOwnerLocallyViewed(bool bIsLocallyViewed);
	float EvaluateWeaponLowering(float DeltaTime);
	void DropMagazine();
	void DisableGamepadTriggerEffect();
	static void DisableAllGamepadTriggerEffects();
	void DetatchWeaponSkeletalMeshComponentAttachedChildren();
	bool CanUseCombatState(ECombatState TestState);
	bool CanReceiveAttachment(class UKSWeaponAttachment* InAttachment, struct FGameplayTagContainer* AvailableAttachPoints);
	bool CanLowerWeaponNow();
	void CancelReloadCosmetic();
	int CalcAmmoToBeReloaded();
	void BroadcastWeaponStateChange(uint32_t BroadcastId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliableWeaponStateChange(uint32_t BroadcastId, const struct FKSWeaponDataUpdateContainer& NewState);
	void BroadcastReliablePostReload(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastReliablePostFireWithAmmo(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastReliableEmptyFire(uint32_t BroadcastId);
	void BroadcastReliableAmmoChange(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastReliableAimedPostFireWithAmmo(uint32_t BroadcastId, const struct FAimData& Aim, unsigned char InAmmoInClip);
	void BroadcastReliableAimedPostFireFull(uint32_t BroadcastId, const struct FFullFireRepData& Data);
	void BroadcastReliableAimedPostFire(uint32_t BroadcastId, const struct FAimData& Aim);
	void BroadcastPostReload(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastPostFireWithAmmo(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastEmptyFire(uint32_t BroadcastId);
	void BroadcastCurrentFireRateStateHasChanged(EVariableFireRateState State, float Timestamp, float PostFireTime);
	void BroadcastAmmoChange(uint32_t BroadcastId, unsigned char InAmmoInClip);
	void BroadcastAimedPostFireWithAmmo(uint32_t BroadcastId, const struct FAimData& Aim, unsigned char InAmmoInClip);
	void BroadcastAimedPostFireFull(uint32_t BroadcastId, const struct FFullFireRepData& Data);
	void BroadcastAimedPostFire(uint32_t BroadcastId, const struct FAimData& Aim);
	void BlueprintPrepareKillCamPlayback();
	void BlueprintPersistentCosmeticsUpdate();
	void BlueprintFinishKillCamPlayback();
	void BlueprintFillLegacyDataTable(class UDataTable* LegacyDataTable);
	void AimDownSightsCheckpoint();
};


// Class Killstreak.KSWeaponFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UKSWeaponFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponFunctionLibrary");
		return ptr;
	}


	void OnTraceReactionDelay__DelegateSignature(bool bBlockingHit, TArray<struct FHitResult> OutHits, const struct FVector& start, const struct FVector& end);
	static bool MultiLineWeaponTraceByObjectType(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& start, const struct FVector& end, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool MultiLineWeaponTraceByChannel(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& start, const struct FVector& end, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool MeleeSphereOverlapComponents(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool MeleeSphereOverlapActors(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness, TArray<class AActor*>* OutActors);
	static bool MeleeBoxOverlapComponents(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& BoxPos, const struct FRotator& BoxRot, const struct FVector& Extent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness, TArray<class UPrimitiveComponent*>* OutComponents);
	static bool MeleeBoxOverlapActors(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, const struct FVector& BoxPos, const struct FRotator& BoxRot, const struct FVector& BoxExtent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UClass* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, const struct FLinearColor& TraceColor, float DrawTime, float Thickness, TArray<class AActor*>* OutActors);
	static float GetGadgetThrowSpeedMultiplier(class APawn* Instigator);
	static float GetGadgetOuterRadiusMultiplier(class APawn* Instigator);
	static float GetGadgetInnerRadiusMultiplier(class APawn* Instigator);
	static float GetGadgetFXSizeMultiplier(class APawn* Instigator);
	static struct FTransform GetAimRelativeTransform(const struct FVector& AimOrigin, const struct FVector& InitialDirection, const struct FVector& AdditionalOffset, const struct FRotator& AdditionalRotation, bool bIgnoreZAxisForDirection);
	static void GenerateShotgunSpreadAimDataV2Exact(int PelletCount, float Accuracy, const struct FAimData& InAim, class UKSWeaponAsset* InWeaponAsset, class AActor* InWeaponOwner, float InRange, class UObject* WorldContextObject, struct FRandomStream* RandomStream, struct FAimData* OutAim);
	static void GenerateShotgunSpreadAimDataV2(int PelletCount, float Accuracy, const struct FAimData& InAim, class UKSWeaponAsset* InWeaponAsset, struct FRandomStream* RandomStream, struct FAimData* OutAim);
	static void GenerateShotgunSpreadAimData(int PelletCount, float Accuracy, const struct FAimData& Aim, struct FRandomStream* RandomStream, TArray<struct FAimData>* OutSpread);
	static void FrameDelayForTrace(class UObject* WorldContextObject, int NumFramesToDelay, bool bBlockingHit, TArray<struct FHitResult> Hits, const struct FVector& start, const struct FVector& end, const struct FScriptDelegate& OnDelayComplete, const struct FLatentActionInfo& LatentInfo);
	static void FindShotgunPelletHitData(class AKSWeapon* InWeapon, TArray<struct FHitResult> ShotgunHits, struct FShotgunHitData* PelletHitData);
	static bool EventSingleShotgunLineTraceByChannelV2(class UObject* WorldContextObject, const struct FAimData& InAim, float PelletRange, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool EventSingleShotgunLineTraceByChannel(class UObject* WorldContextObject, TArray<struct FAimData> Spread, float PelletRange, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static void EventMultiShotgunLineTraceByChannelV3(class UObject* WorldContextObject, int ShotPenetrationCount, const struct FAimData& InAim, float PelletRange, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLatentActionInfo& LatentInfo, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool EventMultiShotgunLineTraceByChannelV2(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, int ShotPenetrationCount, const struct FAimData& InAim, float PelletRange, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool EventMultiShotgunLineTraceByChannel(class UObject* WorldContextObject, class UKSWeaponAsset* Weapon, int ShotPenetrationCount, TArray<struct FAimData> Spread, float PelletRange, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);
	static bool DoRadialDamageWithPreventionChannel(class UObject* WorldContextObject, const struct FVector& Origin, class UKSWeaponAsset* InAsset, TArray<class AActor*> IgnoreActors, class UClass* DamageTypeClass, class AController* DamageInstigator, class AActor* DamageCauser, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);
	static bool DoRadialDamage(class UObject* WorldContextObject, const struct FVector& Origin, class UKSWeaponAsset* InAsset, TArray<class AActor*> AdditionalIgnoreActors, class AController* DamageInstigator, class AActor* DamageCauser);
	static float DoPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageTypeClass, bool bSkipFriendlyFireDamageTracking);
	static void CongregateShotgunHits(class AKSWeapon* InWeapon, TArray<struct FHitResult> ShotgunHits, TArray<struct FCongregatedShotgunHit>* CongregatedResults);
};


// Class Killstreak.KSWeaponPropManagerComponent
// 0x01C0 (0x0270 - 0x00B0)
class UKSWeaponPropManagerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x00B0(0x00B8) MISSED OFFSET
	TArray<struct FActiveWeaponProp>                   ActiveNamelessProps;                                      // 0x0168(0x0010) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<struct FPropIdentifier, struct FActiveWeaponProp> ActiveProps;                                              // 0x0178(0x0050) (CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TMap<struct FPropIdentifier, struct FLegacyWeaponProp> LegacyProps;                                              // 0x01C8(0x0050) (CPF_Transient, CPF_DuplicateTransient, CPF_ContainsInstancedReference, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0218(0x0050) MISSED OFFSET
	bool                                               bAllowAnimNotifyStatesToCreatePropSpawners;               // 0x0268(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0269(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponPropManagerComponent");
		return ptr;
	}

};


// Class Killstreak.KSWeaponSkeletalMeshComponent
// 0x0040 (0x0DB0 - 0x0D70)
class UKSWeaponSkeletalMeshComponent : public UKSSkeletalMeshComponent
{
public:
	bool                                               bApplySkeletalMeshBoundsParameterToMaterials;             // 0x0D70(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D71(0x0003) MISSED OFFSET
	struct FName                                       SkeletalMeshBoundsParameterName;                          // 0x0D74(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalLengthParameterToMaterials;                 // 0x0D7C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0D7D(0x0003) MISSED OFFSET
	struct FName                                       SkeletalMeshLengthParameterName;                          // 0x0D80(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalWidthParameterToMaterials;                  // 0x0D88(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0D89(0x0003) MISSED OFFSET
	struct FName                                       SkeletalMeshWidthParameterName;                           // 0x0D8C(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bApplySkeletalHeightParameterToMaterials;                 // 0x0D94(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0D95(0x0003) MISSED OFFSET
	struct FName                                       SkeletalMeshHeightParameterName;                          // 0x0D98(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_Config, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0DA0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWeaponSkeletalMeshComponent");
		return ptr;
	}

};


// Class Killstreak.KSWingSuitCosmeticComponent
// 0x0058 (0x0200 - 0x01A8)
class UKSWingSuitCosmeticComponent : public UKSWeaponAttachmentCosmeticInst
{
public:
	struct FName                                       SocketAttachPoint;                                        // 0x01A8(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FString                                     AssetPrefix;                                              // 0x01B0(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bShouldDodgeRollOnLanding;                                // 0x01C0(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	TArray<struct FDataTableInfo>                      BaseAssetDataTables;                                      // 0x01C8(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>            WingSuitVFXList;                                          // 0x01D8(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_ContainsInstancedReference, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StartSFX;                                                 // 0x01E8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               LoopSFX;                                                  // 0x01F0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StopSFX;                                                  // 0x01F8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWingSuitCosmeticComponent");
		return ptr;
	}


	void OnWingSuitCosmeticInitialized();
	void OnFreeFallStartedNative();
	void OnFreeFallStarted();
	void OnFreeFallEndedNative();
	void OnFreeFallEnded();
};


// Class Killstreak.KSWorldSettings
// 0x01C0 (0x0590 - 0x03D0)
class AKSWorldSettings : public APGame_WorldSettings
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03D0(0x0010) MISSED OFFSET
	bool                                               bUseLowDrainBatteryMode;                                  // 0x03E0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03E1(0x0007) MISSED OFFSET
	class UParticleSystemPoolComponent*                ParticleSystemPoolComponent;                              // 0x03E8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UDecalPoolComponent*                         DecalPoolComponent;                                       // 0x03F0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UGunshotDecalPoolComponent*                  GunshotDecalPoolComponent;                                // 0x03F8(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class USkeletalMeshPoolComponent*                  SkeletalMeshPoolComponent;                                // 0x0400(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UStaticMeshPoolComponent*                    StaticMeshPoolComponent;                                  // 0x0408(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UTracerParticlePoolComponent*                TracerParticlePoolComponent;                              // 0x0410(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UTracerStaticMeshPoolComponent*              TracerStaticMeshPoolComponent;                            // 0x0418(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	class UAkPoolComponent*                            AkPoolComponent;                                          // 0x0420(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	int                                                EchoRequestCount;                                         // 0x0428(0x0004) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x14];                                      // 0x042C(0x0014) MISSED OFFSET
	struct FString                                     FriendlyAudioName;                                        // 0x0440(0x0010) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FString                                     FriendlyAchievementName;                                  // 0x0450(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                        MapTags;                                                  // 0x0460(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       AudioPlayerToSpawn;                                       // 0x0470(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class UBakedOcclusionLUT*                          AudioOcclusionLUT;                                        // 0x0498(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	TMap<struct FName, bool>                           BoolPropertyMap;                                          // 0x04A0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, int>                            IntPropertyMap;                                           // 0x04F0(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          FloatPropertyMap;                                         // 0x0540(0x0050) (CPF_Edit, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSWorldSettings");
		return ptr;
	}


	void LevelActorDestroyed(class AActor* TheActor);
};


// Class Killstreak.KSZipLineStart
// 0x0000 (0x0030 - 0x0030)
class UKSZipLineStart : public UKSInteractionState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSZipLineStart");
		return ptr;
	}

};


// Class Killstreak.KSZipLine
// 0x0080 (0x02A0 - 0x0220)
class AKSZipLine : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET
	TArray<class AKSCharacter*>                        ZipLiners;                                                // 0x0230(0x0010) (CPF_ZeroConstructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ZipStart;                                                 // 0x0240(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ZipEnd;                                                   // 0x024C(0x000C) (CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	struct FVector                                     ZipHangOffset;                                            // 0x0258(0x000C) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              ZipSpeed;                                                 // 0x0264(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bReadyToRide;                                             // 0x0268(0x0001) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0269(0x0003) MISSED OFFSET
	float                                              CooldownTime;                                             // 0x026C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              MinimumInteractTime;                                      // 0x0270(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              InteractTime;                                             // 0x0274(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              LengthToEndToIgnore;                                      // 0x0278(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bUpline;                                                  // 0x027C(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bGrabFromBehind;                                          // 0x027D(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bForgivingInteractionAngle;                               // 0x027E(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x1];                                       // 0x027F(0x0001) MISSED OFFSET
	class UClass*                                      InteractionType;                                          // 0x0280(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoReleaseDistance;                                      // 0x0288(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoReleaseSpeed;                                         // 0x028C(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	float                                              AutoReleasePitchAngle;                                    // 0x0290(0x0004) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	bool                                               bSupportsPreHold;                                         // 0x0294(0x0001) (CPF_Edit, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0295(0x0003) MISSED OFFSET
	class UKSInteractionBlockerManager*                InteractionBlockerManager;                                // 0x0298(0x0008) (CPF_ExportObject, CPF_Net, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSZipLine");
		return ptr;
	}


	void SetReadyToRide(bool bIsReadyToRide);
	void OnPlayerZiplineCooldownEnd(class AKSCharacter* Character);
	void OnPlayerStopZiplining(class AKSCharacter* Character);
	void OnPlayerStartZiplining(class AKSCharacter* Character);
	bool IsUpline();
	float GetAutoReleaseDistance();
	struct FVector ComputeAutoReleaseVelocity(const struct FRotator& CharRotation);
};


// Class Killstreak.KSZipLine_Dynamic
// 0x0000 (0x02A0 - 0x02A0)
class AKSZipLine_Dynamic : public AKSZipLine
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSZipLine_Dynamic");
		return ptr;
	}


	void SetDynamicAnchors(const struct FVector& StartAnchor, const struct FVector& EndAnchor);
};


// Class Killstreak.KSZiplineAnimInst
// 0x0030 (0x10D0 - 0x10A0)
class UKSZiplineAnimInst : public UKSCharacterAnimInst
{
public:
	struct FRotator                                    UpperWheelRotator;                                        // 0x10A0(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    LowerWheelRotator;                                        // 0x10AC(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	struct FRotator                                    ZiplineTopLockRot;                                        // 0x10B8(0x000C) (CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierPitch;                           // 0x10C4(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierRoll;                            // 0x10C8(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              ZiplineTopLockRotModifierYaw;                             // 0x10CC(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSZiplineAnimInst");
		return ptr;
	}

};


// Class Killstreak.KSZiplineMeshComponent
// 0x0000 (0x0D70 - 0x0D70)
class UKSZiplineMeshComponent : public UKSSkeletalMeshComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.KSZiplineMeshComponent");
		return ptr;
	}


	void StartZiplining();
	void EndZiplining();
};


// Class Killstreak.LoadingScreenImageManager
// 0x0070 (0x00A0 - 0x0030)
class ULoadingScreenImageManager : public UDataAsset
{
public:
	struct FLoadingScreenImageInfo                     FailSafeLoadingScreen;                                    // 0x0030(0x0070) (CPF_Edit, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.LoadingScreenImageManager");
		return ptr;
	}

};


// Class Killstreak.LoadoutClassCollection
// 0x0050 (0x00E8 - 0x0098)
class ULoadoutClassCollection : public UItemCollection
{
public:
	struct FText                                       CollectionName;                                           // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       CollectionDescription;                                    // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00C8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.LoadoutClassCollection");
		return ptr;
	}

};


// Class Killstreak.LobbyPlayerController
// 0x0010 (0x06C0 - 0x06B0)
class ALobbyPlayerController : public APGame_PlayerController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B0(0x0008) MISSED OFFSET
	class UClass*                                      PendingHUDClass;                                          // 0x06B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.LobbyPlayerController");
		return ptr;
	}


	void UIX_FlushPressedKeys();
	void LoadRoute(const struct FName& RouteName, bool ForceTransition);
	void ClearDeserterPenalty();
};


// Class Killstreak.ParticleSystemChannelComponent
// 0x0000 (0x06B0 - 0x06B0)
class UParticleSystemChannelComponent : public UParticleSystemComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ParticleSystemChannelComponent");
		return ptr;
	}


	void UpdateChannels();
};


// Class Killstreak.PerkCategory
// 0x00B0 (0x0148 - 0x0098)
class UPerkCategory : public UItemCollection
{
public:
	struct FText                                       PerkCategoryName;                                         // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       PerkCategoryDescription;                                  // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       AssociatedPerkTree;                                       // 0x00C8(0x0028) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorLight;                                          // 0x00F0(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FLinearColor                                ThemeColorDark;                                           // 0x0100(0x0010) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_ZeroConstructor, CPF_DisableEditOnInstance, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0110(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   PerkCategoryIcon;                                         // 0x0120(0x0028) (CPF_Edit, CPF_DisableEditOnInstance, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.PerkCategory");
		return ptr;
	}


	TSoftObjectPtr<class UTexture2D> GetSoftCategoryIcon();
};


// Class Killstreak.PersistentPlayerLoadoutComponent
// 0x0068 (0x0120 - 0x00B8)
class UPersistentPlayerLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x00C8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	class UKSJobItem*                                  JobToUse;                                                 // 0x0118(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.PersistentPlayerLoadoutComponent");
		return ptr;
	}


	void OwnerChangedPersistentPlayerData();
};


// Class Killstreak.PlayerInfoPrevwLoadoutComponent
// 0x0098 (0x0150 - 0x00B8)
class UPlayerInfoPrevwLoadoutComponent : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                               // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UKSJobItem>                   FailSafeJob;                                              // 0x00C0(0x0028) (CPF_Config, CPF_GlobalConfig, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x00E8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UKSPlayerInfo>                WeakPlayerInfo;                                           // 0x0138(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0140(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.PlayerInfoPrevwLoadoutComponent");
		return ptr;
	}

};


// Class Killstreak.PreviewActorLoadoutComponentDirect
// 0x0060 (0x0118 - 0x00B8)
class UPreviewActorLoadoutComponentDirect : public UPreviewActorLoadoutComponent
{
public:
	class UKSJobItem*                                  CurrentJob;                                               // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UKSSkinBundle*                               CurrentSkin;                                              // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TMap<class UKSItem*, class UKSItem*>               SkinMap;                                                  // 0x00C8(0x0050) (CPF_Transient, CPF_Protected, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.PreviewActorLoadoutComponentDirect");
		return ptr;
	}

};


// Class Killstreak.SafeToCookAssetLabel
// 0x0000 (0x0068 - 0x0068)
class USafeToCookAssetLabel : public UPrimaryAssetLabel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.SafeToCookAssetLabel");
		return ptr;
	}

};


// Class Killstreak.SkinBundleCollection
// 0x00D0 (0x0168 - 0x0098)
class USkinBundleCollection : public UItemCollection
{
public:
	struct FText                                       SkinBundleCollectionName;                                 // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       SkinBundleCollectionDescription;                          // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x00C8(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.SkinBundleCollection");
		return ptr;
	}

};


// Class Killstreak.SmoothRepTimelineActor
// 0x0020 (0x0240 - 0x0220)
class ASmoothRepTimelineActor : public AActor
{
public:
	struct FTimelineSimulationHandler                  SmoothTimeline;                                           // 0x0220(0x0014) (CPF_Edit, CPF_Net, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_RepNotify, CPF_NoDestructor, CPF_Protected, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0234(0x0004) MISSED OFFSET
	class UTimelineComponent*                          TimelineComponentToSimulate;                              // 0x0238(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.SmoothRepTimelineActor");
		return ptr;
	}


	void SetTimelineComponentToSimulate(class UTimelineComponent* InTimelineComponent);
	void OnRep_SmoothTimeline();
};


// Class Killstreak.SplineMovementComponent
// 0x0088 (0x0178 - 0x00F0)
class USplineMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      bPauseOnImpact : 1;                                       // 0x00F0(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	ESplineBehaviourType                               BehaviourType;                                            // 0x00F4(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	unsigned char                                      bForceSubStepping : 1;                                    // 0x00F8(0x0001) (CPF_Edit, CPF_BlueprintVisible, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSplineReverse;                                          // 0x0100(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSplineStop;                                             // 0x0110(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaitBeginDelegate;                                      // 0x0120(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaitEndDelegate;                                        // 0x0130(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResetDelegate;                                          // 0x0140(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_BlueprintAssignable, CPF_NativeAccessSpecifierPublic)
	float                                              MaxSimulationTimeStep;                                    // 0x0150(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	int                                                MaxSimulationIterations;                                  // 0x0154(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class USplineComponent*                            Spline;                                                   // 0x0158(0x0008) (CPF_Edit, CPF_BlueprintVisible, CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              Speed;                                                    // 0x0160(0x0004) (CPF_Edit, CPF_BlueprintVisible, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x14];                                      // 0x0164(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.SplineMovementComponent");
		return ptr;
	}


	void StopSimulating(const struct FHitResult& HitResult);
	void SetInitialOffsetOnSpline(float Distance);
	void RestartMovement(float InitialDirection);
	void OnSplineWaitEndDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineWaitBeginDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineReverseDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void OnSplineResetDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);
	void GoToTime(float Time);
	float GetAlpha();
};


// Class Killstreak.ThermalScopeManagerComponent
// 0x0050 (0x0100 - 0x00B0)
class UThermalScopeManagerComponent : public UActorComponent
{
public:
	class UClass*                                      ThermalScopePPComponentClass;                             // 0x00B0(0x0008) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	class AKSCharacter*                                CharacterOwner;                                           // 0x00C0(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<struct FActiveThermalPPComponentInfo>       ActiveThermals;                                           // 0x00C8(0x0010) (CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x28];                                      // 0x00D8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ThermalScopeManagerComponent");
		return ptr;
	}


	static class UThermalScopeManagerComponent* CreateThermalManagerComponent(class AKSCharacter* InCharacter, class UKSWeaponComponent* InWeaponComponent, class UClass* ThermalPostProcessClass);
};


// Class Killstreak.ThermalScopePPComponent
// 0x0028 (0x00D8 - 0x00B0)
class UThermalScopePPComponent : public UActorComponent
{
public:
	class UThermalScopeManagerComponent*               ManagerComponent;                                         // 0x00B0(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_Transient, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	class AKSPlayerCameraManager*                      CameraManagerOwner;                                       // 0x00B8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_DuplicateTransient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInterface*                          ThermalPostProcessMaterial;                               // 0x00C0(0x0008) (CPF_Edit, CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    ThermalPostProcessMaterialDynamic;                        // 0x00C8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ThermalScopePPComponent");
		return ptr;
	}

};


// Class Killstreak.TracerParticlePoolComponent
// 0x0000 (0x0150 - 0x0150)
class UTracerParticlePoolComponent : public UParticleSystemPoolComponentBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.TracerParticlePoolComponent");
		return ptr;
	}


	void OnTracerDestinationReached(class USceneComponent* TracerComponent);
};


// Class Killstreak.TracerParticleSystemComponent
// 0x0030 (0x06E0 - 0x06B0)
class UTracerParticleSystemComponent : public UParticleSystemComponent
{
public:
	struct FVector                                     start;                                                    // 0x06B0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     end;                                                      // 0x06BC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TravelSpeed;                                              // 0x06C8(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDestroyOnDestinationReached;                             // 0x06CC(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDeactivateOnDestinationReached;                          // 0x06CD(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableTravel;                                            // 0x06CE(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x06CF(0x0001) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTracerParticleReachedDestiniationDel;                   // 0x06D0(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.TracerParticleSystemComponent");
		return ptr;
	}

};


// Class Killstreak.TracerStaticMeshComponent
// 0x0040 (0x0530 - 0x04F0)
class UTracerStaticMeshComponent : public UStaticMeshComponent
{
public:
	struct FVector                                     start;                                                    // 0x04F0(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	struct FVector                                     end;                                                      // 0x04FC(0x000C) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	float                                              TravelSpeed;                                              // 0x0508(0x0004) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bDestroyOnDestinationReached;                             // 0x050C(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	bool                                               bEnableTravel;                                            // 0x050D(0x0001) (CPF_ZeroConstructor, CPF_IsPlainOldData, CPF_NoDestructor, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x050E(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTracerParticleReachedDestiniationDel;                   // 0x0510(0x0010) (CPF_ZeroConstructor, CPF_InstancedReference, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0520(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.TracerStaticMeshComponent");
		return ptr;
	}

};


// Class Killstreak.TracerStaticMeshPoolComponent
// 0x0078 (0x0148 - 0x00D0)
class UTracerStaticMeshPoolComponent : public UBasePoolComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	class UClass*                                      PooledTraceStaticMeshComponentClass;                      // 0x00D8(0x0008) (CPF_ZeroConstructor, CPF_Transient, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_UObjectWrapper, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	TArray<class UTracerStaticMeshComponent*>          UnusedComponentsArray;                                    // 0x00E0(0x0010) (CPF_ExportObject, CPF_ZeroConstructor, CPF_ContainsInstancedReference, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x50];                                      // 0x00F0(0x0050) UNKNOWN PROPERTY: UsedComponentsSet
	class UTracerStaticMeshComponent*                  PeekedTracerStaticMeshComponent;                          // 0x0140(0x0008) (CPF_ExportObject, CPF_ZeroConstructor, CPF_InstancedReference, CPF_IsPlainOldData, CPF_NoDestructor, CPF_Protected, CPF_HasGetValueTypeHash, CPF_NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.TracerStaticMeshPoolComponent");
		return ptr;
	}


	void OnTracerDestinationReached(class USceneComponent* TracerComponent);
};


// Class Killstreak.ViewDependentRules_1PCamera
// 0x0000 (0x0028 - 0x0028)
class UViewDependentRules_1PCamera : public UViewDependentAkEventRules
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.ViewDependentRules_1PCamera");
		return ptr;
	}

};


// Class Killstreak.WeaponCollection
// 0x0040 (0x00D8 - 0x0098)
class UWeaponCollection : public UItemCollection
{
public:
	struct FText                                       WeaponCollectionName;                                     // 0x0098(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	struct FText                                       WeaponCollectionDescription;                              // 0x00B0(0x0018) (CPF_Edit, CPF_BlueprintVisible, CPF_BlueprintReadOnly, CPF_DisableEditOnInstance, CPF_NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00C8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindObject<UClass>("Class Killstreak.WeaponCollection");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
